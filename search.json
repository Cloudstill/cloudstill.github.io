[{"title":"2024年1月7日每周总结","url":"/2024/01/06/2024%E5%B9%B41%E6%9C%885%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/","content":"牛客小白月赛85半小时不到开出A、B、C，后面两小时（包括赛后半小时）没开出来D，赛场上浅看了一下E没做，赛后补出来E，F题DP不会做，贪心过了40%，看大佬代码补。\nA-ACCEPT题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/A\n解题思路签到，字符哈希处理出现次数找到最小值（C取一半），有一点木桶效应的意思。\n代码#include&lt;bits/stdc++.h&gt;#define x first#define y secondusing namespace std;int main()&#123;    int t;    cin &gt;&gt; t;    while(t--)    &#123;        int n;        cin &gt;&gt; n;        string str;        cin &gt;&gt; str;        map&lt;char, int&gt; mci;        mci[&#x27;A&#x27;] = 0;        mci[&#x27;C&#x27;] = 0;        mci[&#x27;E&#x27;] = 0;        mci[&#x27;P&#x27;] = 0;        mci[&#x27;T&#x27;] = 0;        for(int i = 0; i &lt; n; i++)        &#123;            if(str[i] == &#x27;A&#x27; || str[i] == &#x27;C&#x27; || str[i] == &#x27;E&#x27; || str[i] == &#x27;P&#x27; || str[i] == &#x27;T&#x27;)                mci[str[i]]++;        &#125;        int ans = n;        for(auto i : mci)        &#123;            int tmp = i.y;            if(i.x == &#x27;C&#x27;)    tmp /= 2;            ans = min(ans, tmp);        &#125;        cout &lt;&lt; ans &lt;&lt; &#x27;\\n&#x27;;    &#125;    return 0;&#125;\n\nB-咕呱蛙题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/B\n解题思路签到题，有规律如下：奇奇偶偶，故得解。\n代码#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123;    long long n;    cin &gt;&gt; n;    cout &lt;&lt; n + ((n - 1) / 2 + 1) * 2;    return 0;&#125;\n\nC-得分显示题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/C\n解题思路对于每一关的得分都计算平均得分，求出其中最大值。因为每天的得分只保留整数，故对每天的得分都加1，最后输出结果再减0.00000000001。\n代码#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 1e6 + 10;int p[N];int main()&#123;    int n;    long double x = 0;    cin &gt;&gt; n;    for(int i = 0; i &lt; n; i++)        cin &gt;&gt; p[i];    x = p[n - 1] + 1;    for(int i = 0; i &lt; n; i++)    &#123;        long double tmp = (long double)(p[i] + 1) / (i + 1);        x = min(x, tmp);    &#125;      x -= 0.00000000001;    printf(&quot;%.10llf&quot;, x);    return 0;&#125;\n\nD-阿里马马与四十大盗题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/D\n解题思路先判断是否满足逃生要求，若满足要求则尽可能提前最后一次恢复的时间，该时间之前所有的陷阱所扣血量加上每一步自然消耗的时间即为答案。\n代码#include &lt;bits/stdc++.h&gt;using namespace std;const int N = 1e5 + 10;using ll = long long ;ll a[N], s[N];void solve()&#123;\tint n, m;\tcin &gt;&gt; n &gt;&gt; m;\tfor (int i = 1; i &lt;= n; i++)\t&#123;\t\tcin &gt;&gt; a[i];\t\ts[i] = s[i - 1] + a[i];\t&#125;\tll sum = 0, ans = 1e18;\tfor (int i = 1; i &lt;= n; i++)\t&#123;\t\tif (a[i] == 0) sum = 0;\t\telse sum += a[i];\t\tif (sum &gt;= m)\t\t&#123;\t\t\tcout &lt;&lt; &quot;NO\\n&quot;;\t\t\treturn ;\t\t&#125;\t&#125;\tsum = 0;\tfor (int i = n; i &gt;= 1; i--)\t&#123;\t\tsum += a[i];\t\tif (a[i] == 0 &amp;&amp; sum &lt; m) ans = min(ans, s[i - 1]);\t&#125;\tcout &lt;&lt; ans + n - 1 &lt;&lt; &#x27;\\n&#x27;;&#125;signed main()&#123;\tios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\tsolve();\treturn 0;&#125;\n\nE-烙饼题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/E\n解题思路根据题意有以下两个结论：\n\n总花费的时间等于$max(a_i,\\frac{\\sum_{1}^{n} a_i}{n})$\n一张饼所花费的烙饼时间小于两倍的总时间，即一张饼只需要两个烙饼机。\n\n故只需要先求出总花费的时间并遍历每一张饼判断与总时间的关系，据此将烙饼信息添加到数组中，最后输出数组内容即可。\n代码#include&lt;bits/stdc++.h&gt;using namespace std;using ll = long long;const int N = 1e5 + 10;const int M = 2 * N;ll a[N];ll id1[M], id2[M], l[M], r[M];ll si = 0;void add(ll a, ll b, ll c, ll d)&#123;    id1[si] = a;    id2[si] = b;    l[si] = c;    r[si] = d;    si += 1;&#125;int main()&#123;    ll n, m, ma = 0, s = 0;    cin &gt;&gt; n &gt;&gt; m;    for(int i = 1; i &lt;= n; i++)        &#123;        cin &gt;&gt; a[i];        s += a[i];        ma = max(ma, a[i]);    &#125;    ll top = max(ma, (s + m - 1) / m);    ll x = 1, y = 0;    for(int i = 1; i &lt;= n; i++)    &#123;        if(a[i] + y &gt;= top)        &#123;            add(i, x, y, top);            a[i] -= top - y;            x += 1;            y = 0;        &#125;        if(a[i] != 0)        &#123;            add(i, x, y, y + a[i]);            y += a[i];           &#125;    &#125;    cout &lt;&lt; si &lt;&lt; &#x27;\\n&#x27;;    for(int i = 0; i &lt; si; i++)    &#123;        cout &lt;&lt; id1[i] &lt;&lt; &#x27; &#x27;;        cout &lt;&lt; id2[i] &lt;&lt; &#x27; &#x27;;        cout &lt;&lt; l[i] &lt;&lt; &#x27; &#x27;;        cout &lt;&lt; r[i] &lt;&lt; &#x27;\\n&#x27;;    &#125;    return 0;&#125;\n\nF-龙吸水（EASY）题目详情\n原题链接https://ac.nowcoder.com/acm/contest/72980/F\n解题思路本来以为是贪心结果只过了40%，后来知道了是DP题但有点难，还没想明白，等有这个能力的时候再补完。\n40%贪心代码#include&lt;bits/stdc++.h&gt;using namespace std;const int N = 1e4;int a[N], b[N];int main()&#123;    int ans = 0;    int n, l, r;    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;    for(int i = 1; i &lt;= n; i++)    &#123;        cin &gt;&gt; a[i];        b[i] = a[i] - a[i - 1];    &#125;    for(int i = 1; i &lt;= n; i++)    &#123;        a[i] = max(0, a[i - 1] + b[i]);        if(a[i] &gt; r)    a[i] = r;    &#125;    for(int i = 1; i &lt;= n; i++)        if(l &lt;= a[i] &amp;&amp; a[i] &lt;= r)            ans += 1;    cout &lt;&lt; ans &lt;&lt; &#x27;\\n&#x27;;    return 0;&#125;\n\nCF Hello 2024A. Wallet Exchange题目详情\n原题链接https://codeforces.com/contest/1919/problem/A\n解题思路签到题，根据总和的奇偶性可以判断胜负。\n代码#include &lt;bits/stdc++.h&gt;using namespace std;int main()&#123;\tint t;\tcin &gt;&gt; t;\twhile(t--)\t&#123;\t\tint a, b;\t\tcin &gt;&gt; a &gt;&gt; b;\t\tint tmp = abs(a - b);\t\tif(tmp % 2 == 0)\t\t\tcout &lt;&lt; &quot;Bob\\n&quot;;\t\telse\t\t\tcout &lt;&lt; &quot;Alice\\n&quot;;\t&#125;\treturn 0;&#125;\n\nB. Plus-Minus Split题目详情\n原题链接https://codeforces.com/contest/1919/problem/B\n解题思路根据样例不难得出答案为两符号个数之差的绝对值。\n代码#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123;\tint t;\tcin &gt;&gt; t;\twhile(t--)\t&#123;\t\tint n;\t\tstring str;\t\tint add = 0, sub = 0;\t\tcin &gt;&gt; n &gt;&gt; str;\t\tfor(int i = 0; i &lt; n; i++)\t\t\tif(str[i] == &#x27;+&#x27;)\t\t\t\tadd += 1;\t\t\telse\tsub += 1;\t\tcout &lt;&lt; abs(add - sub) &lt;&lt; &#x27;\\n&#x27;;\t&#125;\treturn 0;&#125;\n\nC. Grouping Increases题目详情\n原题链接https://codeforces.com/contest/1919/problem/C\n解题思路一开始以为贪心但是wa了后来觉得可能是dp但还是没过，看别人代码大概理解了自己的贪心少了保证一个序列的最后一个元素小于另一个的这一步。\n解题流程就是遍历原序列将元素加到a或b序列中，优先构造逆序对，若无法构造逆序对则将其加入到a序列并计数加一，同时保证a序列的最后一个元素永远小于b序列，最后输出计数即可。\n代码#include&lt;bits/stdc++.h&gt;using namespace std;int main()&#123;\tint t;\tcin &gt;&gt; t;\twhile (t--)\t&#123;\t\tint n;\t\tcin &gt;&gt; n;\t\tvector&lt;int&gt; v(n);\t\tint a = 1e9, b = 1e9, x = 0;\t\tfor(auto&amp; i : v)\t\t&#123;\t\t\tcin &gt;&gt; i;\t\t\tif(a &gt; b) swap(a, b);\t\t\tif(i &lt;= a) a = i;\t\t\telse if(i &lt;= b) b = i;\t\t\telse a = i, x += 1;\t\t&#125;\t\tcout &lt;&lt; x &lt;&lt; endl;\t&#125;\treturn 0;&#125;","categories":["刷题"],"tags":["算法"]},{"title":"C语言教程_01：编译环境","url":"/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-01%EF%BC%9A%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/","content":"前言学习C语言，一个好用的ide必不可少。ide即集成开发环境，它将编辑、构建、测试和打包等功能结合到一起，相较于手动编译要方便不少。目前各大高校在教学时大多采用的是VC++6.0作为编译环境，众所周知，这款ide由微软于1993年推出，其年龄相较于我而言也要大上10岁。计算机学科本身就是一门走在时代前沿需要创新的学科，一款落后于时代的ide，即使它十分经典，在笔者看来，也是可以被优化的。\nVisual Studio 2022本教程推荐Visual Studio 2022作为编译环境，其原因有以下几点，一是由于它够新，对于新手学习C语言而言其相对比较友好，一旦体验过&#96;Visual Studio 2022和其他ide，如上文所提及的VC++6.0，你就明显感觉到它的好用；二则是你可以在Visual Studio官网免费下载Visual Studio Community 2022。你可以通过搜索引擎搜索Visual Studio 2022到官网下载，你也可以点击此处进行下载。\nVisual Studio 2022使用教学关于Visual Studio 2022的使用教学，受限于文字形式，无法具体地和大家展开，这里推荐B站的一位up主，同时也是我C语言的启蒙老师：Micro_Frank你也可以在B站搜索由他创作的 vs2022(Visual Studio 2022)权威指南&amp;&amp;C语言&amp;&amp;软件工程开发的方向&amp;&amp;技巧要领你可以点击此处直接观看教程\nVisual Studio 2022无法下载目前从官网下载Visual Studio 2022时可能会存在下载进度静止不动的问题，这里提供一种解决方案\nDev-C++此外你也可以选用Dev-C++作为你的编译环境，Dev-C++作为一款较为简单的ide，是许多比赛项目的指定的ide之一。出于此，本教程选用Dev作为编译环境。同样你可以点击此处下载。\nCLionCLion作为JetBrains开发的一款ide，我们耳熟能详的PyCharm和IntelliJ同时也出自其旗下，官方正版的CLion并不免费，你可以点击此处下载。\nVisual Studio CodeVS Code作为微软公司开发的另一款ide，经调试可以支持多种语言，同时具有轻量化的优点，你可以点击此处下载。\n","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"C语言教程_03：printf()与转义字符","url":"/2022/10/19/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-03%EF%BC%9Aprintf%E4%B8%8E%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/","content":"关于printf()在上一节中我们以一个程序为例展开我们C语言学习的第一步，这节我们将再次以它为例：\n#include &lt;stdio.h&gt;int main()&#123;    /* 我的第一个 C 程序 */    printf(&quot;Hello, World! \\n&quot;);    return 0;&#125;\n\n在上一节我们介绍C程序结构时，我们并没有探讨printf()后面跟的()以及其中的内容。以上述程序为例子：\nprintf(&quot;Hello, World! \\n&quot;);\n\n括号所构成的一个整体可以看作printf()的一个宾语，相当于语言学中的动宾结构。而括号内的内容我们可以看到是由一对引号包裹在内的，并且当我们实际运行该程序时，这个引号并没有显示出来，而引号内的其他内容（除了\\n）都被原样打印了出来。由此我们可以知道printf()在打印时，会原样地打印出括号内引号所包裹的大部分内容。那么，为什么\\n不会被打印呢？\n转义字符转义字符（Escape character），所有的ASCII码都可以用“\\”加数字（一般是8进制数字）来表示。而C中定义了一些字母前加”&quot;来表示常见的那些不能显示的ASCII字符，如\\0,\\t,\\n等，就称为转义字符，因为后面的字符，都不是它本来的ASCII字符意思了。关于ASCII码大家可以自行或点击此处了解更多。\n关于\\n在介绍printf()时，我们曾疑惑于为何\\n不会被打印出来，而在刚刚我们了解到了转义字符，明白了转义字符的意义，同时也知道了转义字符不会被显示出来的机制。那么\\n所代表的是什么意思呢？如果你尝试过在我们演示的代码里加入多行printf()而不加\\n，你会发现这些内容前后连接到了一起；而如果你加入了\\n，你会发现它们一行一行分布。由此我们很容易才想到\\n所起到的是换行的作用。那么除了\\n，还有哪些转义字符呢？\n转义字符表\n\n\n转义字符\n意义\nASCII码值（十进制）\n\n\n\n\\a\n响铃(BEL)\n007\n\n\n\\b\n退格(BS) ，将当前位置移到前一列\n008\n\n\n\\f\n换页(FF)，将当前位置移到下页开头\n012\n\n\n\\n\n换行(LF) ，将当前位置移到下一行开头\n010\n\n\n\\r\n回车(CR) ，将当前位置移到本行开头\n013\n\n\n\\t\n水平制表(HT)\n009\n\n\n\\v\n垂直制表(VT)\n011\n\n\n\\‘\n单引号\n039\n\n\n\\“\n双引号\n034\n\n\n\\\\\n反斜杠\n092\n\n\n结语转义字符是C语言中为数不多需要记忆的东西，但我们并不倡导死记硬背，你应当去尝试上述每一个转义字符，在实践中感受它们的作用。\n","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"C语言教程_02：一个简单的C程序","url":"/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-02%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84C%E7%A8%8B%E5%BA%8F/","content":"一个简单的C程序在接触C语言之前，大家或多或少会对C语言产生敬畏之心，认为它是一门很高深的语言，实则不然，且看代码：\n#include &lt;stdio.h&gt;int main()&#123;    /* 我的第一个 C 程序 */     printf(&quot;Hello, World! \\n&quot;);    return 0;&#125;// 注：以//打头的某一行或者用/**/括起来的数行在程序中统称为注释，不会被编译器所编译// 一个好的注释对于程序而言是很重要的，它不仅可以让别人看懂你的代码，也可以便于自我的纠察\n\n运行结果\n代码分析观察这个程序代码，大家会发现它非常的简单，然而，作为一个程序它却相当完整。我们可以简单将其分为三个部分，一是由#include打头的部分，二是int main()，三则是&#123;&#125;内的内容，这三个部分的存在，也就构成了一个完整的C程序接下来将对这三个部分进行逐一分析。\n#include &lt;stdio.h&gt;\n\n#号所起的是一个标识的作用，是一个规范，可以看作无实际意义。include在英文中有包含的意思。stdio.h可以分为四个部分解读，std是standard的缩写，standard意为标准；i是input的缩写，input意为输入；o是output的缩写，output意为输出；h是head的缩写，head意为头，而.h顾名思义则是头文件的后缀。将这样一段代码逐字分析后拼接在一起，清晰指向了一个信息“这个程序可能包含一个标准输入输出的头文件”。\nint main()\n\nint被称为关键字，其作用是指定义main函数返回值的类型为int型，int型即整型，暂且可以将其等价于整数。在程序中这一部分称为函数头。main函数作为C程序中至关重要的部分，在每一个C程序中都会有一个main函数，作为一个程序的入口部分，也就是说程序都是从main函数头开始执行，然后进入到main函数中，执行其中语句的。()内的内容是我们可以填充的，初学C程序，可以暂且不管。\n&#123;    printf(&quot;......&quot;);    ......&#125;\n\n{}可以起到一个囊括的作用，其内部作为一个整体，称之为函数体。printf()作为其中的一部分，我们将其成为执行语句，其中print的意思为打印或者输出，而f是format的缩写，意为格式化，故printf()的意思就是格式化输出括号内的内容。这里我们提到一个词输出，正是我们之前所提到了的“标准输入输出”中的“输出”。\nreturn 0;\n\nreturn 0并不属于执行语句，我们将其称之为return语句。return的作用是向程序返回一个值，在这里就是0，而0又恰好是一个整数，符合int类型。值得一提的是，C程序是严格区分中英文的，一切语句都要用英文进行书写，且在函数体内部的内容，执行语句和return语句末尾，都要加上；表示一条语句的结束，这也就意味着，C程序在编译时会跳过空格以及空行（和注释）直接跳到下一条语句。\n总结对这样一个代码进行逐字分析后，相信大家对于C程序的概念有了一个具体的认知，并且，对于C语言不再过于恐惧。\n","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"C语言教程_06：判断语句二三事","url":"/2022/12/12/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-06%EF%BC%9A%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5%E4%BA%8C%E4%B8%89%E4%BA%8B/","content":"if语句if相信大家都不陌生，在英文中它有着“如果”的意思，它引导的条件状语从句可以翻译为“如果……就……”，而在C语言中，它也有着相同的用法，且看下面的例子：\nif(......)&#123;  ......&#125;\n\n套用英语中的逻辑来理解这个例子，把它翻译成中文就是“如果小括号里面的内容成立，那么花括号里面的内容也成立”。小括号里面可以填什么呢？数字，变量，表达式，关系式都可以。对于数字和变量，在计算机中，无论它们的值是多少，都只有0和非0的区别，非0又可以理解为1。我们都知道在计算机中0表示假，1表示真。即小括号里的数字和变量如果为0，语句不成立，为1（非0）则成立。对于表达式，程序会先将其进行运算之后，再对其数值进行如对数字和变量相同的操作。对于关系式，它们同样遵循01原则，当关系式成立时它们相当于1，当关系式不成立时它们相当于0。说完小括号我们再来说说花括号，花括号里填写的是函数语句，函数语句的成立意味着执行，这也就是说，一旦小括号里的值为1，那么就会执行花括号里的内容。尽管以上方式极易理解，但需要声明的是括号中的内容实际上会进行一次隐式类型转换，即根据表达式的成立与否转换为true或者false。\nif与else不得不说的故事switch语句","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"C语言教程_04：变量与常量","url":"/2022/10/19/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-04%EF%BC%9A%E5%8F%98%E9%87%8F%E4%B8%8E%E5%B8%B8%E9%87%8F/","content":"生活中变量与常量生活中会遇到很多量：一件商品的价格、每个月的生活费……这些量可以被分为两类：常量和变量。\n\n什么是常量？顾名思义，一个常数、一个不变化的量，我们最熟悉的常量就是PAI、自然对数e。\n什么是变量？同样是顾名思义，一个变化的量就是变量。\n常量大家都可以理解，可变量未必理解得容易，这里我们以《植物大战僵尸》为例。在上图中，我们拥有100阳光，而一株豌豆的阳光价格为100。对于阳光，我们所持有的阳光数量会随着我们对阳光的获取和消耗变化，这就是变量。与此同时，豌豆的价格却始终是100，这就是一个常量。\n\nC语言中的变量与常量生活中的变量和常量我们已经了解，那么C语言中的呢？在C语言中，对应一个量而言，我们可以对其进行声明和定义两类操作。任何一个量，它的初始化，也就是声明都是必不可少的。这也就意味着，如果你没有对其进行定义，系统会随机对其定义一个值。一个不变化的变量可以发挥常量的作用，可一个常量却不能随意变化，为了便于学习，我们在本节只介绍变量。\nC语言中变量的声明在最开始我们介绍C程序时，我们说过一句话“int被称为关键字，其作用是指定义main函数返回值的类型为int型，int型即整型，暂且可以将其等价于整数”，当时你可能对这句话不太理解，没关系当我们介绍完变量的声明后，你就会明白。首先我们必须要理解为什么要声明变量，在C语言中会有很多字符，如果我们不声明一个字符，我们就无法判定这个字符是一个变量名，更别说它的类型了。敏锐的读者会注意到上述文字中的两个关键点，变量名和变量的类型\n变量名的命名规范与艺术如同人有名字一样，每一个变量也有着它的名字，作为程序员的我们，就像变量的父母一样，拥有着给它们取名的权利。同样，正如现实生活中取名字有一定规范一样，我们给变量取名也要遵循一定的规则，具体规则如下：\n\n变量名的开头必须为字母或下划线，大小写均可；\n变量名中不可以有符号，但是可以有下划线，也就是“_”；\n变量名中允许使用任意的大小写字母以及数字；\n变量名不能与关键字同名；\n\n如同人有名字一样，变量名也有“好听”与“不好听”的区别。只不过不同于人对名字的要求，变量名遵循一个简单的原则，即“顾名思义”。一个好的变量名应当是简洁明了的，用abcd来表示四个变量这样简单的命名方式固然方便快捷，可在一个有着很多变量的程序中轻易就会被混淆，加之很少有人会有勤写注释的习惯，一个自己写的程序过上几天也会看得一头雾水。而用number_1，number_2来表示两个变量这样的命名方式呢？这样的命名方式确实做到了顾名思义，也值得我们倡导，可在实际编写中，number不如简化成num，num_1,num_2这样的命名方式会更加简明。一个好的C程序并不是说没有bug就可以了，变量名的艺术也值得我们深入研究。\n注：实际操作中变量名的取名要视环境而定，比如那种写一次就行了的比赛题目，随便取个abcd完全可以。\n变量的类型在之前我们就说过int作为关键字所声明的是int型，即整型，可视为整数。有短整型就有长整型，有整数就有小数，有整数型就有小数型。只不过在C语言中小数并不称为小数，小数型也不叫小数型，它们分别称为浮点数和浮点型，除此之外还有一种类型为字符型。整数型和字符型可以并为整数类型，它们遵循以下表格中的规律：\n\n\n\n类型\n存储大小\n值范围\n\n\n\nchar\n1 字节\n-128 到 127 或 0 到 255\n\n\nunsigned char\n1 字节\n0 到 255\n\n\nsigned char\n1 字节\n-128 到 127\n\n\nint\n2 或 4 字节\n-32,768 到 32,767 或 -2,147,483,648 到 2,147,483,647\n\n\nunsigned int\n2 或 4 字节\n0 到 65,535 或 0 到 4,294,967,295\n\n\nshort\n2 字节\n0 到 65,535\n\n\nunsigned short\n2 字节\n1.2E-38 到 3.4E+38\n\n\nlong\n4 字节\n-2,147,483,648 到 2,147,483,647\n\n\nunsigned long\n4 字节\n0 到 4,294,967,295\n\n\n注：各种类型的存储大小与系统位数有关，但目前通用的以64位为主。\n而与整数类型相对的浮点类型则遵循以下表格：\n\n\n\n类型\n存储大小\n值范围\n精度\n\n\n\nfloat\n4 字节\n1.2E-38 到 3.4E+38\n6 位有效位\n\n\ndouble\n8 字节\n2.3E-308 到 1.7E+308\n15 位有效位\n\n\nlong double\n16 字节\n3.4E-4932 到 1.1E+4932\n19 位有效位\n\n\n对于这样的表格记忆是很困难的，我们只需要记住一些基础的就可以应对大多数情况了。我们可以先记住char为字符型，int为短整型，如果数据很大就换成long。如果数据为小数就用单精度浮点型float声明，对精度要求很高或是数据过大就用双精度型double。\nC语言中变量的定义当我们声明一个变量后，我们需要对它进行赋值，这个过程就称之为定义，变量的定义可以以多个方式进行，这里我们以int为例，有以下情况：1.声明时定义\nint example_1 = 1;\n\n在声明的同时定义，把1的值赋给变量example_1.2.声明后定义\nint example_2;emaxple_2 = 2;\n\n在声明后定义，将2的值赋给变量example_2.变量的定义相对自由，&#x3D;后面可以跟其他变量和表达式（如 加+ 减- 乘* 除/ 取余% 所连接的式子）。值得注意的是，在上面我介绍=时我所用的是赋值而非相等，这是一个比较严谨的称呼，在C语言中判断是否相等时我们需要用的是==；另一个值得注意的点是，当=左右数据类型不相等时，会转化成左边变量的数据类型，这也就意味着，将浮点型赋值给整数型时会损失小数点后的内容，将高精度浮点型赋值给低精度浮点型时会损失所相差的那一部分精度。\n结语Frank曾经说过，变量是玩会的而不是学会的，这也就是为什么我要以《植物大战僵尸》为例的原因。单纯的介绍变量并不能让人完全理解它，在下一节我们将学习C语言中的输入与输出（我们已经学过的printf()就是一个输出语句），届时我们就能领会到变量的神奇之处。\n","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"C语言教程_05：输入与输出","url":"/2022/10/20/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-05%EF%BC%9A%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/","content":"C语言中的输入与输出在第二节我们曾经介绍#include&lt;stdio.h&gt;的含义是包含一个标准输入输出的头文件，随即在第三节我们又学习了printf()语句。printf()是一个最为常见的输出语句，那么除此之外，C语言中还有那些输入输出语句呢？C语言中有三对输入输出语句，由于格式相似，我们分三对介绍。\n最常用的输入输出语句：scanf()与printf()作为相对应的输入输出字符，scanf()与printf()在形式上都是由一个英文单词加上format的缩写f构成，其使用起来也遵循类似的规则，使用起来都需要在括号内加入双引号来限定内容，将双引号内的内容原样输入或输出。正如\\n这类转义字符具有特殊作用一样，在scanf()和printf()中还存在着一个特殊的，具有特殊作用而不被原样输出输出的符号，称之为格式字符。\nscanf()与printf()语句中的格式字符在scanf()和printf()中，形如%d这类%加字母的就被称之为格式字符。格式字符，顾名思义，是来限定输出内容格式的，为了便于学习，我们在此只陈列一些最为常用的格式字符：\n\n\n\n格式字符\n格式说明\n\n\n\n%d\n带符号的十进制整数\n\n\n%u\n无符号的十进制整数\n\n\n%c\n一个字符\n\n\n%s\n一个字符串\n\n\n%f\n浮点数，即小数\n\n\n当我们对输入输出的格式进行限定后， 此时我们会发现少了些什么：我们明确了输出输出的格式，却没有明确我们要格式化的对象，接下来我们就将要学习如何在输入输出语句中确定格式化的对象。\n用逗号间隔开来的补充说明：变量的首次运用类似于英语中的同位语，我们可以在括号内、引号后的位置使用逗号，从而确定我们要输入输出的对象。这个对象，可以是变量，也可以是含有变量的表达式。下面我们看一个例子来学习：\n#include&lt;stdio.h&gt;int main()&#123;    int example_1;    float example_2;    scanf(&quot;%d %f&quot;, &amp;example_1, &amp;example_2);    printf(&quot;%d %f&quot;, example_1, example_2);    return 0;&#125;\n\n\n通过这个例子，我们可以总结出3点规律：\n\n引号内内容应当原样输入输出，包括空格和其他字符；\n引用变量时的格式字符应该与声明时的对应，不一致的格式可能会造成数据丢失或者报错；\n输入语句scanf()中引用变量时要用上&amp;，&amp;的名称是取地址符，整个scanf()语句的意思就是将输入的值赋给变量所分配的地址，关于地址的更多详情，我们会在指针一节中提及，这里我们可以看做将输入的值赋给&amp;后的变量；\n\n对格式字符的附加修饰在实际运用中，我们可能还要对格式进行进一步要求，这里就引入了对格式字符的附加修饰字符，由于输出输出语句中修饰字符存在细微差别，我们这里分别介绍。在输入语句中我们以整型%d为例，*%d表示数据在输入后不进行赋值，%nd表示将输入数据的前n位赋值，%hd表示输入短整型，%ld表示输入长整型。在输出语句中我们以浮点型%f为例，%lf表示输出双精度double型，%mf表示输出数据最小宽度为m格，%mf表示输出数据最小宽度为m格且少的位置用0补齐，%.nf表示输出数据小数点后有n位，%-f表示输出数据想左靠。\n适用于字符的输入输出语句：getchar()与putchar()对于字符型乃至接下来所说的字符串型，它们也同样遵循上文我们所总结出来的第二条规律，即格式的相统一。而不同它们和第一类相比，也有着许多不同之处，这里我们以输入输出的顺序依次介绍。\n关于getchar()作为简单的输入语句，getchar()在使用时有一下几点需要注意：\n\ngetchar()会接收键盘输入的第一个字符，无论它是符号、数字、字母甚至是空格；\ngetchar()的赋值可以直接用等号，例如：name = getchar；\n\n关于putchar()作为简单的输出语句，putchar()在使用时有一下几点需要注意：\n\n在对字符字符进行原样输出是括号内用的是单引号而非双引号；\n括号内引号中可以是转义字符，例如\\101就会输出A；\n可以直接在括号内输入变量名来输出它所对应的字符；\n\n适用于字符串的输入输出语句：gets()与puts()字符串的输入输出可能会涉及指针等后续内容，本节内容我们将在指针后介绍。\n结语作为最常用的输入输出语句scanf()与printf()，学好它们以及配套的格式字符、修饰字符便足以应对大多数环境。\n","categories":["C语言教程"],"tags":["C语言","教程"]},{"title":"数据结构_01：概论","url":"/2022/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01%EF%BC%9A%E6%A6%82%E8%AE%BA/","content":"什么是数据结构一般来说，用计算机解决一个具体问题时，大致需要经过下列几个步骤：首先要从具体问题抽象出一个适当的数学模型，然后设计一个解此数学模型的算法，最后编出程序，进行测试、调整直至得到最终解答。寻求数学模型的实质是分析问题，从中提取操作的对象，并找出这些操作对象之间含有的关系，然后用数学的语言加以描述。例如，求解梁架结构中应力的数学模型为线性方程组；预报人口增长情况的数学模型为微分方程。然而，更多的非数值计算问题无法用数学方程加以描述。在生活中随处可见这样的例子，如图书馆数目检索系统自动化问题，计算机和人对弈问题，多叉路口交通灯的管理问题等等。在这三个例子中，我们描述问题的数学模型是称为“表”“树“和”图“的数据结构而非一个简单的数学方程。因此，简单来说，数据结构是一门研究非数值计算的程序设计问题中计算机的操作对象以及它们之间的关系和操作等的学科。\n目录\n顺序表\n链表\n特殊链表\n栈\n队列（未更新）\n线性表实战（未更新）\n二叉树（未更新）\n高级树（未更新）\n其他树（未更新）\n树实战（未更新）\n散列表（未更新）\n图（未更新）\n图应用（未更新）\n排序算法（未更新）\n\n","categories":["数据结构"],"tags":["C语言","教程","数据结构"]},{"title":"数据结构_02：顺序表","url":"/2023/01/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-02%EF%BC%9A%E9%A1%BA%E5%BA%8F%E8%A1%A8/","content":"数组和表的区别在开启本教程学习之前，相信大家已经有了一定语言基础，对于数组，大家一定十分熟悉。我们在使用数组时，或多或少会遇到以下几个问题：\n\n必须在一开始就声明数组的长度；\n无法随时随用地对数组进行扩容，这就导致了一开始声明的数组的长度必须足够大；\n可能会存在未使用的数组，这对内存是一种浪费。\n\n而表，就是一种可以解决这些问题的数据结构。关于数组和表，更多的区别需要可能会涉及一些更加深层的知识，这里不做赘述，欢迎自己探知。\n顺序表按照惯例，我们一般需要对顺序表进行一定的介绍：顺序表是用一段物理地址连续的存储单元依次存储数据元素的线性结构，一般情况下采用数组存储。在数组上完成数据的增删查改。为了方便理解，我们可以简单地认为他是一种可以动态变化的连续存储的数组。\n定义结构体顺序表的实现有很多方式，其中，我们采取结构体的方式。首先我们需要定义一个结构体：\nstruct list&#123;  int* array;  int capacity;  int size;&#125;;\n\n在这段代码中，我们定义了一个叫list的结构体，它包含了三个成员，整型指针变量array，整型变量capacity和整型变量size。和它们的名字一样，array表示顺序表所占的内存空间，capacity表示顺序表的理论最大容量，size表示顺序表中已经填满的容量，即实际长度。\n初始化当我们定义完结构体后，我们还没有真正创建一个顺序表，即便我们在main函数中创建了一个结构体变量，它也不能真正算得上一个顺序表。一个顺序表的实现必须要对其进行初始化，为了便于多次使用，我们采取自定义一个初始化函数的方式实现。在此之前，为了便于后续操作，我们可以使用typedef函数将结构体指针struct list*重命名为arraylist，即：\ntypedef struct list* arraylist;\n\n此后涉及struct list*的内容我们一律用arraylist代替，请根据需求自行代换。根据我们此前定义的结构体的三个成员内存array，容量capacity，长度size，我们可以设想到初始化需要进行的操作。我们都知道计算机在存储数据时需要用到内存空间，所以我们在初始化时，需要使用malloc()函数申请一块内存空间，使用此函数前我们需要引入新的头文件&lt;stdlib.h&gt;，即：\n#include&lt;stdlib.h&gt;\n\n接着，我们需要用变量表示顺序表初始的最大容量和实际长度。综上，初始化一个顺序表需要实现以下三个功能：\n\n向计算机申请一块内存空间；\n表示顺序表初始最大容量；\n表示顺序表初始实际长度，即0；\n\n实现这三个功能并不难，即：\nvoid setuplist(arraylist list)&#123;  list-&gt;capacity=1;//此处初始化顺序表容量为1，实际可更改  list-&gt;array=malloc(sizeof(int)*list-&gt;capacity);  list-&gt;size=0;&#125;\n\n观察上述代码块，有几点值得我们注意：\n\n在学习函数章节时，我们已经知道了函数传值和传地址的区别，此处由于我们需要对顺序表地址进行操作，故需要用到结构体指针；\n表示结构体指针的成员需要用到-&gt;符号，或者也可以用(*指针名).成员名表示；\nsizeof()函数会根据括号内的数据类型换算成对应的内存大小；\n\n当我们深入了解malloc()函数后，我们会知道有时malloc()函数也会申请内存失败，此时它会返回NULL，同时申请失败也就意味着初始化失败，我们可以采取一种方式来表示初始化的成功与否。我们可以用布尔型返回true和false来表示初始化的结果，但是我们都知道true&#x3D;1，false&#x3D;0，又因为C语言中可能存在没有布尔型的情况，此处我们仅仅展示一个在部分C语言标准下存在的代码块，后续涉及判断内容我们一律采用int型，代码块即：\n...#include&lt;stdbool.h&gt;..._Bool test_1=true;bool test_2=false;...\n\n对于增加判断申请内存失败与否的初始化函数，即：\nint setuplist(arraylist list)&#123;  list-&gt;capacity=1;  list-&gt;array=malloc(sizeof(int)*list-&gt;capacity);  if(list-&gt;array==NULL)    return 0;  list-&gt;size=0;  return 1;&#125;\n\n至此，我们已经实现了顺序表的初始化功能。\n扩容当我们初始化一个顺序表后，有时我们会面临最大容量不足的情况，当然我们一开始初始化的可以很容易的保证最大容量足够第一次使用，可是当我们后续使用时，有时要对其进行扩容。在C语言中本身提供了realloc()函数重新申请一块内存，和malloc()一样，它也是包含于&lt;stdlib.h&gt;头文件中的，扩容的操作极其简单，即：\nint extendlist(arraylist list)&#123;  int newcapacity=list-&gt;capacity*2;//内存扩展两倍  int* newarray=realloc(list-&gt;array, sizeof(int)*newcapacity);  if(newarray==NULL)    return 0;  list-&gt;array=newarray;  list-&gt;capacity=newcapacity;  return 1;&#125;\n\n插入一个顺序表被创建出来后，其中并没有元素，这时我们可以对其进行插入。和插入数组一样，我们顺序表的插入也需要三个要素：\n\n被插入的顺序表；\n插入的数字；\n插入的位置。\n\n基于此，我们很容易就可以设计出一个插入顺序表的函数，在我们正式开始进行写代码前，我们可以很容易的预见一些插入过程中可能会发生的问题：\n\n插入的位置在可插入的位置之外；\n顺序表容积已满，需要扩容；\n如何选择插入的方法。\n\n关于第一个问题，我们一般认为顺序表从的位置从1开始，那么当我们插入的位置小于1或很大时，这个插入是不可取的；关于第二个问题，我们只需要在插入过程中引入if判断是否需要扩容即可；关于第三个问题，我们可以很容易想到，我们只需要将顺序表的元素从尾部开始依次向后移动一位直到空出需要插入的位置，再将需要插入的元素插入需要插入的位置即可。综上，我们可以很容易写出代码，即：\nint insertlist(arraylist list, int element, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size+1)    return 0;  if(list-&gt;size==list-&gt;capacity)  &#123;    if(!extendlist(arraylist list))      return 0;  &#125;  int i;  for(i=list-&gt;size; i&gt;index-1; i--)    list-&gt;array[i]=list-&gt;array[i-1];  list-&gt;array[index-1]=element;  list-&gt;size++;  return 1;&#125;\n\n删除当我们学会了插入后，再学习删除是非常简单的，我们只需要根据位置信息，就可以将顺序表中的某个元素删除，值得注意是，输入的位置信息也需要在合法的范围内，代码即：\nint deletelist(arraylist list, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size)    return 0;  int i;  for(i=index-1; i&lt;list-&gt;size; i++)    list-&gt;array[i]=list-&gt;array[i+1];  list-&gt;size--;  return 1;&#125;\n\n查找长度查找长度相当简单，我们只需要向主程序返回size值即可，即：\nint sizelist(array list)&#123;  return list-&gt;size;&#125;\n\n查找元素查找元素也同样简单，我们可以选择多种查找方式，这里我们采用简单的遍历查找，即：\nint findlist(arraylist list, int element)&#123;  int i;  for(i=0; i&lt;list-&gt;size; i++)    if(list-&gt;array[i]==element)      return i+1;//数组从0开始，顺序表从1开始，故i+1  return 0;&#125;\n\n查找索引查找索引即查找某个位置上对应元素的值，有了上述模块的经验，我们很容易设计出一个功能齐全的函数，即：\nint* getlist(arraylist list, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size)    return NULL;  return &amp;list-&gt;array[index-1];//注意数组索引和顺序表索引的区别&#125;\n\n打印打印顺序表索引元素的函数也同样简单，即：\nvoid printlist(arraylist list)&#123;  int i;  for(i=0; i&lt;list-&gt;size; i++)    printf(&quot;%d &quot;,list-&gt;array[i]);  printf(&quot;\\n&quot;);&#125;\n\n销毁当我们使用完顺序表后，有时候需要销毁它释放内存，此时我们可以用free()函数来进行操作，free()函数必须与malloc()函数配套使用，即：\nint destorylist(arraylist list)&#123;  if(list-&gt;array==NULL)    return 0;  free(list-&gt;array);  list-&gt;array=NULL;  list-capacity=0;  list-&gt;size=0;  return 1;&#125;\n\n总结顺序表作为数据结构的第一节，并不算难，我们关键是要从中领会思想，学习一些函数的用法，为接下来链表的学习打好基础。\n附代码全代码如下：\n#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;struct list&#123;  int* array;  int capacity;  int size;&#125;;typedef struct list* arraylist;int setuplist(arraylist list)&#123;  list-&gt;capacity=1;  list-&gt;array=malloc(sizeof(int)*list-&gt;capacity);  if(list-&gt;array==NULL)    return 0;  list-&gt;size=0;  return 1;&#125;int extendlist(arraylist list)&#123;  int newcapacity=list-&gt;capacity*2;//内存扩展两倍  int* newarray=realloc(list-&gt;array, sizeof(int)*newcapacity);  if(newarray==NULL)    return 0;  list-&gt;array=newarray;  list-&gt;capacity=newcapacity;  return 1;&#125;int insertlist(arraylist list, int element, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size+1)    return 0;  if(list-&gt;size==list-&gt;capacity)  &#123;    if(!extendlist(arraylist list))      return 0;  &#125;  int i;  for(i=list-&gt;size;i&gt;index-1;--i)    list-&gt;array[i]=list-&gt;array[i-1];  list-&gt;array[index-1]=element;  list-&gt;size++;  return 1;&#125;int deletelist(arraylist list, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size)    return 0;  int i;  for(i=index-1; i&lt;list-&gt;size; i++)    list-&gt;array[i]=list-&gt;array[i+1];  list-&gt;size--;  return 0;&#125;int sizelist(arraylist list)&#123;  return list-&gt;size;&#125;int findlist(arraylist list, int element)&#123;  int i;  for(i=0; i&lt;list-&gt;size; i++)    if(list-&gt;array[i]==element)      return i+1;  return 0;&#125;int* getlist(arraylist list, int index)&#123;  if(index&lt;1||index&gt;list-&gt;size)    return NULL;  return &amp;list-&gt;array[index-1];&#125;void printlist(arraylist list)&#123;  int i;  for(i=0; i&lt;list-&gt;size; i++)    printf(&quot;%d &quot;,list-&gt;array[i]);  printf(&quot;\\n&quot;);&#125;int destorylist(arraylist list)&#123;  if(list-&gt;array==NULL)    return 0;  free(list-&gt;array);  list-&gt;array=NULL;  list-capacity=0;  list-&gt;size=0;  return 1;&#125;int main()&#123;...&#125;\n\n返回目录你可以点击此处返回或查看目录。\n","categories":["数据结构"],"tags":["C语言","教程","数据结构"]},{"title":"基于油猴的一些wbu脚本","url":"/2023/12/07/%E5%9F%BA%E4%BA%8E%E6%B2%B9%E7%8C%B4%E7%9A%84%E4%B8%80%E4%BA%9Bwbu%E8%84%9A%E6%9C%AC/","content":"前言及声明鉴于wbu教务系统的垃圾以及评教每次还要打开兼容模式，本文利用油猴实现了一些脚本便于同学们的学习体验。脚本作者Simprole是很厉害的大佬，他高兴的应该还会开源更多脚本吧~\n注：本文涉及脚本作者均为Simprole，代码且已开源，一切后果均需自己承担。\n美化界面效果如图：\n代码：\n// ==UserScript==// @name         WBUESPBeautify// @namespace    http://tampermonkey.net/// @version      0.9.1// @description  WBUESP美化// @author       Simprole// @match        http://jw.wbu.edu.cn/jsxsd/*// @match        http://jw-wbu-edu-cn.webvpn.wbu.edu.cn:8118/jsxsd/*// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico// @run-at       document-start// @resource css https://s1.hdslb.com/bfs/static/jinkela/long/font/medium.css// @resource icon https://gitee.com/dmaker/simpage/raw/master/iconfont.css// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js// @require      https://gitee.com/dmaker/simpage/raw/master/js.cookie.min.js// @grant        unsafeWindow// @grant        GM_addStyle// @grant        GM_getResourceText// ==/UserScript==(function()&#123;    $(document).ready(function()&#123;    //import HarmonyOS font    GM_addStyle(GM_getResourceText(&quot;css&quot;));    //external icons    GM_addStyle(GM_getResourceText(&quot;icon&quot;));    //root css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimRootCSS&quot;&gt;:root&#123;--primary-theme-color: hsl(216.99deg 99.1% 56.67%);--secondary-theme-color: hsl(214.55deg 98.8% 67.25%);;--tertiary-theme-color:hsl(209 98% 70%);--hover_darken_color:brightness(0.75);&#125;body,div,dl,dt,p,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,select,blockquote,th,td,a,span,div &#123;padding:0;margin:0;font-size: 15px;font-family: &quot;HarmonyOS_Medium&quot;!important;&#125;html&#123;scroll-behavior: smooth;&#125;&lt;/style&gt;&#x27;));    //universal buttons css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimUniButtonsCSS&quot;&gt;.button,center a[style][href],#dataView.dataTable td[class] a[style]&#123;width: unset!important;font-size: 1rem;background-image: none;color: #fff!important;;background-color: var(--primary-theme-color);border: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);padding: 5px 10px 5px 15px;position: relative;letter-spacing: 5px;text-align: center;text-decoration:none!important;height: min-content;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;.disabled,&amp;.disabled:hover&#123;box-shadow: none;cursor: no-drop;filter: brightness(0.6);transform: none;&#125;&amp;#btn_back&#123;left: 50%;translate: -50%;&#125;&amp;.centerButton&#123;left: 50%;translate: -50%;margin: -0.5rem 0 0.5rem 0;&#125;&#125;.Nsb_r_title div .button&#123;left:0;margin: 0.5rem 0.5rem 0;&#125;.Nsb_r_title button&#123;left: 50%;transform: translateX(-50%);&#125;form .buttons&#123;left: 50%;transform: translateX(-50%);position: relative;display: inline-block;&#125;.Nsb_r_list a&#123;background-color: var(--primary-theme-color);border: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);padding: 3px 0;position: relative;text-align: center;color: #fff;display: list-item;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;.Nsb_r_list a:hover, .button:hover, center a[style][href]:hover,#dataView.dataTable td[class] a[style]:hover&#123;text-decoration:none;filter: brightness(0.8);box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.7);transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;.Nsb_r_list_fy4 &#123;background: none;&amp; a &#123;width: 3em;text-align: center;background: var(--primary-theme-color);margin: 0 0.1em;border-radius: 2em;color: #fff;font-weight: bold;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);-webkit-user-select: none;user-select: none;&#125;&amp; .disabled &#123;filter: brightness(0.6);box-shadow: none;cursor: no-drop;&#125;&amp;.dataTable .button#button1,&amp;.dataTable .button#button2&#123;left: 27%;&#125;&#125;.SimScale&#123;font-size: 1.8rem;height: 1.6rem;width: 1.6rem!important;line-height: 0;border-radius: 100%;display: flex;align-items: center;justify-content: center;margin: 0.25rem;&#125;&lt;/style&gt;&#x27;));    //universal charts css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimUniChartsCSS&quot;&gt;#dataList&#123;margin-top: 0.5rem;border-collapse: separate;position: relative;transform-origin: top!important;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp; .Nsb_r_list_thb&#123;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;height: 2rem;font-weight: normal;text-align: center;&#125;&#125;#kbtable&#123;border-collapse: separate;transform-origin: 0 0;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0.5rem;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;line-height: normal;&#125;&#125;[id].kbcontent,[id].kbcontent1&#123;background: var(--secondary-theme-color);border-radius: 1rem;color: #fff;padding: 0.2rem 0.8rem;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);margin-bottom: 5px;&#125;.classLists[style]&#123;border-radius: 1rem;padding: 3px 5px;&#125;table.display&#123;&amp; thead th&#123;cursor:default;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;text-align: center;font-weight: normal;&#125;&amp; tbody th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td, td.center&#123;padding: 0.5rem 0;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp; tr.odd&#123;background-color: #fff;&#125;&amp; tr.even&#123;background-color: var(--tertiary-theme-color);&#125;&#125;.Nsb_table,.display&#123;.thb_t_l&#123;border-radius: 1rem 0 0 0;&#125;.thb_t_r&#123;border-radius: 0 1rem 0 0;&#125;.thb_t_l.thb_t_r&#123;border-radius: 1rem 1rem 0 0;&#125;.thb_b_l&#123;border-radius: 0 0 0 1rem;&#125;.thb_b_r&#123;border-radius: 0 0 1rem 0;&#125;.thb_b_l.thb_b_r&#123;border-radius: 0 0 1rem 1rem;&#125;&#125;&lt;/style&gt;&#x27;));    //universal pages css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimUniPagesCSS&quot;&gt;.Nsb_pw &#123;width: auto;margin: 0 2rem;.Nsb_r_title &#123;font-size: 1.25rem;font-weight: bold;color: #000;height: max-content;line-height: 1.5em;text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.4);letter-spacing: 1px;margin: 0.5rem 0 0.5rem 0;text-align: center;&#125;.Nsb_layout_r .Nsb_r_title &#123;font-size: 1.25rem;font-weight: bold;color: #000;height: max-content;line-height: 1.5em;text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.4);letter-spacing: 1px;margin: 0 0 0.5em 0;text-align: center;&#125;&#125;#SimInfo&#123;position: relative;left: 50%;transform: translateX(-50%);margin-top: 0.5rem;text-align: center;&#125;.SimStack&#123;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&amp;[stacked=true]&#123;opacity: 0%;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&#125;&amp;[stacked=false]&#123;opacity: 100%;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&#125;&#125;#SimStackTop&#123;cursor: pointer;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&amp;:hover&#123;transform: translateY(0.75px);filter: brightness(0.7);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&amp;[stacked=true]&#123;margin: 0px 7px 12px 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&amp;[stacked=false]&#123;margin-right: 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&#125;.hidden&#123;display: none;&#125;.SimScalePanel&#123;display: flex;position: fixed;align-items: center;justify-content: center;flex-direction: row;right: 0;bottom: 0;opacity: 0.2;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1) 1s;transition-property: opacity,transform;&amp;.rightPage&#123;opacity: 1;position: relative;.SimScaleText&#123;opacity: 1;transform: 0;font-size:1rem;transform: none;&#125;&#125;.SimScaleText&#123;opacity: 0;user-select: none;font-size: 1.3rem;transform: translateX(50%);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1) 1s;transition-property: opacity,transform;&#125;&amp;:hover&#123;opacity: 1.0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity,transform;.SimScaleText&#123;opacity: 1;transform: translateX(0%);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity,transform;&#125;&#125;&#125;.SimSelect&#123;text-align: center;font-size: 1rem;border: 2px solid var(--secondary-theme-color);border-radius: 1rem;height: 1.7rem;width: 203px!important;margin: 0.125rem 0;box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: border,box-shadow;&amp;.Slim&#123;width: 125px!important;&#125;&amp;:hover,&amp;:focus-visible&#123;outline:none;border: 2px solid var(--primary-theme-color);box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.3),inset 0px 2px 6px 0px var(--secondary-theme-color);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: border,box-shadow;&#125;&#125;input.SimScaleInput.SimInput&#123;width: 4.5rem!important;font-size: 1.3rem;height: 1.4rem;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);&#125;input.SimInput,.inputnormal&#123;width: 200px!important;text-align: center;border: 2px solid var(--primary-theme-color);border-radius: 1.5em;background-color: var(--tertiary-theme-color);text-shadow: 0px 0px 4px rgba(0,0,0,0.7);color: #fff;font-size: 1rem;height: 1.5rem;margin: 0.125rem 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border,color;&#125;.SimInput.Slim&#123;width: 130px!important;&#125;input.SimInput&#123;&amp;:hover,&amp;:focus-visible&#123;outline: none;border: 2px solid var(--primary-theme-color);background-color:var(--secondary-theme-color);transform: scale(1.02);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border,color;&#125;&amp;.disabled,.disabled:hover&#123;background-color: var(--secondary-theme-color);border: 2px solid var(--primary-theme-color);text-shadow: none;outline: none;cursor: no-drop;transform: none;filter: brightness(0.5);&#125;&amp;[readonly]&#123;&amp;:hover&#123;outline: 0px;&#125;&amp;:focus-visible&#123;outline: 0px;&#125;&#125;&#125;#SimTop&#123;position: fixed;right: 0.5rem;bottom: 0.5rem;font-size: 1rem;background-image: none;background-color: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);color: #fff;&#125;&lt;/style&gt;&#x27;));    //footer css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimFooterCSS&quot;&gt;.Nsb_rights &#123;height: max-content;line-height: normal;&#125;.info&#123;text-align: center;color: #000;&amp; .heart&#123;color: #ff0081;&#125;&#125;&lt;/style&gt;&#x27;));    //home page css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimHomePageCSS&quot;&gt;.iconfont &#123;position: absolute;font-size: 75px;left: 50%;transform: translateX(-50%);top: 15px;&#125;.icon-xuanke,.icon-yonghu &#123;font-size: 75px;top: 80px;&#125;.icon-yonghu&#123;left: 22.5%!important;position: absolute;transform: translateX(-240%);cursor: pointer;transition: all 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);&amp;:hover&#123;filter: brightness(0.75);transform: translate(-240%,1px);transition-duration: 0.3s;transition: all 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);&#125;&#125;.block1,.block2,.block3,.block4,.block5,.block6,.block7,.block8,.block9,.block10,.block11,.block12&#123;box-shadow: 0px 4px 4px rgba(0,0,0,0.3);border-radius: 0.5rem;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,transform,box-shadow;&#125;.block1text&#123;width:auto;height: auto;position: relative;text-align: center;left: 50%;top: 42%;color:#fff;transform: translate(-30%,-90%);&#125;.block1tex,.block2tex&#123;-webkit-user-select: none;user-select: none;left:0px;position: relative;top: 12.5rem;text-align: center;color:#fff;&#125;.block3tex,.block4tex,.block5tex,.block6tex&#123;left:50%;position: absolute;top: 6.25rem;text-align: center;transform: translateX(-50%);&#125;.block7tex,.block8tex,.block9tex,.block10tex,.block11tex,.block12tex&#123;left:50%;transform: translateX(-50%);position: absolute;top: 6rem;text-align: center;width: max-content;&#125;.block2:hover,.block3:hover,.block4:hover,.block5:hover,.block6:hover,.block7:hover,.block8:hover,.block9:hover,.block10:hover,.block11:hover,.block12:hover&#123;box-shadow: 0px 1px 2px rgba(0,0,0,0.7);transform: translateY(2px);filter: brightness(0.75);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,transform,box-shadow;&#125;.block1 img,.block2 img,.block3 img,.block4 img,.block5 img,.block6 img,.block7 img,.block8 img,.block9 img,.block10 img,.block11 img,.block12 img,.block1app,.block1pc&#123;visibility: hidden;&#125;&lt;/style&gt;&#x27;));    //iframe css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimIframeCSS&quot;&gt;div#SimPageOutline&#123;display: block;width: 68rem;height: 51.1rem;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);background-color: var(--primary-theme-color);border-top: 0;border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);&#125;iframe#SimPage&#123;display: block;width: 68rem;height: 48.8rem;position: relative;left: 50%;transform: translateX(-50%);border-radius: 0 0 1rem 1rem;background-color: #fff;&#125;.Nsb_pw&#123;#fcenter&#123;margin-top:1rem;display: block;height: 52.5rem!important;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);&#125;.Nsb_layout_r #fcenter&#123;margin-top:1rem;display: block;height: 52.5rem!important;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);width: 68rem!important;&#125;&#125;.toolbar&#123;background: var(--primary-theme-color)!important;border-radius: 0 0 1rem 1rem;box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.3);height: 2.5rem;&#125;a.closeButton&#123;float: right;display: block;left: 0.5rem;position: relative;cursor: pointer;&#125;div.closeButton&#123;font-size: 2.2rem;height: 2rem;line-height: 1.95rem;padding: 0rem 1.4rem 0 1.3rem;background: #FF513A;width: inherit;color: #fff;border-radius: 0 1rem 0 0;font-weight: bold;box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);-webkit-user-select: none;user-select: none;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;:hover&#123;transform: translateY(0.75px);box-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);filter: brightness(0.7);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;&#125;.toolstitle &#123;height: 2rem;line-height: 2rem;color: #FFF;font-size: 1.15rem;background: var(--secondary-theme-color);font-weight: normal;text-align: center;box-shadow: 0 4px 7px 0px rgba(0, 0, 0, 0.3);&#125;table.textform&#123;width: 100%;padding-left: 0!important;&#125;font.tips&#123;float: right;position: relative;font-size: 1.5rem;margin: 0.5rem 2.25rem 0 0;font-family: &quot;HarmonyOS_Medium&quot;;&#125;textarea#xmms &#123;width: 93.5%!important;position: relative;margin: 0 2rem;border: 0.2rem solid var(--secondary-theme-color);border-radius: 1rem;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&amp;:focus-visible &#123;outline: 0.2rem solid var(--primary-theme-color);box-shadow: 0px 7px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&#125;&#125;textarea[style],textarea[type=text]&#123;position: relative;border: 0.2rem solid var(--secondary-theme-color);border-radius: 1rem;box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 4px;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&amp;:hover&#123;outline: 0.2rem solid var(--primary-theme-color);box-shadow: 0px 7px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&#125;&#125;&lt;/style&gt;&#x27;));    //left sidebar css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimLeftSidebarCSS&quot;&gt;.Nsb_r_list_tdfy &#123;border: none;&#125;.Nsb_layout_l &#123;float: left;width: 11.25rem;height: max-content;margin-top: 2rem;border-radius: 1rem;box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.3);border:none;padding-bottom: 0.5rem;margin-bottom: 3rem;&#125;.Nsb_l_list &#123;&amp; ul &#123;padding-bottom: 0.5em;width: inherit;border-bottom: none;&#125;&amp; h4 &#123;margin: 0;padding: 6px 0;font-size: 17px;font-weight: bold;background-color: var(--primary-theme-color);border-radius: 1rem 1rem 0 0;box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.3);color: #fff;background-image: none;width: inherit;text-align: center;&#125;&amp; li &#123;margin: 0;width: inherit;&#125;&amp; a &#123;color: #000;padding: 4px 0px;text-align: center;position: relative;width: inherit;transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,color,transform,box-shadow;&amp;:hover &#123;border-radius: 1em;background: var(--tertiary-theme-color);box-shadow: inset 0px 2px 6px 1px rgb(0 0 0 / 30%);color: #fff;transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,color,transform,box-shadow;&#125;&#125;&amp; .Nsb_l_list_now &#123;background: var(--secondary-theme-color);color: #fff;padding: 4px 0;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,box-shadow,transform;&amp;:hover &#123;border-radius: 15px;background: var(--tertiary-theme-color);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,box-shadow,transform;&#125;&#125;&#125;.Nsb_l_list_top &#123;height: 0;&#125;&lt;/style&gt;&#x27;));    //right page css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimRightPageCSS&quot;&gt;.Nsb_layout_r &#123;padding: 2rem 0 0rem 0rem;margin: 0 0 3rem -11.25rem!important;left: 57%;transform: translateX(-50%);float: left;position: relative;.Nsb_table&#123;border-collapse: separate;position: relative;transform-origin: top!important;&#125;.Nsb_r_list&#123;.Nsb_r_list_thb&#123;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;height: 2rem;text-align: center;font-weight: normal;&#125;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp;.Nsb_table&#123;width: 68rem!important;&#125;&#125;&#125;.Nsb_r_list_fy2 input &#123;width: 2em;height: 1em;text-align: center;border: 2px solid var(--secondary-theme-color);border-radius: 1.5em;background-color: var(--tertiary-theme-color);text-shadow: 0px 0px 4px rgba(0,0,0,0.7);color: #fff;font-size: 1rem;border-radius: 1.5em;background-image: none;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border;&amp;:hover,&amp;:focus-visible&#123;outline: none;border: 2px solid var(--primary-theme-color);background-color:var(--secondary-theme-color);transform: scale(1.02);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border;&#125;&#125;.Nsb_r_list_fy&#123;div,span,a&#123;height: 1.5em;line-height: 1.5em;&#125;&#125;#Form1[action] div&#123;text-align: center!important;&#125;td[width][align=right]&#123;width:7rem;&#125;td b font[face]&#123;font-family: &quot;HarmonyOS_Medium&quot;;&#125;td[style=&quot;background-color:#E5F3FE&quot;]&#123;background-color: #A6D3FE!important;color: #fff!important;text-shadow: 0 0 3px black;&#125;font[color=blue]&#123;color: var(--secondary-theme-color);&#125;&lt;/style&gt;&#x27;));    //top bar css    $(&quot;body&quot;).append($(&#x27;&lt;style id=&quot;SimTopBarCSS&quot;&gt;.Nsb_menu_pw,.Nsb_menu &#123;height: 41px;line-height: 41px;background-color: var(--primary-theme-color);background-image:none;left: 50%;position: relative;transform: translateX(-50%);&#125;.Nsb_menu a &#123;color: #fff;font-weight: normal;border-radius: 2px;transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,transform,filter,background-color,box-shadow;&amp;:hover&#123;background-position: none;background-color: var(--primary-theme-color);background-image:none;height: 40px;filter: brightness(0.7);transform: translateY(0.75px);border-radius: 20px;box-shadow: inset 0px 3px 5px 0px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: box-shadow,border-radius,transform,filter,background-color,;&#125;&#125;.Nsb_menu_pw &#123;box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.3);&#125;.Nsb_top&#123;display: flex;justify-content: flex-end;flex-direction: row;align-items: center;&#125;.Nsb_top_menu &#123;position: relative;background-color: var(--secondary-theme-color);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.3);&amp; ul&#123;border:none;background: var(--primary-theme-color);border-radius: 20px;padding: 3px;box-shadow: -1px 0px 3px rgba(0, 0, 0, 0.3);&#125;&#125;.Nsb_top_menu_nc &#123;height: inherit;font-size: 1em;line-height: 2em;padding: 0 0.75em 0 1em;color: #fff;-webkit-user-select: none;user-select: none;cursor: pointer;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: transform,filter;&amp;:hover&#123;filter: brightness(0.8);transform: translateY(1px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: transform,filter;&#125;&#125;.menu_cn&#123;&amp; a &#123;padding: 0 2em;font-size: 1.0625em;&#125;&amp; ul&#123;left: 50%;position: relative;transform: translateX(-50%);width: max-content;&#125;&#125;.Nsb_top_logo &#123;left: 0px;&#125;.Nsb_menu_li_now&#123;background: none;&#125;.Nsb_menu_li_h span &#123;background: url(../framework/images/Nsb_menu_h.gif) 0 -15px&#125;.Nsb_top_menu span, .Nsb_top_menu_id img&#123;visibility: hidden;&#125;&lt;/style&gt;&#x27;));    //iframe code    $(&quot;body&quot;).append($(&#x27;&lt;script&gt;function JsMod(htmlurl,tmpWidth,tmpHeight)&#123;let inPage = document.createElement(&quot;iframe&quot;);;inPage.id = &quot;SimPage&quot;;let SimPage = document.createElement(&quot;div&quot;);SimPage.id = &quot;SimPageOutline&quot;;let toolbar = document.createElement(&quot;div&quot;);toolbar.innerHTML=\\&#x27;&lt;a href=&quot;javascript:closeIframe();&quot; class=&quot;closeButton&quot;&gt;&lt;div class=&quot;closeButton&quot;&gt;×&lt;/div&gt;&lt;/a&gt;\\&#x27;;SimPage.appendChild(toolbar);SimPage.appendChild(inPage);if(!document.getElementById(&quot;SimPage&quot;))&#123;if(document.getElementById(&quot;dataList&quot;))&#123;let dataList = document.getElementById(&quot;dataList&quot;);dataList.after(SimPage);dataList.style = &quot;display:none;&quot;;&#125;if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;let table = document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0];table.after(SimPage);table.style = &quot;display:none;&quot;;&#125;htmlurl=getRandomUrl(htmlurl);inPage.src = htmlurl;&#125;&#125;&lt;/script&gt;&#x27;));    //closeIframe code    $(&quot;body&quot;).append($(&#x27;&lt;script&gt;function closeIframe()&#123;if(!document.getElementById(&quot;SimPage&quot;)&amp;&amp;window.parent.document.getElementById(&quot;SimPage&quot;))&#123;let parent = window.parent;if(parent.document.getElementById(&quot;dataList&quot;))&#123;parent.document.getElementById(&quot;dataList&quot;).style = &quot;&quot;;&#125;if(parent.document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;parent.document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].style = &quot;&quot;;&#125;parent.document.getElementById(&quot;SimPageOutline&quot;).remove();&#125;else if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0]&amp;&amp;document.getElementById(&quot;SimPage&quot;))&#123;if(document.getElementById(&quot;dataList&quot;))&#123;document.getElementById(&quot;dataList&quot;).style = &quot;&quot;;&#125;if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].style = &quot;&quot;;&#125;document.getElementById(&quot;SimPageOutline&quot;).remove();&#125;&#125;&lt;/script&gt;&#x27;));    if(document.getElementById(&quot;kc&quot;))&#123;        document.getElementById(&quot;kc&quot;).remove();    &#125;    //修复评教页面宽度不为100%    document.body.style.width = &quot;100%&quot;;    //去除前后方括号    if(document.querySelector(&quot;td a[href]&quot;))&#123;        document.querySelectorAll(&quot;td a[href]&quot;).forEach(function(e)&#123;            if(e.previousSibling)&#123;                if(e.previousSibling.nodeValue)&#123;                    let value = e.previousSibling.nodeValue.replaceAll(&quot;\\t&quot;,&quot;&quot;);                    value = value.replaceAll(&quot;\\n&quot;,&quot;&quot;);                    value = value.replaceAll(&quot; &quot;,&quot;&quot;);                    if(value==&quot;[&quot;)&#123;                        e.previousSibling.remove();                    &#125;                &#125;            &#125;            if(e.nextSibling)&#123;                if(e.nextSibling.nodeValue)&#123;                    let value = e.nextSibling.nodeValue.replaceAll(&quot;\\t&quot;,&quot;&quot;);                    value = value.replaceAll(&quot;\\n&quot;,&quot;&quot;);                    value = value.replaceAll(&quot; &quot;,&quot;&quot;);                    if(value==&quot;][&quot;)&#123;                        e.nextSibling.after(document.createElement(&quot;br&quot;));                        e.nextSibling.remove();                    &#125;                    if(value==&quot;]&quot;||e.nextSibling.nodeValue==&quot;]\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t&quot;)&#123;                        e.nextSibling.remove();                    &#125;                &#125;            &#125;        &#125;)    &#125;    //reset preset width    if($(&quot;#dataList&quot;)[0])&#123;        let thb = $(&quot;#dataList&quot;)[0].getElementsByClassName(&quot;Nsb_r_list_thb&quot;);        let length = thb.length;        for(let i=1;i&lt;=length;i++)&#123;            if(thb[i-1].style.width!=&#x27;&#x27;)&#123;                thb[i-1].style.width = &#x27;&#x27;;            &#125;        &#125;    &#125;    //class schedule random color    function getRandomIntInclusive(min, max) &#123;        return (Math.random() * (max - min + 1) + min).toFixed(2);    &#125;    function randomColorPick()&#123;        let json = &#123;&#125;;        let hue = getRandomIntInclusive(0,360);        let sat = getRandomIntInclusive(90,100);        let light = getRandomIntInclusive(40,43);        let hsl = &quot;hsl(&quot; + hue + &quot;, &quot; + sat + &quot;%, &quot; + light + &quot;%)&quot;;        json.hsl=hsl;        json.hue=hue;        json.sat=sat;        json.light=light;        return json;    &#125;    function fixKBBottom(type)&#123;        let td = $(&quot;#kbtable&quot;)[0].getElementsByTagName(&quot;td&quot;);        let length = td.length;        for(let i=1;i&lt;=length;i++)&#123;            let kbcontent = td[i-1].getElementsByClassName(type);            if(kbcontent.length!=0)&#123;                kbcontent[kbcontent.length-1].style.margin = &quot;0px&quot;;            &#125;        &#125;    &#125;    function SimStacked(input)&#123;        switch(input.getAttribute(&#x27;stacked&#x27;))&#123;            case &#x27;true&#x27;:&#123;                setTimeout(function()&#123;                    input.classList.add(&#x27;hidden&#x27;);                &#125;, 200);                break;            &#125;            case &#x27;false&#x27;:&#123;                input.classList.remove(&#x27;hidden&#x27;);                break;            &#125;        &#125;    &#125;    function SimStackActions()&#123;        let SimStack = this.parentElement.getElementsByClassName(&#x27;SimStack&#x27;);        let length = SimStack.length;        let tempJson;        if(!this.childNodes[0].data)&#123;            tempJson = kbsort[kbsort[this.firstChild.innerHTML]];        &#125;else&#123;            tempJson = kbsort[this.childNodes[0].data];        &#125;        let hslDarker = &quot;hsl(&quot; + tempJson.hue + &quot;, &quot; + tempJson.sat + &quot;%, &quot; + (tempJson.light - 8) + &quot;%)&quot;;        let hslDarker2 = &quot;hsl(&quot; + tempJson.hue + &quot;, &quot; + tempJson.sat + &quot;%, &quot; + (tempJson.light - 16) + &quot;%)&quot;;        for(let i=1;i&lt;=length;i++)&#123;            if(this.getAttribute(&#x27;stacked&#x27;)==&#x27;true&#x27;)&#123;                this.style.removeProperty(&#x27;box-shadow&#x27;);                SimStack[i-1].setAttribute(&#x27;stacked&#x27;,&#x27;false&#x27;);                SimStacked(SimStack[i-1]);            &#125;else if(this.getAttribute(&#x27;stacked&#x27;)==&#x27;false&#x27;)&#123;                this.style.cssText += &quot;box-shadow: 3px 3px 0px 1px &quot;+hslDarker+&quot;, 7px 7px 0px 1px &quot;+hslDarker2;                SimStack[i-1].setAttribute(&#x27;stacked&#x27;,&#x27;true&#x27;);                SimStacked(SimStack[i-1]);            &#125;            if(i==length)&#123;                if(SimStack[length-1].getAttribute(&#x27;stacked&#x27;)==&#x27;true&#x27;)&#123;                    this.setAttribute(&#x27;stacked&#x27;,&#x27;true&#x27;);                &#125;else if(SimStack[length-1].getAttribute(&#x27;stacked&#x27;)==&#x27;false&#x27;)&#123;                    this.setAttribute(&#x27;stacked&#x27;,&#x27;false&#x27;);                &#125;            &#125;        &#125;    &#125;    function setupScalingPanel()&#123;        let panel = document.createElement(&#x27;div&#x27;);        panel.classList.add(&#x27;SimScalePanel&#x27;);        let text = document.createElement(&#x27;div&#x27;);        text.innerText = &quot;缩放倍率&quot;;        text.classList.add(&quot;SimScaleText&quot;);        let zoomIn = document.createElement(&#x27;input&#x27;);        let SimScaleInput = document.createElement(&#x27;input&#x27;);        SimScaleInput.type=&#x27;text&#x27;;        SimScaleInput.id=&#x27;SimScaleInput&#x27;;        SimScaleInput.className = &#x27;SimScaleInput SimInput&#x27;;        SimScaleInput.value=&#x27;0.8&#x27;;        SimScaleInput.addEventListener(&quot;change&quot;, valueSync);        $(&quot;#kbtable&quot;)[0].style.setProperty(&#x27;transform&#x27;,&#x27;scale(0.8)&#x27;);        $(&quot;#kbtable&quot;)[0].style.setProperty(&#x27;transition&#x27;,&#x27;transform 0.4s cubic-bezier(0, 0, 0.22, 0.9)&#x27;);        zoomIn.type=&#x27;button&#x27;;        zoomIn.className = &#x27;button SimScale&#x27;;        let zoomOut = zoomIn.cloneNode(false);        zoomIn.value=&#x27;+&#x27;;        zoomIn.id=&#x27;zoomIn&#x27;;        zoomOut.value=&#x27;–&#x27;;        zoomOut.id=&#x27;zoomOut&#x27;;        zoomIn.addEventListener(&quot;click&quot;, SimScale);        zoomOut.addEventListener(&quot;click&quot;, SimScale);        panel.appendChild(text);        panel.appendChild(zoomOut);        panel.appendChild(SimScaleInput);        panel.appendChild(zoomIn);        if(!$(&quot;.Nsb_layout_r&quot;)[0])&#123;            $(&quot;#kbtable&quot;)[0].parentElement.appendChild(panel);        &#125;else&#123;            panel.classList.add(&quot;rightPage&quot;);            $(&quot;#kbtable&quot;)[0].before(panel);        &#125;    &#125;    function universalScaleCtrl(zoomData)&#123;        if(zoomData&lt;0.6)&#123;            zoomData = 0.5;            $(&quot;#zoomIn&quot;)[0].classList.remove(&#x27;disabled&#x27;);            $(&quot;#zoomIn&quot;)[0].addEventListener(&quot;click&quot;, SimScale);            $(&quot;#zoomOut&quot;)[0].classList.add(&#x27;disabled&#x27;);            $(&quot;#zoomOut&quot;)[0].removeEventListener(&quot;click&quot;, SimScale);        &#125;else if(zoomData&gt;0.9)&#123;            zoomData = 1.0;            $(&quot;#zoomOut&quot;)[0].classList.remove(&#x27;disabled&#x27;);            $(&quot;#zoomOut&quot;)[0].addEventListener(&quot;click&quot;, SimScale);            $(&quot;#zoomIn&quot;)[0].classList.add(&#x27;disabled&#x27;);            $(&quot;#zoomIn&quot;)[0].removeEventListener(&quot;click&quot;, SimScale);        &#125;else&#123;            $(&quot;#zoomIn&quot;)[0].classList.remove(&#x27;disabled&#x27;);            $(&quot;#zoomOut&quot;)[0].classList.remove(&#x27;disabled&#x27;);            $(&quot;#zoomIn&quot;)[0].addEventListener(&quot;click&quot;, SimScale);            $(&quot;#zoomOut&quot;)[0].addEventListener(&quot;click&quot;, SimScale);        &#125;        zoomData = zoomData.toFixed(1);        $(&quot;#SimScaleInput&quot;)[0].value = zoomData;        $(&quot;#kbtable&quot;)[0].style.setProperty(&#x27;transform&#x27;,&#x27;scale(&#x27;+zoomData+&#x27;)&#x27;);        if(!$(&quot;.Nsb_layout_r&quot;)[0])&#123;            let bodyStyle = $(&quot;#kbtable&quot;)[0].parentElement.style;            if(bodyStyle.length==1)&#123;                bodyStyle.removeProperty(&#x27;width&#x27;);            &#125;else&#123;                bodyStyle.setProperty(&quot;width&quot;,&quot;100%&quot;);            &#125;        &#125;    &#125;    function valueSync()&#123;        let zoomData = this.value;        let zoomValue = parseFloat(zoomData);        universalScaleCtrl(zoomValue);    &#125;    function SimScale()&#123;        let zoomData = $(&quot;#SimScaleInput&quot;)[0].value;        let zoomValue = parseFloat(zoomData);        if(this.value==&#x27;+&#x27;)&#123;            zoomData = zoomValue+0.1;        &#125;else if(this.value==&#x27;–&#x27;)&#123;            zoomData = zoomValue-0.1;            this.value=&#x27;–&#x27;;            this.id=&#x27;zoomOut&#x27;;        &#125;        universalScaleCtrl(zoomData);    &#125;        if($(&quot;.kbcontent1&quot;)[0])&#123;        let kbcontent,kbcontent1;        var kbsort = new Array();        if(!$(&quot;.Nsb_layout_r&quot;)[0])&#123;            let classLists_eg = document.createElement(&quot;div&quot;);            classLists_eg.className = &quot;classLists&quot;;            let classLists,tempJson,hslDarker;            let tr = $(&quot;#kbtable&quot;)[0].getElementsByTagName(&quot;tr&quot;);            let th = tr[0].children;            let length = th.length;            let tr_length = tr.length;            for(let i=1;i&lt;=length;i++)&#123;                if(th[i-1].colSpan==7)&#123;                    th[i-1].colSpan = 6;                &#125;            &#125;            let td = tr[1].children;            length = td.length;            for(let i=1;i&lt;=length;i++)&#123;                if(td[i-1].innerHTML==&#x27;13&#x27;)&#123;                    length--;                    for(let o=2;o&lt;=tr_length;o++)&#123;                        tr[o-1].children[i-1].remove();                    &#125;                &#125;            &#125;            length = $(&quot;.kbcontent1&quot;).length;            for(let i=1;i&lt;=length;i++)&#123;                classLists = classLists_eg.cloneNode(true);                kbcontent1 = $(&quot;.kbcontent1&quot;)[i-1];                if(!kbsort[kbcontent1.childNodes[0].data])&#123;                    kbsort[kbcontent1.childNodes[0].data] = randomColorPick();                &#125;                let kbc1Children = kbcontent1.parentElement.children;                if(kbcontent1 == kbc1Children[0])&#123;                    let similarity = 0;                    let similarClass,initalIndex;                    for(let o=1;o&lt;kbc1Children.length;o++)&#123;                        if(kbc1Children[o-1].firstChild.data==kbc1Children[o].firstChild.data&amp;&amp;kbc1Children[o-1].childNodes[2].data.slice(kbc1Children[o-1].childNodes[2].data.lastIndexOf(&quot;(&quot;))==kbc1Children[o].childNodes[2].data.slice(kbc1Children[o].childNodes[2].data.lastIndexOf(&quot;(&quot;)))&#123;                            if(similarity==0)&#123;                                similarClass = kbc1Children[o-1].childNodes[0].data;                                initalIndex = o-1;                            &#125;                            similarity++;                        &#125;                    &#125;                    if(similarity&gt;4)&#123;                        if(!kbsort[kbc1Children[initalIndex].childNodes[0].data])&#123;                            kbsort[kbc1Children[initalIndex].childNodes[0].data] = randomColorPick();                        &#125;                        tempJson = kbsort[kbc1Children[initalIndex].childNodes[0].data];                        kbc1Children[initalIndex].id = &quot;SimStackTop&quot;;                        hslDarker = &quot;hsl(&quot; + tempJson.hue + &quot;, &quot; + tempJson.sat + &quot;%, &quot; + (tempJson.light - 8) + &quot;%)&quot;;                        let hslDarker2 = &quot;hsl(&quot; + tempJson.hue + &quot;, &quot; + tempJson.sat + &quot;%, &quot; + (tempJson.light - 16) + &quot;%)&quot;;                        for(let o=initalIndex+2;o&lt;=kbc1Children.length;o++)&#123;                            if(similarClass==kbc1Children[o-1].firstChild.data)&#123;                                kbc1Children[o-1].classList.add(&#x27;SimStack&#x27;);                                kbc1Children[o-1].setAttribute(&quot;stacked&quot;,&quot;true&quot;);                                SimStacked(kbc1Children[o-1]);                            &#125;                        &#125;                        kbc1Children[initalIndex].setAttribute(&quot;stacked&quot;,&quot;true&quot;);                        kbc1Children[initalIndex].style.cssText += &quot;box-shadow: 3px 3px 0px 1px &quot;+hslDarker+&quot;, 7px 7px 0px 1px &quot;+hslDarker2;                        kbc1Children[initalIndex].addEventListener(&quot;click&quot;, SimStackActions);                    &#125;                &#125;                tempJson = kbsort[kbcontent1.childNodes[0].data];                let tempData = kbcontent1.childNodes[0].data;                if(kbcontent1.lastChild.data.search(&quot;,&quot;)!=-1)&#123;                    classLists.innerHTML = kbcontent1.lastChild.data;                &#125;else if(kbcontent1.firstChild.data.search(&quot;,&quot;)!=-1)&#123;                    classLists.innerHTML = kbcontent1.firstChild.data;                &#125;else if(kbcontent1.childNodes[2].data.search(&quot;,&quot;)!=-1)&#123;                    classLists.innerHTML = kbcontent1.childNodes[2].data;                &#125;                if(classLists.innerHTML.search(&quot;,&quot;)!=-1)&#123;                    if(classLists.innerHTML.lastIndexOf(&quot;,&quot;)&gt;classLists.innerHTML.lastIndexOf(&quot;(&quot;)&amp;&amp;classLists.innerHTML.slice(classLists.innerHTML.indexOf(&quot;,&quot;),classLists.innerHTML.lastIndexOf(&quot;,&quot;)+1).indexOf(&quot;)&quot;)==-1)&#123;                    &#125;else&#123;                        if(classLists.innerHTML.slice(0,classLists.innerHTML.lastIndexOf(&quot;(&quot;)).search(/[0-9]/)==-1)&#123;                            classLists.className = &#x27;&#x27;;                        &#125;else&#123;                            if(classLists.innerHTML.lastIndexOf(&quot;,&quot;)&gt;classLists.innerHTML.lastIndexOf(&quot;(&quot;))&#123;                                let replaced = classLists.innerHTML.slice(0,classLists.innerHTML.lastIndexOf(&quot;(&quot;)).replaceAll(&quot;,&quot;,&quot;&lt;br&gt;&quot;);                                replaced += classLists.innerHTML.slice(classLists.innerHTML.lastIndexOf(&quot;(&quot;));                                classLists.innerHTML = replaced;                            &#125;else&#123;                                classLists.innerHTML = classLists.innerHTML.replaceAll(&quot;,&quot;,&quot;&lt;br&gt;&quot;);                            &#125;                            hslDarker = &quot;hsl(&quot; + tempJson.hue + &quot;, &quot; + tempJson.sat + &quot;%, &quot; + (tempJson.light - 10) + &quot;%)&quot;;                            classLists.style = &quot; background-color:&quot;+hslDarker;                        &#125;                      &#125;                   &#125;                if(kbcontent1.lastChild.data.search(&quot;,&quot;)!=-1)&#123;                    kbcontent1.lastChild.remove();                    kbcontent1.lastChild.after(classLists);                &#125;else if(kbcontent1.firstChild.data.search(&quot;,&quot;)!=-1)&#123;                    kbcontent1.firstChild.remove();                    kbcontent1.firstChild.before(classLists);                    classLists.nextSibling.remove();                    kbsort[kbcontent1.firstChild.innerHTML]=tempData;                &#125;else if(kbcontent1.childNodes[2].data.search(&quot;,&quot;)!=-1)&#123;                    kbcontent1.childNodes[2].remove();                    kbcontent1.childNodes[2].before(classLists);                    classLists.nextSibling.remove();                &#125;                kbcontent1.style.cssText += &quot;background-color:&quot;+tempJson.hsl;            &#125;            fixKBBottom(&quot;kbcontent1&quot;);            setupScalingPanel();        &#125;else&#123;            //remove zoom button and text            $(&quot;#sfFD&quot;)[0].style.display = &quot;none&quot;;            $(&quot;#xnxq01id&quot;)[0].parentElement.lastChild.remove();            let kblength = $(&quot;.kbcontent&quot;).length;            let length = $(&quot;.kbcontent1&quot;).length;            for(let i=1;i&lt;=length;i++)&#123;                kbcontent1 = $(&quot;.kbcontent1&quot;)[i-1];                kbcontent1.style.display = &quot;none&quot;;            &#125;            for(let i=1;i&lt;=kblength;i++)&#123;                let childNodes;                kbcontent = $(&quot;.kbcontent&quot;)[i-1];                childNodes = kbcontent.childNodes;                length = childNodes.length;                let kbdiv_eg = document.createElement(&quot;div&quot;);                kbdiv_eg.className = &quot;kbcontent&quot;;                kbdiv_eg.id = &quot;SimKB&quot;;                let kbdiv;                function cut_judge(node)&#123;                    if(node.nodeName != &#x27;BR&#x27;)&#123;                        if(node.data==&#x27;---------------------&#x27;)&#123;                            return true;                        &#125;                    &#125;                &#125;                function append_kbdiv()&#123;                    kbdiv.firstChild.remove();                    kbcontent.parentElement.appendChild(kbdiv);                    kblength++;                &#125;                if(kbcontent.innerHTML==&#x27;&amp;nbsp;&#x27;)&#123;                    kbcontent.style.visibility = &quot;hidden&quot;;                &#125;else if(!kbsort[kbcontent.childNodes[0].data])&#123;                    kbsort[kbcontent.childNodes[0].data] = randomColorPick().hsl;                &#125;                kbcontent.style.background = kbsort[kbcontent.childNodes[0].data];                if(kbcontent.id != &#x27;SimKB&#x27;&amp;&amp;kbcontent.innerHTML!=&#x27;&amp;nbsp;&#x27;)&#123;                    let cut_times = 0;                    let o=0;                    while(o&lt;length-1)&#123;                        if(cut_judge(childNodes[o])==true)&#123;                            break;                        &#125;                        o++;                    &#125;                    while(o&lt;length-1)&#123;                        if(cut_judge(childNodes[o])==true)&#123;                            if(cut_times!=0)&#123;                                append_kbdiv();                            &#125;                            kbdiv = kbdiv_eg.cloneNode(true);                            childNodes[o].remove();                            length--;                            cut_times++;                        &#125;                        kbdiv.appendChild(childNodes[o]);                        length--;                        if(o==length-1)&#123;                            append_kbdiv();                            kbcontent.lastChild.remove();                        &#125;                    &#125;                &#125;            &#125;            let th,second,fourth,noon,evening;            length = $(&quot;th&quot;).length;            for(let i=1;i&lt;=length;i++)&#123;                th = $(&quot;th&quot;)[i-1];                if(th.innerHTML.search(&quot;&amp;nbsp;&quot;)!=-1)&#123;                    th.innerHTML = th.innerHTML.replace(&quot;&amp;nbsp;&quot;,&quot;&quot;);                &#125;                if(th.innerHTML.search(&quot;第二大节&quot;)!=-1)&#123;                    second = th.parentElement;                &#125;                if(th.innerHTML.search(&quot;中午&quot;)!=-1)&#123;                    th.innerHTML = th.innerHTML.replace(&quot;中午&quot;,&quot;晚间&quot;);                    th.style.padding = &#x27;0px&#x27;;                    noon = th.parentElement;                    noon.style.background = &quot;#599FFE&quot;;                    evening = noon.cloneNode(true);                    th.innerHTML = th.innerHTML.replace(&quot;晚间&quot;,&quot;午间&quot;);                &#125;                if(th.innerHTML.search(&quot;第四大节&quot;)!=-1)&#123;                    fourth = th.parentElement;                &#125;                if(th.innerHTML.search(&quot;备注:&quot;)!=-1)&#123;                    th.innerHTML = th.innerHTML.replace(&quot;:&quot;,&quot;&quot;);                    th.style.padding = &#x27;0px&#x27;;                &#125;                if(i==length)&#123;                    fourth.after(evening);                    second.after(noon);                &#125;            &#125;            fixKBBottom(&quot;kbcontent&quot;);            setupScalingPanel();        &#125;    &#125;        //change sub page title    if(document.getElementsByClassName(&quot;Nsb_r_title&quot;)[0])&#123;        let title = document.getElementsByClassName(&quot;Nsb_r_title&quot;)[0];        if(title.innerText.search(&quot;&gt;&gt;&quot;)!=-1)&#123;            title.innerHTML = title.innerText.slice(title.innerText.lastIndexOf(&quot;&gt;&gt;&quot;)+2);        &#125;else&#123;            title.innerHTML = title.innerText.slice(title.innerText.lastIndexOf(&quot;» &quot;)+2);        &#125;        if(document.getElementsByClassName(&quot;Nsb_r_title&quot;)[0].previousElementSibling)&#123;            document.getElementsByClassName(&quot;Nsb_r_title&quot;)[0].previousElementSibling.remove();        &#125;    &#125;    if($(&quot;.Nsb_layout_r&quot;)[0]&amp;&amp;!$(&quot;.Nsb_l_list_now&quot;)[0])&#123;        let length = $(&quot;a[href]&quot;).length;        for(let i=1;i&lt;length;i++)&#123;            if($(&quot;a[href]&quot;)[i-1].innerText == $(&quot;.Nsb_r_title&quot;)[0].innerText)&#123;                $(&quot;a[href]&quot;)[i-1].className += &quot; Nsb_l_list_now&quot;;            &#125;        &#125;    &#125;    if($(&quot;.Nsb_layout_l&quot;)[0])&#123;        if($(&quot;.Nsb_layout_l&quot;)[0].childElementCount &lt;=1)&#123;            $(&quot;.Nsb_layout_l&quot;)[0].style.display = &quot;none&quot;;        &#125;    &#125;            //main page info fix        if(document.getElementsByClassName(&quot;Nsb_pw&quot;)[2]&amp;&amp;document.getElementById(&quot;btn_back&quot;))&#123;        let childNodes = document.getElementsByClassName(&quot;Nsb_pw&quot;)[2].childNodes;        let length = childNodes.length;        let div = document.createElement(&quot;div&quot;);        div.id = &quot;SimInfo&quot;;        for(let i=5;i&lt;=length;i++)&#123;            if(childNodes[i-2].nodeName == &#x27;BR&#x27;&amp;&amp;childNodes[i].nodeName == &#x27;BR&#x27;)&#123;                let line1 = document.createElement(&quot;div&quot;);                line1.innerHTML = childNodes[i-1].data;                div.appendChild(line1);            &#125;            if((childNodes[i-2].nodeName == &#x27;BR&#x27;&amp;&amp;childNodes[i].nodeName == &#x27;SPAN&#x27;)||(childNodes[i-2].nodeName == &#x27;SPAN&#x27;&amp;&amp;childNodes[i].nodeName == &#x27;SPAN&#x27;))&#123;                div.innerHTML += childNodes[i-1].data;            &#125;            if(childNodes[i-1].nodeName == &#x27;SPAN&#x27;)&#123;                let span = childNodes[i-1].cloneNode(true);                div.appendChild(span);            &#125;        &#125;        document.getElementById(&quot;btn_back&quot;).after(div);        for(let i=1;i&lt;=length;i++)&#123;            if((childNodes[i-1].nodeName == &#x27;BR&#x27;||childNodes[i-1].nodeName == &#x27;#text&#x27;||childNodes[i-1].nodeName == &#x27;SPAN&#x27;)&amp;&amp;(childNodes[i-1].parentElement.id!=&quot;SimInfo&quot;))&#123;                childNodes[i-1].remove();                i-=1;            &#125;            length = childNodes.length;        &#125;    &#125;    //fix pattern    if(document.getElementsByClassName(&quot;button&quot;).namedItem(&quot;selectJg0101JS&quot;))&#123;        document.getElementsByClassName(&quot;button&quot;).namedItem(&quot;selectJg0101JS&quot;).parentElement.style = &quot;display: inline-flex;&quot;;    &#125;    if(document.getElementById(&quot;button2&quot;)&amp;&amp;!document.getElementById(&quot;button1&quot;))&#123;        document.getElementById(&quot;button2&quot;).style = &quot;left:0;&quot;;    &#125;    //button input difference &amp; disabled things marker    if(document.getElementsByTagName(&quot;input&quot;).length&gt;1)&#123;        let input = document.getElementsByTagName(&quot;input&quot;);        let length = input.length;        for(let i=1;i&lt;=length;i++)&#123;           if((input[i-1].type == &quot;text&quot;||input[i-1].type == &quot;password&quot;)&amp;&amp;input[i-1].parentElement.tagName==&quot;TD&quot;)&#123;                input[i-1].className += &quot; SimInput&quot;;            &#125;            //marker for disabled input            if(input[i-1].disabled == true)&#123;                input[i-1].className += &quot; disabled&quot;;            &#125;        &#125;    &#125;    //select    if(document.getElementsByTagName(&quot;select&quot;)[0])&#123;        let select = document.getElementsByTagName(&quot;select&quot;);        let length = select.length;        for(let i=1;i&lt;=length;i++)&#123;            select[i-1].className = &quot;SimSelect&quot;;        &#125;    &#125;    if(document.getElementsByClassName(&quot;button&quot;)[0])&#123;        let button = document.getElementsByClassName(&quot;button&quot;);        if(button[0].attributes.onclick)&#123;            if((button[0].attributes.onclick.value.includes(&quot;JsMod&quot;))&amp;&amp;(button.length==1))&#123;                button[0].classList.add(&quot;centerButton&quot;);            &#125;        &#125;    &#125;        //Slim select    if($(&quot;form&quot;)[0])&#123;        if($(&quot;form&quot;)[0].action==&quot;http://jw.wbu.edu.cn/jsxsd/kbxx/jsjy_query2&quot;)&#123;            let select = document.getElementsByTagName(&quot;select&quot;);            let length = select.length;            for(let i=1;i&lt;=length;i++)&#123;                select[i-1].className += &quot; Slim&quot;;            &#125;            let input = document.getElementsByTagName(&quot;input&quot;);            length = input.length;            for(let i=1;i&lt;=length;i++)&#123;                if(input[i-1].type == &quot;text&quot;||input[i-1].type == &quot;password&quot;&amp;&amp;input[i-1].parentElement.tagName==&quot;TD&quot;)&#123;                    input[i-1].className += &quot; Slim&quot;;                &#125;            &#125;        &#125;    &#125;    //SimPage    //patch an added blank page        let script = document.getElementsByTagName(&quot;script&quot;);    let length = script.length;    for(let i=1;i&lt;=length;i++)&#123;        if(script[i-1].innerHTML.search(&quot;window.close()&quot;) != -1)&#123;            closeIframe();        &#125;    &#125;    if(!$(&quot;head&quot;)[0])&#123;        window.parent.$(&quot;#fcenter&quot;)[0].remove();    &#125;    //SimPage iframe    if($(&quot;.toolbar&quot;)[0])&#123;        $(&quot;.toolbar&quot;)[0].remove();        if($(&quot;textarea&quot;).length&lt;2&amp;&amp;$(&quot;textarea&quot;)[0])&#123;            $(&quot;table&quot;)[0].className = &quot;textform&quot;;        &#125;    &#125;    if(document.querySelector(&quot;.toolstitle&quot;))&#123;        waitForLoading(&quot;.button&quot;).then(()=&gt;&#123;            let button = document.querySelectorAll(&quot;.button&quot;);            button.forEach((e)=&gt;&#123;                if(e.attributes.onclick.value.indexOf(&quot;window.close()&quot;)!=-1)&#123;                    e.attributes.removeNamedItem(&quot;onclick&quot;);                    e.addEventListener(&quot;click&quot;, closeIframe);                &#125;            &#125;)        &#125;);    &#125;    async function waitForLoading(targetSelector)&#123;        while(true)&#123;            if(document.querySelector(targetSelector)) break;        &#125;    &#125;    //setup homepage icons    if(document.getElementsByClassName(&quot;block1&quot;)[0])&#123;        let icon1 = document.createElement(&quot;span&quot;);        let icon2 = document.createElement(&quot;span&quot;);        let icon3 = document.createElement(&quot;span&quot;);        let icon4 = document.createElement(&quot;span&quot;);        let icon5 = document.createElement(&quot;span&quot;);        let icon6 = document.createElement(&quot;span&quot;);        let icon7 = document.createElement(&quot;span&quot;);        let icon8 = document.createElement(&quot;span&quot;);        let icon9 = document.createElement(&quot;span&quot;);        let icon10 = document.createElement(&quot;span&quot;);        let icon11 = document.createElement(&quot;span&quot;);        let icon12 = document.createElement(&quot;span&quot;);        icon1.className = &quot;iconfont icon-yonghu&quot;;        icon2.className = &quot;iconfont icon-xuanke&quot;;        icon3.className = &quot;iconfont icon-pingjiao&quot;;        icon4.className = &quot;iconfont icon-jiejuefangan&quot;;        icon5.className = &quot;iconfont icon-icon-test&quot;;        icon6.className = &quot;iconfont icon-gonggao-xianxing&quot;;        icon7.className = &quot;iconfont icon-chengji&quot;;        icon8.className = &quot;iconfont icon-rili&quot;;        icon9.className = &quot;iconfont icon-jihua&quot;;        icon10.className = &quot;iconfont icon-chengji&quot;;        icon11.className = &quot;iconfont icon-xuejiyidongguanli&quot;;        icon12.className = &quot;iconfont icon-zaixianbaoming&quot;;    //fix missing block6        if(!document.getElementsByClassName(&quot;block6&quot;)[0])&#123;            let block6 = document.createElement(&quot;div&quot;);            block6.innerHTML = document.getElementsByClassName(&quot;wap&quot;)[0].getElementsByTagName(&quot;a&quot;)[4].innerHTML;            block6.className = &quot;block6&quot;;            document.getElementsByClassName(&quot;wap&quot;)[0].getElementsByTagName(&quot;a&quot;)[4].innerHTML = &quot;&quot;;            document.getElementsByClassName(&quot;wap&quot;)[0].getElementsByTagName(&quot;a&quot;)[4].appendChild(block6);        &#125;        function apply_icons(b,i)&#123;            document.getElementsByClassName(b)[0].appendChild(i);        &#125;        apply_icons(&quot;block1&quot;,icon1);        apply_icons(&quot;block2&quot;,icon2);        apply_icons(&quot;block3&quot;,icon3);        apply_icons(&quot;block4&quot;,icon4);        apply_icons(&quot;block5&quot;,icon5);        apply_icons(&quot;block6&quot;,icon6);        apply_icons(&quot;block7&quot;,icon7);        apply_icons(&quot;block8&quot;,icon8);        apply_icons(&quot;block9&quot;,icon9);        apply_icons(&quot;block10&quot;,icon10);        apply_icons(&quot;block11&quot;,icon11);        apply_icons(&quot;block12&quot;,icon12);        //add title for hide names func        document.getElementsByClassName(&quot;icon-yonghu&quot;)[0].title=&quot;点击切换个人信息展示&quot;;    &#125;    //hide personal info            if(document.getElementById(&quot;Top1_divLoginName&quot;))&#123;        //name color reset        document.getElementById(&quot;Top1_divLoginName&quot;).style=&quot;&quot;;        document.getElementById(&quot;Top1_divLoginName&quot;).title = &quot;点击切换个人信息展示&quot;;        let name_top = document.getElementById(&quot;Top1_divLoginName&quot;);        let origin_name_top = name_top.innerHTML;        if(Cookies.get(&quot;name_top&quot;)==&quot;hidden&quot;)&#123;            name_top.innerHTML = &quot;个人信息已隐藏&quot;;        &#125;        let name_inner;        let origin_name_inner;        if(document.getElementsByClassName(&quot;block1text&quot;)[0])&#123;            name_inner = document.getElementsByClassName(&quot;block1text&quot;)[0];            origin_name_inner= name_inner.innerHTML;            if(Cookies.get(&quot;name_inner&quot;)==&quot;hidden&quot;)&#123;                name_inner.innerHTML = &quot;个人信息已隐藏&quot;;            &#125;            document.getElementsByClassName(&quot;icon-yonghu&quot;)[0].addEventListener(&quot;click&quot;, name_hide);        &#125;        function name_hide_top()&#123;            if(origin_name_top==name_top.innerHTML)&#123;                name_top.innerHTML = &quot;个人信息已隐藏&quot;;                Cookies.set(&#x27;name_top&#x27;, &#x27;hidden&#x27;, &#123;path:&#x27;/&#x27;&#125;);                Cookies.set(&#x27;name_inner&#x27;, &#x27;hidden&#x27;, &#123;path:&#x27;/&#x27;&#125;);            &#125;else&#123;                name_top.innerHTML = origin_name_top;                Cookies.remove(&#x27;name_top&#x27;, &#123;path:&#x27;/&#x27;&#125;);                Cookies.remove(&#x27;name_inner&#x27;, &#123;path:&#x27;/&#x27;&#125;);            &#125;        &#125;        function name_hide_inner()&#123;            if(origin_name_inner==name_inner.innerHTML)&#123;                name_inner.innerHTML = &quot;个人信息已隐藏&quot;;                Cookies.set(&#x27;name_top&#x27;, &#x27;hidden&#x27;, &#123;path:&#x27;/&#x27;&#125;);                Cookies.set(&#x27;name_inner&#x27;, &#x27;hidden&#x27;, &#123;path:&#x27;/&#x27;&#125;);            &#125;else&#123;                name_inner.innerHTML = origin_name_inner;                Cookies.remove(&#x27;name_top&#x27;, &#123;path:&#x27;/&#x27;&#125;);                Cookies.remove(&#x27;name_inner&#x27;, &#123;path:&#x27;/&#x27;&#125;);            &#125;        &#125;        function name_hide()&#123;            if(document.getElementsByClassName(&quot;block1text&quot;)[0])&#123;                name_hide_top();                name_hide_inner();            &#125;else&#123;                name_hide_top();            &#125;        &#125;        name_top.addEventListener(&quot;click&quot;, name_hide);    &#125;    //add title for hide names func    if(document.getElementById(&quot;Footer1_divCopyright&quot;))&#123;        let footer = document.getElementById(&quot;Footer1_divCopyright&quot;);        footer.className = &quot;&quot;;        footer.style = &quot;text-align: center;&quot;        let info = document.createElement(&quot;div&quot;);        info.innerHTML = &quot;Beautified with &lt;span class=&#x27;heart&#x27;&gt;❤&lt;/span&gt;&lt;span class=&#x27;info&#x27;&gt; by Simprole&lt;/span&gt;&quot;        info.className = &quot;info&quot;;        footer.appendChild(info);    &#125;    //form btn style    if(document.getElementsByTagName(&quot;Form&quot;)[1]&amp;&amp;document.getElementsByTagName(&quot;input&quot;)[0])&#123;        let buttons = document.createElement(&quot;div&quot;);        let form=document.getElementsByTagName(&quot;Form&quot;);        if(form[form.length-1].getElementsByClassName(&quot;Nsb_r_title&quot;)[0])&#123;            form[form.length-1].getElementsByClassName(&quot;Nsb_r_title&quot;)[0].appendChild(buttons);            let btn = form[form.length-1].getElementsByTagName(&quot;input&quot;);            let btn_len = btn.length;            let validLength = 0;            if($(&quot;.Nsb_layout_r&quot;)[0])&#123;                for(let i=1;i&lt;=btn_len;i++)&#123;                    if(btn[i-1].getAttribute(&quot;onclick&quot;))&#123;                        validLength++;                    &#125;                &#125;                if(validLength&gt;=3)&#123;                    for(let i=1;i&lt;=btn_len;i++)&#123;                        if(btn[i-1].getAttribute(&quot;onclick&quot;))&#123;                            buttons.appendChild(btn[i-1]);                        &#125;                    &#125;                &#125;            &#125;else&#123;                for(let i=1;i&lt;=btn_len;i++)&#123;                    buttons.appendChild(btn[i-1]);                &#125;            &#125;        &#125;    &#125;    //setup table round corner    if(document.getElementsByClassName(&quot;Nsb_table&quot;)[0])&#123;        let table = document.getElementsByClassName(&quot;Nsb_table&quot;);        let length = table.length;        if(!document.getElementById(&quot;kbtable&quot;))&#123;            for(let i=1;i&lt;=length;i++)&#123;                if(table[i-1].border == &#x27;1&#x27;)&#123;                    table[i-1].border = &#x27;0&#x27;;                &#125;                let tr = table[i-1].getElementsByTagName(&quot;tr&quot;);                let th = tr[0].children;                if(!document.getElementsByClassName(&quot;Nsb_r_list_thb&quot;)[0]&amp;&amp;th.legnth==1)&#123;                    th[0].classList.add(&quot;Nsb_r_list_thb&quot;);                &#125;                th[0].classList.add(&quot;thb_t_l&quot;);                th[th.length-1].classList.add(&quot;thb_t_r&quot;);                let tr_c = tr[tr.length-1].children;                if(tr_c[0].tagName == &quot;TD&quot;)&#123;                    tr_c[0].classList.add(&quot;thb_b_l&quot;);                    tr_c[tr_c.length-1].classList.add(&quot;thb_b_r&quot;);                &#125;            &#125;        &#125;    &#125;    if(document.getElementById(&quot;kbtable&quot;))&#123;        let table = document.getElementById(&quot;kbtable&quot;);        if(table.border == &#x27;1&#x27;)&#123;            table.border = &#x27;0&#x27;;        &#125;        let tr = table.getElementsByTagName(&quot;tr&quot;);        let th = tr[0].getElementsByTagName(&quot;th&quot;);        let length = th.length;        th[0].className += &quot; thb_t_l&quot;;        th[th.length-1].className += &quot; thb_t_r&quot;;        let tr_c = tr[tr.length-1].children;        tr_c[0].className += &quot; thb_b_l&quot;;        tr_c[tr_c.length-1].className += &quot; thb_b_r&quot;;    &#125;    //fix a width    if($(&quot;*[name=&#x27;zyxzForm&#x27;]&quot;)[0])&#123;        $(&quot;*[name=&#x27;zyxzForm&#x27;]&quot;)[0].getElementsByTagName(&quot;div&quot;)[0].style=&quot;width:100%&quot;;    &#125;    //setup page flip btn style    if(document.getElementById(&quot;PagingControl1_btnPrevPage&quot;))&#123;        let prevbtn = document.getElementById(&quot;PagingControl1_btnPrevPage&quot;);        let nextbtn = document.getElementById(&quot;PagingControl1_btnNextPage&quot;);        prevbtn.innerHTML = &quot;&lt;&quot;;        nextbtn.innerHTML = &quot;&gt;&quot;;        if(prevbtn.attributes.disabled)&#123;            prevbtn.className = &quot;disabled&quot;;            nextbtn.className = &quot;disabled&quot;;        &#125;    &#125;    &#125;);&#125;)();\n\n自动评教效果如图：\n代码:\n// ==UserScript==// @name         WBUTeachersEvaluator// @namespace    http://tampermonkey.net/// @version      0.2// @description  WBU自动教学评价// @author       Simprole// @match        http://jw.wbu.edu.cn/jsxsd/*// @match        http://jw-wbu-edu-cn.webvpn.wbu.edu.cn:8118/jsxsd/*// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js// @run-at       document-start// @grant        unsafeWindow// @grant        GM_addStyle// @grant        GM_getResourceText// ==/UserScript==(function()&#123;    $(document).ready(function()&#123;        $(&quot;body&quot;).append($(&#x27;&lt;style&gt;input#SimBtn&#123;width: unset!important;font-size: 1rem;background-image: none;color: #fff!important;;background-color: rgb(35 119 254);border: rgb(35 119 254);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);padding: 5px 10px 5px 13px;position: relative;letter-spacing: 1px;text-align: center;text-decoration:none!important;height: min-content;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;:hover&#123;text-decoration:none;filter: brightness(0.8);box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.7);transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;&#125;&lt;/style&gt;&#x27;));        $(&quot;body&quot;).append($(&#x27;&lt;script&gt;function saveDataUnlimited(obj, status)&#123;var pj06xhs = document.getElementsByName(&quot;pj06xh&quot;);var flag = true;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;if(jQuery(&quot;input[name=\\&#x27;pj0601id_&quot;+ pj06xhs[i].value+&quot;\\&#x27;]:checked&quot;).length == 0) &#123;flag = false;break;&#125;&#125;if (!flag) &#123;alert(&quot;评价的每项指标都必须选择!&quot;);return false;&#125;flag = false;var minZb = 0;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;var pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);minZb = pj0601s.length;break;&#125;for(let j = 0; j &lt; minZb; j++) &#123;var _ind = 0;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);if (j &lt; pj0601s.length &amp;&amp; pj0601s[j].checked) &#123;_ind++;&#125;&#125;if (_ind == pj06xhs.length) &#123;flag = true;break;&#125;&#125;if (status == &quot;1&quot;) &#123;document.getElementById(&quot;issubmit&quot;).value = &quot;1&quot;;&#125; else &#123;document.getElementById(&quot;issubmit&quot;).value = &quot;0&quot;;&#125;if(status == &quot;1&quot; &amp;&amp; !confirm(&quot;您是否确认提交当前评价,提交后不能修改！&quot;)) &#123;&#125; else &#123;obj.disabled = true;document.getElementById(&quot;Form1&quot;).submit();&#125;&#125;&lt;/script&gt;&#x27;));        function autoClick(level)&#123;            document.querySelectorAll(&quot;#table1 tr td&quot;).forEach(function(e)&#123;                if(e.querySelector(&quot;input[type=radio]&quot;))&#123;                    let option = e.querySelectorAll(&quot;input[type=radio]&quot;);                    for(let i=1;i&lt;=option.length;i++)&#123;                        option[0].checked = true;                    &#125;                &#125;            &#125;)        &#125;        if(document.querySelector(&quot;script[language=javascript]&quot;))&#123;            document.querySelectorAll(&quot;script[language=javascript]&quot;).forEach((e)=&gt;&#123;                if(e.innerHTML.indexOf(&quot;alert(&#x27;保存成功&#x27;);&quot;)!=-1)&#123;                    if(window.parent.parent.document.querySelector(&quot;#SimPage&quot;))&#123;                        window.parent.parent.refresh();                    &#125;else&#123;                        window.parent.refresh();                    &#125;                &#125;            &#125;);        &#125;        if(document.querySelector(&quot;td.toolstitle&quot;))&#123;            if(document.querySelector(&quot;td.toolstitle&quot;).innerHTML==&#x27;学生评教&#x27;)&#123;                let calcBtn = document.createElement(&quot;input&quot;);                calcBtn.setAttribute(&quot;value&quot;,&quot;自动评教&quot;);                calcBtn.setAttribute(&quot;type&quot;,&quot;button&quot;);                calcBtn.classList.add(&quot;button&quot;);                calcBtn.id = &quot;SimBtn&quot;;                calcBtn.style.cssText = &quot;position: fixed;bottom: 1rem;z-index: 100;right: 1rem;&quot;                calcBtn.addEventListener(&quot;click&quot;,autoClick);                document.body.appendChild(calcBtn);                unlimitable();            &#125;        &#125;        async function unlimitable()&#123;            while(true)&#123;                if(document.querySelector(&quot;td[align][style] input[type=button][name]&quot;)) break;            &#125;            document.querySelectorAll(&quot;td[align][style] input[type=button][name]&quot;).forEach((f)=&gt;&#123;                if(f.getAttribute(&quot;onclick&quot;))&#123;                    if(f.getAttribute(&quot;onclick&quot;).indexOf(&quot;saveData&quot;)!=-1)&#123;                        f.setAttribute(&quot;onclick&quot;,&quot;saveDataUnlimited&quot;+f.getAttribute(&quot;onclick&quot;).slice(f.getAttribute(&quot;onclick&quot;).indexOf(&quot;(&quot;)));                    &#125;                &#125;            &#125;);        &#125;        function asyncSleep(time) &#123;            return new Promise((resolve) =&gt; setTimeout(resolve, time));        &#125;        function saveDataUnlimited(obj, status)&#123;                var pj06xhs = document.getElementsByName(&quot;pj06xh&quot;);                var flag = true;                for (let i = 0; i &lt; pj06xhs.length; i++) &#123;                    if(jQuery(&quot;input[name=&#x27;pj0601id_&quot;+ pj06xhs[i].value+&quot;&#x27;]:checked&quot;).length == 0) &#123;                        flag = false;                        break;                    &#125;                &#125;                if (!flag) &#123;                    alert(&quot;评价的每项指标都必须选择!&quot;);                    return false;                &#125;                flag = false;                var minZb = 0;                for (let i = 0; i &lt; pj06xhs.length; i++) &#123;                    var pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);                    minZb = pj0601s.length;                    break;                &#125;                for(let j = 0; j &lt; minZb; j++) &#123;                    var _ind = 0;                    for (let i = 0; i &lt; pj06xhs.length; i++) &#123;                        pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);                        if (j &lt; pj0601s.length &amp;&amp; pj0601s[j].checked) &#123;                            _ind++;                        &#125;                    &#125;                if (_ind == pj06xhs.length) &#123;                    flag = true;                    break;                &#125;            &#125;            if (status == &quot;1&quot;) &#123;                document.getElementById(&quot;issubmit&quot;).value = &quot;1&quot;;            &#125; else &#123;                document.getElementById(&quot;issubmit&quot;).value = &quot;0&quot;;            &#125;            if(status == &quot;1&quot; &amp;&amp; !confirm(&quot;您是否确认提交当前评价,提交后不能修改！&quot;)) &#123;            &#125; else &#123;                obj.disabled = true;                document.getElementById(&quot;Form1&quot;).submit();            &#125;        &#125;    &#125;);&#125;)();\n\n\n雨课堂刷视频代码:\n// ==UserScript==// @name         雨课堂刷视频// @namespace    http://tampermonkey.net/// @version      0.2// @description  雨课堂刷视频// @author       Simprole// @match        https://xxxxx.yuketang.cn/v2/web/xcloud/video-student/*// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js// @run-at       document-start// @grant        unsafeWindow// @grant        GM_addStyle// @grant        GM_getResourceText// ==/UserScript==(function()&#123;    $(document).ready(function()&#123;        ultraPlay();        async function ultraPlay()&#123;            await asyncSleep(2000);            let video = document.querySelector(&quot;video&quot;);            while(video.currentTime&lt;video.duration&amp;&amp;document.querySelector(&quot;.title-fr .text&quot;).innerText!=&quot;已完成&quot;)&#123;                let prevCurTime = video.currentTime;                video.currentTime += 25;                await asyncSleep(200);                if(Math.abs(prevCurTime-video.currentTime)&lt;=1)&#123;                    for(let i=1;i&lt;10;i++)&#123;                        await asyncSleep(50);                        video.currentTime = video.duration;                    &#125;                    location.reload();                &#125;            &#125;            if(document.querySelector(&quot;.title-fr .text&quot;).innerText!=&quot;已完成&quot;)&#123;                location.reload();            &#125;        &#125;        function asyncSleep(time) &#123;            return new Promise((resolve) =&gt; setTimeout(resolve, time));        &#125;    &#125;);&#125;)();","categories":["脚本"],"tags":["脚本"]},{"title":"数据结构_03：链表","url":"/2023/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-03%EF%BC%9A%E9%93%BE%E8%A1%A8/","content":"链表链，是一种什么样的东西呢？现实生活中我们都见过铁链金链和银链，它们都有一个特点，是一个环节一个环节环环相扣连接在一起的。而链表，则是一种具有相似结构的数据结构。在链表中，每一个环节，即链结，都需要负责实现两个功能：\n\n记录某些数值；\n指向下一链结。\n\n一般而言，链表可以分为两种，一种头链结为空仅指向第二个链结，另一种头链结不为空。这里我们只介绍前面一种。\n定义结构体在此之前我们已经达成了对于链结功能的共识，为了方便我们将每一个小的链结都定义成一个结构体，即：\nstruct listnode&#123;  int element;  struct listnode* next;&#125;;\n\n在这个结构体中，我们定义了两个成员整型变量element和结构体指针变量next。其中，element负责执行第一个功能，记录某些数值，而next负责指向下一个链结。\n初始化网上很多教程在初始化时会提前预想可能的链结个数，本教程奉行即插即建即用原则，在初始化时仅对头链结进行进行初始化。和顺序表一样，我们可以用typedef函数将结构体指针重命名以便于后续操作，即：\ntypedef struct listnode* Node;void setuphead(Node headnode)&#123;  headnode=malloc(sizeof(struct listnode));  headnode-&gt;next=NULL;&#125;\n\n在这个代码中，我们用malloc()函数为头链结申请了一块空间，接着保证不指向其他链结。\n判空有时我们需要判断一个链表是否为空，根据链表的性质，我们只需要判断头链结是否指向其他链结即可，即：\nint emptylist(Node headnode)&#123;  if(headnode-&gt;next)    return 1;  return 0;//0为空，1为非空&#125;\n\n插入和链子一样，链表的插入只需要将插入项与理论上的下一链结连接，再将原来连接这一链结的前一链结链接插入项即可。这个过程描述起来有些抽象，其实很多人对链表这个概念到现在都很模糊，无妨，且看下面的流程图：在上述流程图中，我们我们表明了链结的序号，其中，序号0即为头链结。至此我们已经知道了链表插入的操作流程，接下来我们就可以写程序来实现这个功能了，即：\nint insertlist(Node head, int element, int index)&#123;  if(index&lt;1)    return 0;  while(--index)  &#123;    head=head-&gt;next;//向后寻找到插入结点的前结点    if(head==NULL)//插入位置非法      return 0;  &#125;  Node node=malloc(sizeof(struct listnode));//新建一个链结并为其申请内存  if(node==NULL)//判断申请内存是否失败，失败返回0    return 0;  node-&gt;element=element;  node-&gt;next=head-&gt;next;  head-&gt;next=node;  return 1;&#125;\n\n删除与插入相似的，从链表中删除一个元素只需要断开该元素与指向这个元素的链结之间的联系，并且将指向该元素的链结指向该元素指向的链结。乍一听可能有些抽象，这里我们同样用一个流程图来表述：通过该流程图，我们可以很好地理解删除的全过程，即：\nint deletelist(Node head, int index)&#123;  if(index&lt;1)    return 0;  while(--index)  &#123;    head=head-&gt;next;    if(head==NULL)      return 0;  &#125;  if(head-&gt;next==NULL)    return 0;  Node tmp=head-&gt;next;  head-&gt;next=head-&gt;next-&gt;next;  free(tmp);  tmp=NULL;  return 1;&#125;\n\n查找长度和顺序表不一样的是，我们在构建链表结构体时并没有引入一个变量来表示链表的长度，但是根据链表的定义，我们可以很容易地知道，一个链表的最后一个链结并不指向其他链结，所以我们只需要从头开始遍历整个链表，找到那个特殊的链结即可，即：\nint sizelist(Node head)&#123;  int i=1;  while(head)  &#123;    head=head-&gt;next;    i++;  &#125;  return i;&#125;\n\n查找元素在查找元素这个操作中，我们可以很容易采取遍历查找的方式来实现，即：\nint findlist(Node head, int element)&#123;  head=head-&gt;next;  int i=1;  while(head)  &#123;    if(head-&gt;element==element)      return i;    head=head-&gt;next;    i++;  &#125;  return 0;&#125;\n\n查找索引和顺序表不一样的是，我们在定义链表结构体时并没有引入索引这一变量，这也就导致了我们在查找索引时必须要从表头开始查找，因而在执行查找索引这一操作上链表的效率低于顺序表。我们可以很容易地用遍历的方法来实现查找索引的功能，即：\nint* getlist(Node head, int index)&#123;  if(index&lt;1)    return 0;  do  &#123;    head=head-&gt;next;    if(head==NULL)      return 0;  &#125;  while(--index);  return &amp;head-&gt;element;&#125;\n\n打印当我们想要实现打印链表功能时，我们只需要从头开始边遍历整个链表边打印元素直至链结不再指向下一链结为止，即：\nvoid printlist(Node head)&#123;  while(head-&gt;next)  &#123;    head=head-&gt;next;    printf(&quot;%d &quot;,head-&gt;element);  &#125;  printf(&quot;\\n&quot;);&#125;\n\n顺序表与链表的区别如果我们深入思考了上一节中讲的顺序表，我们会发现它在一定程度上和数组十分相似，并且它在存储时也是一段连续的内存，而本节所讲的链表是不连续存储的。在我们日常生活中，有时会遇到顺序表和链表如何抉择的问题。一个数据结构往往要实现增删查改四个功能。其实，当我们仔细比较其优缺点后，我们很容易发现顺序表在查改方面存在优势，而链表在增删方面存在优势。这也就意味着，当我们实际使用时，可以根据所用的次数来决定如何选择。\n总结链表作为一个经典的数据结构，在学习上会存在着一定的难度。但是，有了前面顺序表的基础，再加上认真钻研，实际理解起来还是很简单的。值得注意的是，数据结构并不是一门基于某某语言的课程，实际上，我们可以用任何语言来写数据结构。同时，即便是同种语言下的数据结构，在实现起来也会存在代码的不同，本教程仅仅提供一种解决方案。我们在学习时，一定不要局限于形式上的不同，关键要领略其核心思想，勤于思考才能事半功倍。\n附代码#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;struct listnode&#123;  int element;  struct listnode* next;&#125;;typedef struct listnode* Node;void setuphead(Node headnode)&#123;  headnode=malloc(sizeof(struct listnode));  headnode-&gt;next=NULL;&#125;int emptylist(Node headnode)&#123;  if(headnode-&gt;next)    return 1;  return 0;//0为空，1为非空&#125;int insertlist(Node head, int element, int index)&#123;  if(index&lt;1)    return 0;  while(--index)  &#123;    head=head-&gt;next;    if(head==NULL)      return 0;  &#125;  Node node=malloc(sizeof(struct listnode));  if(node==NULL)    return 0;  node-&gt;element=element;  node-&gt;next=head-&gt;next;  head-&gt;next=node;  return 1;&#125;int deletelist(Node head, int index)&#123;  if(index&lt;1)    return 0;  while(--index)  &#123;    head=head-&gt;next;    if(head==NULL)      return 0;  &#125;  if(head-&gt;next==NULL)    return 0;  Node tmp=head-&gt;next;  head-&gt;next=head-&gt;next-&gt;next;  free(tmp);  tmp=NULL;  return 1;&#125;int sizelist(Node head)&#123;  int i=1;  while(head)  &#123;    head=head-&gt;next;    i++;  &#125;  return i;&#125;int findlist(Node head, int element)&#123;  head=head-&gt;next;  int i=1;  while(head)  &#123;    if(head-&gt;element==element)    return i;    head=head-&gt;next;    i++;  &#125;  return 0;&#125;int* getlist(Node head, int index)&#123;  if(index&lt;1)  return 0;  do  &#123;    head=head-&gt;next;    if(head==NULL)      return 0;  &#125;  while(--index);  return &amp;head-&gt;element;&#125;void printlist(Node head)&#123;  while(head-&gt;next)  &#123;    head=head-&gt;next;    printf(&quot;%d &quot;,head-&gt;element);  &#125;  printf(&quot;\\n&quot;);&#125;int main()&#123;  ...&#125;\n\n参考资料本教程参考资料如下：\n\nB站视频：《数据结构与算法 已完结（CLion 2022 最新版）4K蓝光画质+杜比音效 全程高能》《【强烈推荐】深入浅出数据结构 - 顶尖程序员图文讲解 - UP主翻译校对 (已完结)》\nCSDN文章：《c语言链表详解（超详细）》《关于链表，看这一篇就够了！（新手入门）》《链表(开辟和不开辟新空间)》\n\n返回目录你可以点击此处返回或查看目录。\n","categories":["数据结构"],"tags":["C语言","教程","数据结构"]},{"title":"数据结构_06：队列","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-06%EF%BC%9A%E9%98%9F%E5%88%97/","content":""},{"title":"数据结构_04：特殊链表","url":"/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-04%EF%BC%9A%E7%89%B9%E6%AE%8A%E9%93%BE%E8%A1%A8/","content":"双向链表在单链表，也就是上一节提到的普通链表中，当我们需要完成插入或者删除操作时，我们通常需要找到需要操作的链结的上一个链结，为了解决这个问题，双向链表应运而生。双向链表的结构如下图所示：基于双向链表的不同结构，我们需要对定义结构体，初始化，插入和删除功能进行更新，而其他功能的实现则与单链表相同。\n定义结构体对于双向链表需要指向前一个链结的功能，我们需要在结构体中添加一个结构体指针变量来指向前一个结点，即：\nstruct listnode&#123;  int element;  struct listnode* next;  struct listnode* prev;&#125;\n\n由于已经有了单链表基础，对于定义结构体此处不再过多赘述。\n初始化双向链表在初始化时只需要将前链也设置为NULL即可，其余的和本教程中单链表一样，在初始化时仅对头链结进行进行初始化，同时对结构体指针重命名以便于后续操作，即：\ntypedef struct listnode* Node;void setuphead(Node headnode)&#123;  headnode=malloc(sizeof(struct listnode));  headnode-&gt;next=NULL;  headnode-&gt;prev=NULL;&#125;\n\n插入和单链表不同的是，双向链表在插入时需要操作的链更多，这里我们依然用一个流程图来解释全过程：基于此流程图，我们可以设计出一下代码，即：\nint insertlist(Node head, int element, int index)&#123;  if(index&lt;1)    return 0;  while(--index)  &#123;    head=head-&gt;next;//向后寻找到插入结点的前结点    if(head==NULL)//插入位置非法      return 0;  &#125;  Node node=malloc(sizeof(struct listnode));//新建一个链结并为其申请内存  if(node==NULL)//判断申请内存是否失败，失败返回0    return 0;  node-&gt;element=element;  if(head-&gt;next)//先处理后结点，若存在  &#123;    node-&gt;next=head-&gt;next;    head-&gt;next-&gt;prev=node;  &#125;  else//若后结点不存在  &#123;    node-&gt;next=NULL;  &#125;  head-&gt;next=node;//操作前结点  node-&gt;prev=head;  return 1;&#125;\n\n再完成这一系列操作后，我们可以将其正向反向分别遍历一遍以测试效果。\n删除删除操作相较于插入较为简单，先看流程图：据此，我们很容易设计出代码，即：\nint deletelist(Node head, int index)&#123;  if(index &lt; 1)//先找到位置    return 0;  while(--index)  &#123;    head=head-&gt;next;    if(head == NULL)      return 0;  &#125;  if(head-&gt;next==NULL)    return 0;  Node tmp=head-&gt;next;  if(head-&gt;next-&gt;next)//删除非尾结点  &#123;    head-&gt;next-&gt;next-&gt;prev=head;    head-&gt;next=head-&gt;next-&gt;next;  &#125;  else  &#123;    head-&gt;next=NULL;//删除尾结点  &#125;  free(tmp);  tmp=NULL;  return 1;&#125;\n双向链表的其他操作与单链表大致相同，这里就不做介绍了。\n循环链表相对于普通链表，循环链表多了一个尾结点指向头结点的链，这样的链表从任意结点出发都可以达到任意结点，结构如下图所示：循环链表的代码较为简单，仅仅需要在普通链表的基础上将尾结点指向头结点即可，这里不做赘述。\n总结双向链表和循环链表本质上还是链表，它们只是链表为了适应不同环境的产物，这也就启发我们在实际运用数据结构时也要根据实际情况进行变化。\n返回目录你可以点击此处返回或查看目录。\n","categories":["数据结构"],"tags":["C语言","教程","数据结构"]},{"title":"数据结构_05：栈","url":"/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-05%EF%BC%9A%E6%A0%88/","content":"栈的概念汉语中对栈字的解释是存储货物或供旅客住宿的房屋，对应的，在计算机中栈指的是数据暂时存储的地方。栈的特点，就像我们玩的俄罗斯方块一样，我们只能在最顶部进行操作。对此，我们总结为先进后出、后进先出。对此，我们可以有流程图便于理解：\n顺序表实现栈栈的实现可以基于顺序表或是链表，这里我们先用顺序表实现，这里我们需要实现两个新的功能：\n\n入栈（push）：入栈操作，向栈中压入一个新的元素；\n出栈（pop）：出栈操作，从栈顶取出一个元素。\n\n定义结构体这里我们基于顺序表设计，即：\nstruct stack&#123;  int* array;  int capacity;  int top;//当前的栈顶&#125;\n\n初始化这里我们基于顺序表设计，即：\ntypedef struct stack* arraystack;int setupstack(arraystack stack_)&#123;  stack_-&gt;array=malloc(sizeof(int)*10);//初始容量为10  if(stack_-&gt;array==NULL)    return 0;    stack_-&gt;capacity=10;    stack_-&gt;top=-1;//由于没有元素，栈顶默认为-1    return 1;&#125;\n\n扩容在正式开始设计入栈功能之前，我们可以预料到在入栈时可能会产生容量不够的情况，故我们可以先设计扩容功能，即：\nint extendstack(arraystack stack_)&#123;  int newcapacity=stack_-&gt;capacity*2;//内存扩展两倍  int* newarray=realloc(stack_-&gt;array, sizeof(int)*newcapacity);  if(newarray==NULL)    return 0;  stack_-&gt;array=newarray;  stack_-&gt;capacity=newcapacity;  return 1;&#125;\n\n入栈由于栈只能从尾部插入，所以入栈操作实现起来非常简单，同时我们需要用上刚刚设计好的扩容，即：\nint pushstack(arraystack satck_, int element)&#123;  if(stack_-&gt;top+1==stack-&gt;capacity)  &#123;    if(!extendstack(stack_))      return 0;  &#125;  stack_-&gt;array[stack-&gt;top+1]=element;  stack_-&gt;top++;  return 1;&#125;\n\n判空在出栈之前，我们需要判断一下栈是否为空，即：\nint isempty(arraystack stack_)&#123;  if(!stack_-&gt;+1)    return 0;  return 1;//为空时返回0，不为空时返回1&#125;\n\n出栈出栈操作便更加简单了，只需要将栈顶元素取出即可，即：\nint popstack(arraystack stack_)&#123;  return stack_-&gt;array[stack_-&gt;top--]&#125;\n\n共享栈为了提高栈的利用率，我们可以将一个固定长度的数组共享给两个栈来使用，将数组的两头作为两个栈的栈底，当两个栈的栈顶想要时表示栈已满。\n链表实现栈在上文中我们介绍了用顺序表实现栈，然而在实际中，使用链表来实现栈会显得更加方便。我们规定链表表头指向栈顶，而栈顶指向后续的元素直至栈底。每当有新的元素入栈，我们只需要在链表头部插入新的结点即可。\n初始化有链表作为基础，我们可以很容易初始化，即：\nstruct listnode&#123;  int element;  struct listnode* next;&#125;typedef struct listnode* Node;void setuplist(Node head)&#123;  head-&gt;next=NULL;&#125;\n\n入栈有链表作为基础，我们可以很容易的入栈，即：\nint pushstack(Node head, int element)&#123;  Node node=malloc(sizeof(struct listnode));  if(node==NULL)    return 0;  node-&gt;next=head-&gt;next;  node-&gt;element=element;  head-&gt;next=node;  return 1;&#125;\n\n判空在出栈之前我们需要判断栈是否为空，和链表类似的，我们只需要看头结点即可，即：\nint isempty(Node head)&#123;  if(head-&gt;next)    return 1;  return 0;&#125;\n\n出栈有上文和链表作为基础，我们可以很容易实现出栈，即：\nint popstack(Node head)&#123;  Node top=head-&gt;next;  head-&gt;next=head-&gt;next-&gt;next;  int tmp=top-&gt;element;  free(top);  top=NUll;  return tmp;//返回栈顶元素&#125;\n\n总结栈本质上是基于前面所说的两种线性表的一种特殊线性表，有前面的学习作为基础，在学习时并不会产生多大困难。相似的，下一节所讲的队列也是一种特殊的线性表。\n返回目录你可以点击此处返回或查看目录。\n","categories":["数据结构"],"tags":["C语言","教程","数据结构"]},{"title":"数据结构_07：线性表实战","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-07%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%AE%9E%E6%88%98/","content":""},{"title":"数据结构_08：二叉树","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-08%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%A0%91/","content":""},{"title":"数据结构_10：其他树","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-10%EF%BC%9A%E5%85%B6%E4%BB%96%E6%A0%91/","content":""},{"title":"数据结构_09：高级树","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-09%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%A0%91/","content":""},{"title":"数据结构_11：树实战","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-11%EF%BC%9A%E6%A0%91%E5%AE%9E%E6%88%98/","content":""},{"title":"数据结构_13：图","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E5%9B%BE/","content":""},{"title":"数据结构_12：散列表","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-12%EF%BC%9A%E6%95%A3%E5%88%97%E8%A1%A8/","content":""},{"title":"数据结构_14：图应用","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-14%EF%BC%9A%E5%9B%BE%E5%BA%94%E7%94%A8/","content":""},{"title":"数据结构_15：排序算法","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-15%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","content":""},{"title":"数据结构_13：排序算法","url":"/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","content":""},{"title":"数论杂记","url":"/2023/04/02/%E6%95%B0%E8%AE%BA%E6%9D%82%E8%AE%B0/","content":"前言原本打算将这篇博客取名数论基础，然而想想实在狂妄，本文仅仅记录了一些在做编程题时可能会用到的数学方法，离正统的数论还相差甚远，就数论杂记一名仍有蹭热度之嫌，不甚惶恐，留下这篇杂记。\n最大公约数 —— Greatest Common Divisor(GCD)朴素的暴力法求最大公约数和辗转相除法的思想这里都不做赘述，我们仅仅介绍两种超快的求最大公约数算法：\n\n位运算法（a*b!&#x3D;0）\nint gcd(int a,int b)&#123;  while(b^=a^=b^=a%=b);  return a;&#125;\n\nif+while+位运算法\nint gcd(int a,int b)&#123;  if(b) while((a%=b)&amp;&amp;(b%=a));  return a+b;&#125;\n\n质数判断朴素的暴力法这里不再赘述，我们仅仅介绍一种超快的判断质数方法：\nbool prime(int num)&#123;  if(num==1)  return false;  if(num==2||num==3)  return true;  if(num%6!=1&amp;&amp;num%6!=5)  return false;  int tmp=sqrt(num);  for(int i=5;i&lt;=tmp;i+=6)    if(num%i==0||num%(i+2)==0)      return false;  return true;&#125; \n\n分解质数已知一个数可以分解成1和其本身相乘形式、或一种确定的若干个的质数相乘的形式，我们可以设计一种算法统计这些形式的长度（其中不包括1）：\nint sum(int i)&#123;  int n=0,m=2;  while(i!=1&amp;&amp;m&lt;=sqrt(i))  &#123;    while(i%m==0)    &#123;      n++;      i/=m;    &#125;    m++;  &#125;  if(i!=1)  n++;  return n;&#125;\n我们也可以设计一个朴素的算法来输出这个序列：\nvoid prim(int m)&#123;    int n = 2;    while(m&gt;=n)    &#123;        while(m%n) n++;        cout&lt;&lt;n&lt;&lt;&quot; &quot;;        m/=n;    &#125;    cout&lt;&lt;endl;&#125;\n\n约数个数在上文中我们提到了任何一个数都可以分解为质数相乘的形式，我们很容易联想到一个数的约数个数会和其质数数量存在某种联系，实际上也确实如此：\n\n一个数约数的个数等于其分解成的各个质数的幂次数加一之和的积。\n\n最小公倍数对于最小公倍数的计算，我们首先可以基于gcd的基础得到一个简单的算法：\nint ans(int a,int b)&#123;  return a*b/gcd(a,b);&#125;\n我们还可以根据上文的约数分解逆推出求其最小公倍数的公式，我们知道如果某个数a含有约数b，那么数a的倍数也含有这个约数b，因此有结论：\n\n最小公倍数等于各个数字分解而成的各个质数在所有数字中最大幂次的积。\n\n大数运算","categories":["杂项"],"tags":["C++","数论"]},{"title":"来自云上的湍流","url":"/2022/09/07/%E6%9D%A5%E8%87%AA%E4%BA%91%E4%B8%8A%E7%9A%84%E6%B9%8D%E6%B5%81/","content":"欢迎来到本blog，很高兴在此与大家相识！\n","categories":["杂项"],"tags":["杂项"]},{"title":"算法期末可能的重点","url":"/2023/12/15/%E7%AE%97%E6%B3%95%E6%9C%9F%E6%9C%AB%E5%8F%AF%E8%83%BD%E7%9A%84%E9%87%8D%E7%82%B9/","content":"免责声明该篇只是个人基于自己对算法课程的理解以及对期末考试可能涉及的知识点的预测，并不具备权威性质，请读者自行甄别，合理选择复习内容，一切后果请自己承担。\n第1章 算法概述1.1 算法和程序1.算法的概念：通俗的讲，算法是指解决问题的一种方法或一个过程。\n\n算是一个非常基础的内容，感觉应该是必考\n\n2.算法的性质：\n\n输入：有零个或多个由外部提供的量作为算法的输入。\n输出：算法产生至少一个量作为输出。\n确定性：组成算法的每条指令\n有限性：算法中每条指令的执行次数是有限的，执行每条指令的时间也是有限的。\n\n\n算法的四个性质，把意思记住和关键词记住就行，输入和输出的个数要想明白\n\n3.算法与程序的关系：程序与算法不同。程序是算法用某种程序设计语言的具体实现。程序可以不满足算法的有限性。\n\n感觉考的概率很高，记住程序可以不满足算法的有限性\n\n1.2 算法复杂性分析1.算法复杂性的概念：算法所需要的计算机资源，有时间复杂性和空间复杂性之分。\n\n基本概念，考的可能不大，但要知道\n\n2.算法复杂度的区别：算法复杂性有最坏情况，最好情况和平均情况下之分。其中，可操作性最好且最具有实际价值的是最坏情况下的时间复杂性。\n\n要了解到最坏情况下时间复杂性的实际价值，并会求\n\n3.算法渐近复杂性：通俗的说，算法渐近复杂性是问题输入规模趋近于无穷时算法的复杂性，渐近意义下有四个记号，这里在书中第3页有具体的说明，其中最常用的是大写的字母O，其概念是复杂性的一个上界。\n\n很繁琐的概念，看需求复习，但大写字母O是重点\n\nEX.算法复杂性的求法：因为绝大情况下在求算法复杂性的时候会求最坏情况下的渐近复杂性，也就是大写字母O所表示的复杂性，而写法往往又是问题规模n的一个表达式或是常数1，这个时候我们求复杂性的时候可以从大局上来看而不斤斤计较于细枝末节，一些经验比如二分往往和log，一个for往往代表n的一次幂等。\n\n个人经验，可跳过\n\n第2章 递归和分治策略2.1 递归的概念1.递归算法的概念：直接或间接地调用自身的算法称为递归算法\n\n基本概念，简单记记\n\n2.递归函数的概念：用函数自身给出的定义的函数称为递归函数。\n\n同上\n\n3.递归算法的例子：Fibonacci数列、Hanoi塔问题等\n\n列举的两个是非常经典的问题，均易于理解，前者方便实现\n\nEX：递归函数的设计：在设计递归函数时往往需要具备两个结构，一个是终止层，一个是递归层。\n\n我记得好像讲了，但是翻书没找到\n\n2.2 分治法的基本思想1.分治法的基本思想：分治法的基本思想是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题相同。\n\n书上概念\n\n2.分治法的解题方向：自底向上。\n\n概念\n\n2.3 - 2.8 递归+分治的一些算法从2.3到2.8总共介绍了6种递归+分治的例子，根据算法实现难易程度和算法常用程度大致有以下分级：\n\n二分搜索技术：最常用而且最易实现，建议熟读代码，考代码的概率很大。\n\n大整数的乘法：实现起来有一定难度，领略思维即可。\n\nStrassen矩阵乘法：实现起来有一定难度，领略思维即可。\n\n棋盘覆盖：实现起来有一定难度，领略思维即可。\n\n合并排序：常用较容易实现，熟悉代码。\n\n合并排序：常用较容易实现，熟悉代码。\n\n\n第3章 动态规划动态规划算法适用于解最优化问题，通常可按以下4个步骤设计：\n\n找出最优的性质，并刻画其结构特征。\n\n递归地定义最优值。\n\n以自底向上的方式计算最优值。\n\n根据计算最优值时得到的信息，构造最优解。\n\n\n其中关于最优值和最优解的概念，最优值一般是一个答案，而最优解是得到这个答案的过程。\n3.1 矩阵连乘问题矩阵乘法属于线性代数问题，忘了的可以简单看看，矩阵连乘问题代码实现起来很复杂，属于是几乎不会考代码，但是由这个例子引出的求解动态规划问题的基本框架需要记住，即：\n\n分析最优解的结构\n\n建立递归关系\n\n计算最优值\n\n构造最优解\n\n\n3.2 动态规划算法的基本要素动态规划算法一般具备两个基本要素：\n\n最优子结构：当问题的最优解包含了其子问题的最优解时，称该问题具有最优子结构性质。\n\n重叠子问题：当用递归算法自顶向下解此问题时，每次产生的子问题并不总是新问题，有些子问题被反复计算。\n\n\n此外，备忘录算法是一种与动态规划算法相似的算法，它们都使用表格来保存已解决的子问题的答案，备忘录方法是动态规划算法的变形。\n\n\n\n属性\n动态规划\n备忘录方法\n\n\n\n递归方式\n自底向上\n自底向下\n\n\n求解内容\n全部求解\n按需求解\n\n\n3.3 最长公共子序列很经典的动态规划问题，但是代码具有一定难度，大概率不会手写，建议熟悉代码。\n3.4 最长子段和很经典的动态规划问题，但是代码具有一定难度，大概率不会手写，建议熟悉代码。\n3.10 0-1背包问题非常经典的动态规划问题，考代码的可能性很大，建议认真复习，能够写出代码。\n第4章 贪心算法当一个问题具有最优子结构性质时，可用动态规划法求解。有时会有更简单有效的算法，即贪心算法。贪心算法往往通过实现局部最优解得到一个整体最优解。\n4.1 活动安排问题很简单很经典的问题，建议熟悉并能写出来。\n该问题采用的贪心选择策略是：每次选择可选择的活动中结束时间最早的那个。\n4.2 贪心算法的基本要素贪心算法有两个重要性质：\n\n贪心选择性质：所求问题的整体最优解可以通过一系列局部最优的选择，即贪心选择来达到。\n\n最优子结构性质：当一个问题的最优解包含其子问题的最优解时，称此问题具有最优子结构性质。\n\n\n贪心算法的这两个性质在根本上决定了它和动态规划法的异同之处，在解决贪心问题时，要能够分析出它的贪心选择策略，即贪心选择的方法。\n4.3 最优装载很简单很经典的问题，建议熟悉并能写出来。\n该问题采用的贪心选择策略是：重量最轻者先装。\n4.4 哈夫曼编码很经典的问题，但代码具备难度，不太可能手写，要理解思路。\n该问题采用的贪心选择策略是：每次选择频率最小的两个字符组合。\n4.5 单源最短路径很经典的问题，但代码具备难度，不太可能手写，要理解思路。\n该问题采用的贪心选择策略是：每次将所有未添加的点中与集合距离最短的点添加到集合中。\n4.6 最小生成树最小生成树可以通过Prim和kruskal两种算法实现，其中实现方式，即贪心选择策略有所不同：\n\nPrim算法：每次将所有未添加的边中与集合距离最短的边添加到集合中。\n\nkruskal算法：每次将非同一集合中距离最短的两个边连接，直至形成一个集合。\n\n\n第5章 回溯法回溯法是一种以深度优先方式系统搜索问题解的算法，可以系统地搜索一个问题的所有解或任一解。\n5.1 回溯法的算法框架1.问题的解空间\n一般用树或图的方式组织解空间，要会画图。\n其中解空间树分为两类：\n\n子集树：子集树对于问题的排列并无要求，不同的排列属于问题的一个答案。\n\n排列树：排列树对于问题的排列有要求，不同的排列构成不同的答案。\n\n\n2.回溯法在搜索解空间树时通常采取两种方式来避免无效搜索：\n\n约束函数：在扩展结点处剪去不满足约束的子树。\n\n限界函数：剪去得不到最优解的子树。\n\n\n单看这两种方式可能并不能明白其中不同，有一个例子：\n\n在1、2、3、4、5、6、7、8中取两个奇数，求最小和。\n\n虽然这个例子非常简单，明眼人一看便知道答案是1+3&#x3D;4，但不妨套入回溯法的解题框架。\n在回溯法中，程序每次都会选择一个奇数相加，当选择了两个奇数后便会比较当前的最小值与两个奇数的和，将更小的那个作为最小值。\n在这个例子中，程序每次都会先判断当前选择的数是不是奇数，这就是约束函数；当得到了1+3&#x3D;4这个值后，若程序选择第一个奇数为5，显然5大于4不可能得到一个更小的值，此时程序就没必要选择第二个奇数，这就是限界函数。\n3.实现回溯法的两个方法：\n\n递归回溯：使用递归实现，建议熟练掌握。\n\n迭代回溯：使用循环实现，代码很难，建议熟悉。\n\n\n5.2 装载问题代码实现起来有难度，应该不会考手写，建议熟悉。\n该问题的解空间树为子集树。\n该问题的约束函数为：判断当前货物重量是否小于剩余集装箱的重量。\n该问题上界函数，即限界函数为：若当前载重量与剩余集装箱重量之和小于当前最优载重量，则不考虑不装当前货物的情况。\n5.5 n后问题代码实现起来有难度，应该不会考手写，建议熟悉。\n该问题的解空间树为排列树。\n该问题的约束函数为：判断当前位置上是否属于其他皇后的同行、列以及对角线。\n该问题无限界函数。\n因为皇后之间不能同行且棋盘为矩形，所以一般遍历时按行遍历即可，无需对每个位置都判断一下。\n5.6 0-1背包问题代码实现起来有难度，应该不会考手写，建议熟悉。\n该问题的解空间树为子集树。\n该问题的约束函数为：判断当前物品重量是否小于剩余背包的重量。\n该问题上界函数，即限界函数为：若当前价值与剩余物品价值之和小于当前最优价值，则不考虑不装当前物品的情况。\n计算右子树的上界时可以将物品按单位重量价值递减的顺序加入，若出现放不下一个完整的物品的情况，可取该物品的一部分将背包填满。\n左子树的上界与父节点相同。\n结语暂时更新到这里，有问题可以联系QQ：851137399。\n后续会根据反馈调整内容。\n","categories":["算法"],"tags":["算法"]},{"title":"评教教程","url":"/2022/12/14/%E8%AF%84%E6%95%99%E6%95%99%E7%A8%8B/","content":"Edge评教流程首先打开网址webvpn.wbu.edu.cn，然后不要着急输入账密，按照以下流程操作：\n\n右上角打开设置,点击默认浏览器：如果上述没有成功，你也可以这样操作：\n开启允许打开IE兼容模式后，我们还要点击右上角设置把IE兼容模式打开：如果你在第一步中选择了第二种方式，此时你可以：\n完成了上述步骤后就可以输入密码了，后面的步骤非常简单\n\n注意事项\n评教时不可以全打一样的分，也就是说最高打93分。\n直接提交后可能会发现还是显示的0分，但是再进去就会发现已经有分了。\n\n","categories":["教程"],"tags":["教程"]}]