<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title> 云湍小站 </title>
  
  <subtitle> 来自云上的湍流 </subtitle>
  <link href="https://gitee.com/cloudstill/cloudstill.git/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/cloudstill/cloudstill.git/"/>
  <updated>2024-01-13T09:09:02.601Z</updated>
  <id>https://gitee.com/cloudstill/cloudstill.git/</id>
  
  <author>
    <name>云湍/Cloudstill</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024年1月15日刷题记录</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2024/01/13/2024%E5%B9%B41%E6%9C%8815%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2024/01/13/2024%E5%B9%B41%E6%9C%8815%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2024-01-13T09:09:02.000Z</published>
    <updated>2024-01-13T09:09:02.601Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>2024年1月7日每周总结</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2024/01/06/2024%E5%B9%B41%E6%9C%885%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2024/01/06/2024%E5%B9%B41%E6%9C%885%E6%97%A5%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</id>
    <published>2024-01-06T04:14:38.000Z</published>
    <updated>2024-01-08T12:08:20.363Z</updated>
    
    <content type="html"><![CDATA[<h2 id="牛客小白月赛85"><a href="#牛客小白月赛85" class="headerlink" title="牛客小白月赛85"></a>牛客小白月赛85</h2><p>半小时不到开出A、B、C，后面两小时（包括赛后半小时）没开出来D，赛场上浅看了一下E没做，赛后补出来E，F题DP不会做，贪心过了40%，看大佬代码补。</p><h3 id="A-ACCEPT"><a href="#A-ACCEPT" class="headerlink" title="A-ACCEPT"></a>A-ACCEPT</h3><h4 id="题目详情"><a href="#题目详情" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic1.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/A">https://ac.nowcoder.com/acm/contest/72980/A<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>签到，字符哈希处理出现次数找到最小值（C取一半），有一点木桶效应的意思。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string str;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; mci;</span><br><span class="line">        mci[<span class="string">&#x27;A&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        mci[<span class="string">&#x27;C&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        mci[<span class="string">&#x27;E&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        mci[<span class="string">&#x27;P&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        mci[<span class="string">&#x27;T&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i] == <span class="string">&#x27;A&#x27;</span> || str[i] == <span class="string">&#x27;C&#x27;</span> || str[i] == <span class="string">&#x27;E&#x27;</span> || str[i] == <span class="string">&#x27;P&#x27;</span> || str[i] == <span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">                mci[str[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans = n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> i : mci)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = i.y;</span><br><span class="line">            <span class="keyword">if</span>(i.x == <span class="string">&#x27;C&#x27;</span>)    tmp /= <span class="number">2</span>;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-咕呱蛙"><a href="#B-咕呱蛙" class="headerlink" title="B-咕呱蛙"></a>B-咕呱蛙</h3><h4 id="题目详情-1"><a href="#题目详情-1" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic2.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/B">https://ac.nowcoder.com/acm/contest/72980/B<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>签到题，有规律如下：奇奇偶偶，故得解。</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; n + ((n - <span class="number">1</span>) / <span class="number">2</span> + <span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-得分显示"><a href="#C-得分显示" class="headerlink" title="C-得分显示"></a>C-得分显示</h3><h4 id="题目详情-2"><a href="#题目详情-2" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic3.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/C">https://ac.nowcoder.com/acm/contest/72980/C<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h4><p>对于每一关的得分都计算平均得分，求出其中最大值。因为每天的得分只保留整数，故对每天的得分都加1，最后输出结果再减0.00000000001。</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">long</span> <span class="type">double</span> x = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; p[i];</span><br><span class="line">    x = p[n - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">double</span> tmp = (<span class="type">long</span> <span class="type">double</span>)(p[i] + <span class="number">1</span>) / (i + <span class="number">1</span>);</span><br><span class="line">        x = <span class="built_in">min</span>(x, tmp);</span><br><span class="line">    &#125;  </span><br><span class="line">    x -= <span class="number">0.00000000001</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.10llf&quot;</span>, x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="D-阿里马马与四十大盗"><a href="#D-阿里马马与四十大盗" class="headerlink" title="D-阿里马马与四十大盗"></a>D-阿里马马与四十大盗</h3><h4 id="题目详情-3"><a href="#题目详情-3" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic4.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/D">https://ac.nowcoder.com/acm/contest/72980/D<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h4><p>先判断是否满足逃生要求，若满足要求则尽可能提前最后一次恢复的时间，该时间之前所有的陷阱所扣血量加上每一步自然消耗的时间即为答案。</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span> ;</span><br><span class="line"></span><br><span class="line">ll a[N], s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll sum = <span class="number">0</span>, ans = <span class="number">1e18</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == <span class="number">0</span>) sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> sum += a[i];</span><br><span class="line"><span class="keyword">if</span> (sum &gt;= m)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">sum += a[i];</span><br><span class="line"><span class="keyword">if</span> (a[i] == <span class="number">0</span> &amp;&amp; sum &lt; m) ans = <span class="built_in">min</span>(ans, s[i - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; ans + n - <span class="number">1</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="E-烙饼"><a href="#E-烙饼" class="headerlink" title="E-烙饼"></a>E-烙饼</h3><h4 id="题目详情-4"><a href="#题目详情-4" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic5.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/E">https://ac.nowcoder.com/acm/contest/72980/E<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h4><p>根据题意有以下两个结论：</p><ul><li>总花费的时间等于$max(a_i,\frac{\sum_{1}^{n} a_i}{n})$</li><li>一张饼所花费的烙饼时间小于两倍的总时间，即一张饼只需要两个烙饼机。</li></ul><p>故只需要先求出总花费的时间并遍历每一张饼判断与总时间的关系，据此将烙饼信息添加到数组中，最后输出数组内容即可。</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">2</span> * N;</span><br><span class="line">ll a[N];</span><br><span class="line">ll id1[M], id2[M], l[M], r[M];</span><br><span class="line">ll si = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(ll a, ll b, ll c, ll d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    id1[si] = a;</span><br><span class="line">    id2[si] = b;</span><br><span class="line">    l[si] = c;</span><br><span class="line">    r[si] = d;</span><br><span class="line">    si += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, m, ma = <span class="number">0</span>, s = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)    </span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        s += a[i];</span><br><span class="line">        ma = <span class="built_in">max</span>(ma, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll top = <span class="built_in">max</span>(ma, (s + m - <span class="number">1</span>) / m);</span><br><span class="line">    ll x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] + y &gt;= top)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, x, y, top);</span><br><span class="line">            a[i] -= top - y;</span><br><span class="line">            x += <span class="number">1</span>;</span><br><span class="line">            y = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, x, y, y + a[i]);</span><br><span class="line">            y += a[i];   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; si &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; si; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; id1[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; id2[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; l[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; r[i] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="F-龙吸水（EASY）"><a href="#F-龙吸水（EASY）" class="headerlink" title="F-龙吸水（EASY）"></a>F-龙吸水（EASY）</h3><h4 id="题目详情-5"><a href="#题目详情-5" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic6.png"></p><p>原题链接<a class="link" href="https://ac.nowcoder.com/acm/contest/72980/F">https://ac.nowcoder.com/acm/contest/72980/F<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h4><p>本来以为是贪心结果只过了40%，后来知道了是DP题但有点难，还没想明白，等有这个能力的时候再补完。</p><h4 id="40-贪心代码"><a href="#40-贪心代码" class="headerlink" title="40%贪心代码"></a>40%贪心代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e4</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n, l, r;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; l &gt;&gt; r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        b[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = <span class="built_in">max</span>(<span class="number">0</span>, a[i - <span class="number">1</span>] + b[i]);</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt; r)    a[i] = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= a[i] &amp;&amp; a[i] &lt;= r)</span><br><span class="line">            ans += <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CF-Hello-2024"><a href="#CF-Hello-2024" class="headerlink" title="CF Hello 2024"></a>CF Hello 2024</h2><h3 id="A-Wallet-Exchange"><a href="#A-Wallet-Exchange" class="headerlink" title="A. Wallet Exchange"></a>A. Wallet Exchange</h3><h4 id="题目详情-6"><a href="#题目详情-6" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic7.png"></p><p>原题链接<a class="link" href="https://codeforces.com/contest/1919/problem/A">https://codeforces.com/contest/1919/problem/A<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h4><p>签到题，根据总和的奇偶性可以判断胜负。</p><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="type">int</span> tmp = <span class="built_in">abs</span>(a - b);</span><br><span class="line"><span class="keyword">if</span>(tmp % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Bob\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Alice\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-Plus-Minus-Split"><a href="#B-Plus-Minus-Split" class="headerlink" title="B. Plus-Minus Split"></a>B. Plus-Minus Split</h3><h4 id="题目详情-7"><a href="#题目详情-7" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic8.png"></p><p>原题链接<a class="link" href="https://codeforces.com/contest/1919/problem/B">https://codeforces.com/contest/1919/problem/B<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h4><p>根据样例不难得出答案为两符号个数之差的绝对值。</p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string str;</span><br><span class="line"><span class="type">int</span> add = <span class="number">0</span>, sub = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; str;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span>(str[i] == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">add += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span>sub += <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">abs</span>(add - sub) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-Grouping-Increases"><a href="#C-Grouping-Increases" class="headerlink" title="C. Grouping Increases"></a>C. Grouping Increases</h3><h4 id="题目详情-8"><a href="#题目详情-8" class="headerlink" title="题目详情"></a>题目详情</h4><p><img src="pic9.png"></p><p>原题链接<a class="link" href="https://codeforces.com/contest/1919/problem/C">https://codeforces.com/contest/1919/problem/C<i class="fas fa-external-link-alt"></i></a></p><h4 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h4><p>一开始以为贪心但是wa了后来觉得可能是dp但还是没过，看别人代码大概理解了自己的贪心少了保证一个序列的最后一个元素小于另一个的这一步。</p><p>解题流程就是遍历原序列将元素加到a或b序列中，优先构造逆序对，若无法构造逆序对则将其加入到a序列并计数加一，同时保证a序列的最后一个元素永远小于b序列，最后输出计数即可。</p><h4 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n)</span></span>;</span><br><span class="line"><span class="type">int</span> a = <span class="number">1e9</span>, b = <span class="number">1e9</span>, x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span>&amp; i : v)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; i;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b) <span class="built_in">swap</span>(a, b);</span><br><span class="line"><span class="keyword">if</span>(i &lt;= a) a = i;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i &lt;= b) b = i;</span><br><span class="line"><span class="keyword">else</span> a = i, x += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;牛客小白月赛85&quot;&gt;&lt;a href=&quot;#牛客小白月赛85&quot; class=&quot;headerlink&quot; title=&quot;牛客小白月赛85&quot;&gt;&lt;/a&gt;牛客小白月赛85&lt;/h2&gt;&lt;p&gt;半小时不到开出A、B、C，后面两小时（包括赛后半小时）没开出来D，赛场上浅看了一下E没做，赛</summary>
      
    
    
    
    <category term="刷题" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E5%88%B7%E9%A2%98/"/>
    
    
    <category term="算法" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法期末可能的重点</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/12/15/%E7%AE%97%E6%B3%95%E6%9C%9F%E6%9C%AB%E5%8F%AF%E8%83%BD%E7%9A%84%E9%87%8D%E7%82%B9/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/12/15/%E7%AE%97%E6%B3%95%E6%9C%9F%E6%9C%AB%E5%8F%AF%E8%83%BD%E7%9A%84%E9%87%8D%E7%82%B9/</id>
    <published>2023-12-15T09:36:17.000Z</published>
    <updated>2023-12-16T11:44:23.606Z</updated>
    
    <content type="html"><![CDATA[<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>该篇只是个人基于自己对算法课程的理解以及对期末考试可能涉及的知识点的预测，并不具备权威性质，请读者自行甄别，合理选择复习内容，一切后果请自己承担。</p><h2 id="第1章-算法概述"><a href="#第1章-算法概述" class="headerlink" title="第1章 算法概述"></a>第1章 算法概述</h2><h3 id="1-1-算法和程序"><a href="#1-1-算法和程序" class="headerlink" title="1.1 算法和程序"></a>1.1 算法和程序</h3><p>1.算法的概念：通俗的讲，算法是指解决问题的一种方法或一个过程。</p><blockquote><p>算是一个非常基础的内容，感觉应该是必考</p></blockquote><p>2.算法的性质：</p><ul><li>输入：有零个或多个由外部提供的量作为算法的输入。</li><li>输出：算法产生至少一个量作为输出。</li><li>确定性：组成算法的每条指令</li><li>有限性：算法中每条指令的执行次数是有限的，执行每条指令的时间也是有限的。</li></ul><blockquote><p>算法的四个性质，把意思记住和关键词记住就行，输入和输出的个数要想明白</p></blockquote><p>3.算法与程序的关系：程序与算法不同。程序是算法用某种程序设计语言的具体实现。程序可以不满足算法的有限性。</p><blockquote><p>感觉考的概率很高，记住程序可以不满足算法的有限性</p></blockquote><h3 id="1-2-算法复杂性分析"><a href="#1-2-算法复杂性分析" class="headerlink" title="1.2 算法复杂性分析"></a>1.2 算法复杂性分析</h3><p>1.算法复杂性的概念：算法所需要的计算机资源，有时间复杂性和空间复杂性之分。</p><blockquote><p>基本概念，考的可能不大，但要知道</p></blockquote><p>2.算法复杂度的区别：算法复杂性有最坏情况，最好情况和平均情况下之分。其中，可操作性最好且最具有实际价值的是最坏情况下的时间复杂性。</p><blockquote><p>要了解到最坏情况下时间复杂性的实际价值，并会求</p></blockquote><p>3.算法渐近复杂性：通俗的说，算法渐近复杂性是问题输入规模趋近于无穷时算法的复杂性，渐近意义下有四个记号，这里在书中第3页有具体的说明，其中最常用的是大写的字母O，其概念是复杂性的一个上界。</p><blockquote><p>很繁琐的概念，看需求复习，但大写字母O是重点</p></blockquote><p>EX.算法复杂性的求法：因为绝大情况下在求算法复杂性的时候会求最坏情况下的渐近复杂性，也就是大写字母O所表示的复杂性，而写法往往又是问题规模n的一个表达式或是常数1，这个时候我们求复杂性的时候可以从大局上来看而不斤斤计较于细枝末节，一些经验比如二分往往和log，一个for往往代表n的一次幂等。</p><blockquote><p>个人经验，可跳过</p></blockquote><h2 id="第2章-递归和分治策略"><a href="#第2章-递归和分治策略" class="headerlink" title="第2章 递归和分治策略"></a>第2章 递归和分治策略</h2><h3 id="2-1-递归的概念"><a href="#2-1-递归的概念" class="headerlink" title="2.1 递归的概念"></a>2.1 递归的概念</h3><p>1.递归算法的概念：直接或间接地调用自身的算法称为递归算法</p><blockquote><p>基本概念，简单记记</p></blockquote><p>2.递归函数的概念：用函数自身给出的定义的函数称为递归函数。</p><blockquote><p>同上</p></blockquote><p>3.递归算法的例子：Fibonacci数列、Hanoi塔问题等</p><blockquote><p>列举的两个是非常经典的问题，均易于理解，前者方便实现</p></blockquote><p>EX：递归函数的设计：在设计递归函数时往往需要具备两个结构，一个是终止层，一个是递归层。</p><blockquote><p>我记得好像讲了，但是翻书没找到</p></blockquote><h3 id="2-2-分治法的基本思想"><a href="#2-2-分治法的基本思想" class="headerlink" title="2.2 分治法的基本思想"></a>2.2 分治法的基本思想</h3><p>1.分治法的基本思想：分治法的基本思想是将一个规模为n的问题分解为k个规模较小的子问题，这些子问题相互独立且与原问题相同。</p><blockquote><p>书上概念</p></blockquote><p>2.分治法的解题方向：自底向上。</p><blockquote><p>概念</p></blockquote><h3 id="2-3-2-8-递归-分治的一些算法"><a href="#2-3-2-8-递归-分治的一些算法" class="headerlink" title="2.3 - 2.8 递归+分治的一些算法"></a>2.3 - 2.8 递归+分治的一些算法</h3><p>从2.3到2.8总共介绍了6种递归+分治的例子，根据算法实现难易程度和算法常用程度大致有以下分级：</p><ul><li><p>二分搜索技术：最常用而且最易实现，建议熟读代码，考代码的概率很大。</p></li><li><p>大整数的乘法：实现起来有一定难度，领略思维即可。</p></li><li><p>Strassen矩阵乘法：实现起来有一定难度，领略思维即可。</p></li><li><p>棋盘覆盖：实现起来有一定难度，领略思维即可。</p></li><li><p>合并排序：常用较容易实现，熟悉代码。</p></li><li><p>合并排序：常用较容易实现，熟悉代码。</p></li></ul><h2 id="第3章-动态规划"><a href="#第3章-动态规划" class="headerlink" title="第3章 动态规划"></a>第3章 动态规划</h2><p>动态规划算法适用于解最优化问题，通常可按以下4个步骤设计：</p><ul><li><p>找出最优的性质，并刻画其结构特征。</p></li><li><p>递归地定义最优值。</p></li><li><p>以自底向上的方式计算最优值。</p></li><li><p>根据计算最优值时得到的信息，构造最优解。</p></li></ul><p>其中关于最优值和最优解的概念，最优值一般是一个答案，而最优解是得到这个答案的过程。</p><h3 id="3-1-矩阵连乘问题"><a href="#3-1-矩阵连乘问题" class="headerlink" title="3.1 矩阵连乘问题"></a>3.1 矩阵连乘问题</h3><p>矩阵乘法属于线性代数问题，忘了的可以简单看看，矩阵连乘问题代码实现起来很复杂，属于是几乎不会考代码，但是由这个例子引出的求解动态规划问题的基本框架需要记住，即：</p><ul><li><p>分析最优解的结构</p></li><li><p>建立递归关系</p></li><li><p>计算最优值</p></li><li><p>构造最优解</p></li></ul><h3 id="3-2-动态规划算法的基本要素"><a href="#3-2-动态规划算法的基本要素" class="headerlink" title="3.2 动态规划算法的基本要素"></a>3.2 动态规划算法的基本要素</h3><p>动态规划算法一般具备两个基本要素：</p><ul><li><p>最优子结构：当问题的最优解包含了其子问题的最优解时，称该问题具有最优子结构性质。</p></li><li><p>重叠子问题：当用递归算法自顶向下解此问题时，每次产生的子问题并不总是新问题，有些子问题被反复计算。</p></li></ul><p>此外，备忘录算法是一种与动态规划算法相似的算法，它们都使用表格来保存已解决的子问题的答案，备忘录方法是动态规划算法的变形。</p><table><thead><tr><th align="center">属性</th><th align="center">动态规划</th><th align="center">备忘录方法</th></tr></thead><tbody><tr><td align="center">递归方式</td><td align="center">自底向上</td><td align="center">自底向下</td></tr><tr><td align="center">求解内容</td><td align="center">全部求解</td><td align="center">按需求解</td></tr></tbody></table><h3 id="3-3-最长公共子序列"><a href="#3-3-最长公共子序列" class="headerlink" title="3.3 最长公共子序列"></a>3.3 最长公共子序列</h3><p>很经典的动态规划问题，但是代码具有一定难度，大概率不会手写，建议熟悉代码。</p><h3 id="3-4-最长子段和"><a href="#3-4-最长子段和" class="headerlink" title="3.4 最长子段和"></a>3.4 最长子段和</h3><p>很经典的动态规划问题，但是代码具有一定难度，大概率不会手写，建议熟悉代码。</p><h3 id="3-10-0-1背包问题"><a href="#3-10-0-1背包问题" class="headerlink" title="3.10 0-1背包问题"></a>3.10 0-1背包问题</h3><p>非常经典的动态规划问题，考代码的可能性很大，建议认真复习，能够写出代码。</p><h2 id="第4章-贪心算法"><a href="#第4章-贪心算法" class="headerlink" title="第4章 贪心算法"></a>第4章 贪心算法</h2><p>当一个问题具有最优子结构性质时，可用动态规划法求解。有时会有更简单有效的算法，即贪心算法。贪心算法往往通过实现局部最优解得到一个整体最优解。</p><h3 id="4-1-活动安排问题"><a href="#4-1-活动安排问题" class="headerlink" title="4.1 活动安排问题"></a>4.1 活动安排问题</h3><p>很简单很经典的问题，建议熟悉并能写出来。</p><p>该问题采用的贪心选择策略是：每次选择可选择的活动中结束时间最早的那个。</p><h3 id="4-2-贪心算法的基本要素"><a href="#4-2-贪心算法的基本要素" class="headerlink" title="4.2 贪心算法的基本要素"></a>4.2 贪心算法的基本要素</h3><p>贪心算法有两个重要性质：</p><ul><li><p>贪心选择性质：所求问题的整体最优解可以通过一系列局部最优的选择，即贪心选择来达到。</p></li><li><p>最优子结构性质：当一个问题的最优解包含其子问题的最优解时，称此问题具有最优子结构性质。</p></li></ul><p>贪心算法的这两个性质在根本上决定了它和动态规划法的异同之处，在解决贪心问题时，要能够分析出它的贪心选择策略，即贪心选择的方法。</p><h3 id="4-3-最优装载"><a href="#4-3-最优装载" class="headerlink" title="4.3 最优装载"></a>4.3 最优装载</h3><p>很简单很经典的问题，建议熟悉并能写出来。</p><p>该问题采用的贪心选择策略是：重量最轻者先装。</p><h3 id="4-4-哈夫曼编码"><a href="#4-4-哈夫曼编码" class="headerlink" title="4.4 哈夫曼编码"></a>4.4 哈夫曼编码</h3><p>很经典的问题，但代码具备难度，不太可能手写，要理解思路。</p><p>该问题采用的贪心选择策略是：每次选择频率最小的两个字符组合。</p><h3 id="4-5-单源最短路径"><a href="#4-5-单源最短路径" class="headerlink" title="4.5 单源最短路径"></a>4.5 单源最短路径</h3><p>很经典的问题，但代码具备难度，不太可能手写，要理解思路。</p><p>该问题采用的贪心选择策略是：每次将所有未添加的点中与集合距离最短的点添加到集合中。</p><h3 id="4-6-最小生成树"><a href="#4-6-最小生成树" class="headerlink" title="4.6 最小生成树"></a>4.6 最小生成树</h3><p>最小生成树可以通过Prim和kruskal两种算法实现，其中实现方式，即贪心选择策略有所不同：</p><ul><li><p>Prim算法：每次将所有未添加的边中与集合距离最短的边添加到集合中。</p></li><li><p>kruskal算法：每次将非同一集合中距离最短的两个边连接，直至形成一个集合。</p></li></ul><h2 id="第5章-回溯法"><a href="#第5章-回溯法" class="headerlink" title="第5章 回溯法"></a>第5章 回溯法</h2><p>回溯法是一种以深度优先方式系统搜索问题解的算法，可以系统地搜索一个问题的所有解或任一解。</p><h3 id="5-1-回溯法的算法框架"><a href="#5-1-回溯法的算法框架" class="headerlink" title="5.1 回溯法的算法框架"></a>5.1 回溯法的算法框架</h3><p>1.问题的解空间</p><p>一般用树或图的方式组织解空间，要会画图。</p><p>其中解空间树分为两类：</p><ul><li><p>子集树：子集树对于问题的排列并无要求，不同的排列属于问题的一个答案。</p></li><li><p>排列树：排列树对于问题的排列有要求，不同的排列构成不同的答案。</p></li></ul><p>2.回溯法在搜索解空间树时通常采取两种方式来避免无效搜索：</p><ul><li><p>约束函数：在扩展结点处剪去不满足约束的子树。</p></li><li><p>限界函数：剪去得不到最优解的子树。</p></li></ul><p>单看这两种方式可能并不能明白其中不同，有一个例子：</p><blockquote><p>在1、2、3、4、5、6、7、8中取两个奇数，求最小和。</p></blockquote><p>虽然这个例子非常简单，明眼人一看便知道答案是1+3&#x3D;4，但不妨套入回溯法的解题框架。</p><p>在回溯法中，程序每次都会选择一个奇数相加，当选择了两个奇数后便会比较当前的最小值与两个奇数的和，将更小的那个作为最小值。</p><p>在这个例子中，程序每次都会先判断当前选择的数是不是奇数，这就是约束函数；当得到了1+3&#x3D;4这个值后，若程序选择第一个奇数为5，显然5大于4不可能得到一个更小的值，此时程序就没必要选择第二个奇数，这就是限界函数。</p><p>3.实现回溯法的两个方法：</p><ul><li><p>递归回溯：使用递归实现，建议熟练掌握。</p></li><li><p>迭代回溯：使用循环实现，代码很难，建议熟悉。</p></li></ul><h3 id="5-2-装载问题"><a href="#5-2-装载问题" class="headerlink" title="5.2 装载问题"></a>5.2 装载问题</h3><p>代码实现起来有难度，应该不会考手写，建议熟悉。</p><p>该问题的解空间树为子集树。</p><p>该问题的约束函数为：判断当前货物重量是否小于剩余集装箱的重量。</p><p>该问题上界函数，即限界函数为：若当前载重量与剩余集装箱重量之和小于当前最优载重量，则不考虑不装当前货物的情况。</p><h3 id="5-5-n后问题"><a href="#5-5-n后问题" class="headerlink" title="5.5 n后问题"></a>5.5 n后问题</h3><p>代码实现起来有难度，应该不会考手写，建议熟悉。</p><p>该问题的解空间树为排列树。</p><p>该问题的约束函数为：判断当前位置上是否属于其他皇后的同行、列以及对角线。</p><p>该问题无限界函数。</p><p>因为皇后之间不能同行且棋盘为矩形，所以一般遍历时按行遍历即可，无需对每个位置都判断一下。</p><h3 id="5-6-0-1背包问题"><a href="#5-6-0-1背包问题" class="headerlink" title="5.6 0-1背包问题"></a>5.6 0-1背包问题</h3><p>代码实现起来有难度，应该不会考手写，建议熟悉。</p><p>该问题的解空间树为子集树。</p><p>该问题的约束函数为：判断当前物品重量是否小于剩余背包的重量。</p><p>该问题上界函数，即限界函数为：若当前价值与剩余物品价值之和小于当前最优价值，则不考虑不装当前物品的情况。</p><p>计算右子树的上界时可以将物品按单位重量价值递减的顺序加入，若出现放不下一个完整的物品的情况，可取该物品的一部分将背包填满。</p><p>左子树的上界与父节点相同。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>暂时更新到这里，有问题可以联系QQ：851137399。</p><p>后续会根据反馈调整内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;免责声明&quot;&gt;&lt;a href=&quot;#免责声明&quot; class=&quot;headerlink&quot; title=&quot;免责声明&quot;&gt;&lt;/a&gt;免责声明&lt;/h2&gt;&lt;p&gt;该篇只是个人基于自己对算法课程的理解以及对期末考试可能涉及的知识点的预测，并不具备权威性质，请读者自行甄别，合理选择复习内容</summary>
      
    
    
    
    <category term="算法" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基于油猴的一些wbu脚本</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/12/07/%E5%9F%BA%E4%BA%8E%E6%B2%B9%E7%8C%B4%E7%9A%84%E4%B8%80%E4%BA%9Bwbu%E8%84%9A%E6%9C%AC/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/12/07/%E5%9F%BA%E4%BA%8E%E6%B2%B9%E7%8C%B4%E7%9A%84%E4%B8%80%E4%BA%9Bwbu%E8%84%9A%E6%9C%AC/</id>
    <published>2023-12-06T16:54:37.000Z</published>
    <updated>2023-12-06T17:32:07.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言及声明"><a href="#前言及声明" class="headerlink" title="前言及声明"></a>前言及声明</h2><p>鉴于wbu教务系统的垃圾以及评教每次还要打开兼容模式，本文利用油猴实现了一些脚本便于同学们的学习体验。<br>脚本作者Simprole是很厉害的大佬，他高兴的应该还会开源更多脚本吧~</p><p>注：本文涉及脚本作者均为Simprole，代码且已开源，一切后果均需自己承担。</p><h2 id="美化界面"><a href="#美化界面" class="headerlink" title="美化界面"></a>美化界面</h2><p>效果如图：<br><img src="pic1.png"></p><p>代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         WBUESPBeautify</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.9.1</span></span><br><span class="line"><span class="comment">// @description  WBUESP美化</span></span><br><span class="line"><span class="comment">// @author       Simprole</span></span><br><span class="line"><span class="comment">// @match        http://jw.wbu.edu.cn/jsxsd/*</span></span><br><span class="line"><span class="comment">// @match        http://jw-wbu-edu-cn.webvpn.wbu.edu.cn:8118/jsxsd/*</span></span><br><span class="line"><span class="comment">// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico</span></span><br><span class="line"><span class="comment">// @run-at       document-start</span></span><br><span class="line"><span class="comment">// @resource css https://s1.hdslb.com/bfs/static/jinkela/long/font/medium.css</span></span><br><span class="line"><span class="comment">// @resource icon https://gitee.com/dmaker/simpage/raw/master/iconfont.css</span></span><br><span class="line"><span class="comment">// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js</span></span><br><span class="line"><span class="comment">// @require      https://gitee.com/dmaker/simpage/raw/master/js.cookie.min.js</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_addStyle</span></span><br><span class="line"><span class="comment">// @grant        GM_getResourceText</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//import HarmonyOS font</span></span><br><span class="line">    <span class="title function_">GM_addStyle</span>(<span class="title function_">GM_getResourceText</span>(<span class="string">&quot;css&quot;</span>));</span><br><span class="line">    <span class="comment">//external icons</span></span><br><span class="line">    <span class="title function_">GM_addStyle</span>(<span class="title function_">GM_getResourceText</span>(<span class="string">&quot;icon&quot;</span>));</span><br><span class="line">    <span class="comment">//root css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimRootCSS&quot;&gt;:root&#123;--primary-theme-color: hsl(216.99deg 99.1% 56.67%);--secondary-theme-color: hsl(214.55deg 98.8% 67.25%);;--tertiary-theme-color:hsl(209 98% 70%);--hover_darken_color:brightness(0.75);&#125;body,div,dl,dt,p,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,select,blockquote,th,td,a,span,div &#123;padding:0;margin:0;font-size: 15px;font-family: &quot;HarmonyOS_Medium&quot;!important;&#125;html&#123;scroll-behavior: smooth;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//universal buttons css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimUniButtonsCSS&quot;&gt;.button,center a[style][href],#dataView.dataTable td[class] a[style]&#123;width: unset!important;font-size: 1rem;background-image: none;color: #fff!important;;background-color: var(--primary-theme-color);border: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);padding: 5px 10px 5px 15px;position: relative;letter-spacing: 5px;text-align: center;text-decoration:none!important;height: min-content;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;.disabled,&amp;.disabled:hover&#123;box-shadow: none;cursor: no-drop;filter: brightness(0.6);transform: none;&#125;&amp;#btn_back&#123;left: 50%;translate: -50%;&#125;&amp;.centerButton&#123;left: 50%;translate: -50%;margin: -0.5rem 0 0.5rem 0;&#125;&#125;.Nsb_r_title div .button&#123;left:0;margin: 0.5rem 0.5rem 0;&#125;.Nsb_r_title button&#123;left: 50%;transform: translateX(-50%);&#125;form .buttons&#123;left: 50%;transform: translateX(-50%);position: relative;display: inline-block;&#125;.Nsb_r_list a&#123;background-color: var(--primary-theme-color);border: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);padding: 3px 0;position: relative;text-align: center;color: #fff;display: list-item;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;.Nsb_r_list a:hover, .button:hover, center a[style][href]:hover,#dataView.dataTable td[class] a[style]:hover&#123;text-decoration:none;filter: brightness(0.8);box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.7);transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;.Nsb_r_list_fy4 &#123;background: none;&amp; a &#123;width: 3em;text-align: center;background: var(--primary-theme-color);margin: 0 0.1em;border-radius: 2em;color: #fff;font-weight: bold;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);-webkit-user-select: none;user-select: none;&#125;&amp; .disabled &#123;filter: brightness(0.6);box-shadow: none;cursor: no-drop;&#125;&amp;.dataTable .button#button1,&amp;.dataTable .button#button2&#123;left: 27%;&#125;&#125;.SimScale&#123;font-size: 1.8rem;height: 1.6rem;width: 1.6rem!important;line-height: 0;border-radius: 100%;display: flex;align-items: center;justify-content: center;margin: 0.25rem;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//universal charts css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimUniChartsCSS&quot;&gt;#dataList&#123;margin-top: 0.5rem;border-collapse: separate;position: relative;transform-origin: top!important;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp; .Nsb_r_list_thb&#123;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;height: 2rem;font-weight: normal;text-align: center;&#125;&#125;#kbtable&#123;border-collapse: separate;transform-origin: 0 0;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0.5rem;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;line-height: normal;&#125;&#125;[id].kbcontent,[id].kbcontent1&#123;background: var(--secondary-theme-color);border-radius: 1rem;color: #fff;padding: 0.2rem 0.8rem;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);margin-bottom: 5px;&#125;.classLists[style]&#123;border-radius: 1rem;padding: 3px 5px;&#125;table.display&#123;&amp; thead th&#123;cursor:default;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;text-align: center;font-weight: normal;&#125;&amp; tbody th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td, td.center&#123;padding: 0.5rem 0;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp; tr.odd&#123;background-color: #fff;&#125;&amp; tr.even&#123;background-color: var(--tertiary-theme-color);&#125;&#125;.Nsb_table,.display&#123;.thb_t_l&#123;border-radius: 1rem 0 0 0;&#125;.thb_t_r&#123;border-radius: 0 1rem 0 0;&#125;.thb_t_l.thb_t_r&#123;border-radius: 1rem 1rem 0 0;&#125;.thb_b_l&#123;border-radius: 0 0 0 1rem;&#125;.thb_b_r&#123;border-radius: 0 0 1rem 0;&#125;.thb_b_l.thb_b_r&#123;border-radius: 0 0 1rem 1rem;&#125;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//universal pages css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimUniPagesCSS&quot;&gt;.Nsb_pw &#123;width: auto;margin: 0 2rem;.Nsb_r_title &#123;font-size: 1.25rem;font-weight: bold;color: #000;height: max-content;line-height: 1.5em;text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.4);letter-spacing: 1px;margin: 0.5rem 0 0.5rem 0;text-align: center;&#125;.Nsb_layout_r .Nsb_r_title &#123;font-size: 1.25rem;font-weight: bold;color: #000;height: max-content;line-height: 1.5em;text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.4);letter-spacing: 1px;margin: 0 0 0.5em 0;text-align: center;&#125;&#125;#SimInfo&#123;position: relative;left: 50%;transform: translateX(-50%);margin-top: 0.5rem;text-align: center;&#125;.SimStack&#123;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&amp;[stacked=true]&#123;opacity: 0%;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&#125;&amp;[stacked=false]&#123;opacity: 100%;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity;&#125;&#125;#SimStackTop&#123;cursor: pointer;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&amp;:hover&#123;transform: translateY(0.75px);filter: brightness(0.7);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&amp;[stacked=true]&#123;margin: 0px 7px 12px 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&amp;[stacked=false]&#123;margin-right: 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: filter,transform,margin,margin-right,box-shadow;&#125;&#125;.hidden&#123;display: none;&#125;.SimScalePanel&#123;display: flex;position: fixed;align-items: center;justify-content: center;flex-direction: row;right: 0;bottom: 0;opacity: 0.2;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1) 1s;transition-property: opacity,transform;&amp;.rightPage&#123;opacity: 1;position: relative;.SimScaleText&#123;opacity: 1;transform: 0;font-size:1rem;transform: none;&#125;&#125;.SimScaleText&#123;opacity: 0;user-select: none;font-size: 1.3rem;transform: translateX(50%);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1) 1s;transition-property: opacity,transform;&#125;&amp;:hover&#123;opacity: 1.0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity,transform;.SimScaleText&#123;opacity: 1;transform: translateX(0%);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: opacity,transform;&#125;&#125;&#125;.SimSelect&#123;text-align: center;font-size: 1rem;border: 2px solid var(--secondary-theme-color);border-radius: 1rem;height: 1.7rem;width: 203px!important;margin: 0.125rem 0;box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: border,box-shadow;&amp;.Slim&#123;width: 125px!important;&#125;&amp;:hover,&amp;:focus-visible&#123;outline:none;border: 2px solid var(--primary-theme-color);box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.3),inset 0px 2px 6px 0px var(--secondary-theme-color);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: border,box-shadow;&#125;&#125;input.SimScaleInput.SimInput&#123;width: 4.5rem!important;font-size: 1.3rem;height: 1.4rem;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);&#125;input.SimInput,.inputnormal&#123;width: 200px!important;text-align: center;border: 2px solid var(--primary-theme-color);border-radius: 1.5em;background-color: var(--tertiary-theme-color);text-shadow: 0px 0px 4px rgba(0,0,0,0.7);color: #fff;font-size: 1rem;height: 1.5rem;margin: 0.125rem 0;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border,color;&#125;.SimInput.Slim&#123;width: 130px!important;&#125;input.SimInput&#123;&amp;:hover,&amp;:focus-visible&#123;outline: none;border: 2px solid var(--primary-theme-color);background-color:var(--secondary-theme-color);transform: scale(1.02);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border,color;&#125;&amp;.disabled,.disabled:hover&#123;background-color: var(--secondary-theme-color);border: 2px solid var(--primary-theme-color);text-shadow: none;outline: none;cursor: no-drop;transform: none;filter: brightness(0.5);&#125;&amp;[readonly]&#123;&amp;:hover&#123;outline: 0px;&#125;&amp;:focus-visible&#123;outline: 0px;&#125;&#125;&#125;#SimTop&#123;position: fixed;right: 0.5rem;bottom: 0.5rem;font-size: 1rem;background-image: none;background-color: var(--primary-theme-color);border-radius: 20px;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);color: #fff;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//footer css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimFooterCSS&quot;&gt;.Nsb_rights &#123;height: max-content;line-height: normal;&#125;.info&#123;text-align: center;color: #000;&amp; .heart&#123;color: #ff0081;&#125;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//home page css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimHomePageCSS&quot;&gt;.iconfont &#123;position: absolute;font-size: 75px;left: 50%;transform: translateX(-50%);top: 15px;&#125;.icon-xuanke,.icon-yonghu &#123;font-size: 75px;top: 80px;&#125;.icon-yonghu&#123;left: 22.5%!important;position: absolute;transform: translateX(-240%);cursor: pointer;transition: all 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);&amp;:hover&#123;filter: brightness(0.75);transform: translate(-240%,1px);transition-duration: 0.3s;transition: all 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);&#125;&#125;.block1,.block2,.block3,.block4,.block5,.block6,.block7,.block8,.block9,.block10,.block11,.block12&#123;box-shadow: 0px 4px 4px rgba(0,0,0,0.3);border-radius: 0.5rem;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,transform,box-shadow;&#125;.block1text&#123;width:auto;height: auto;position: relative;text-align: center;left: 50%;top: 42%;color:#fff;transform: translate(-30%,-90%);&#125;.block1tex,.block2tex&#123;-webkit-user-select: none;user-select: none;left:0px;position: relative;top: 12.5rem;text-align: center;color:#fff;&#125;.block3tex,.block4tex,.block5tex,.block6tex&#123;left:50%;position: absolute;top: 6.25rem;text-align: center;transform: translateX(-50%);&#125;.block7tex,.block8tex,.block9tex,.block10tex,.block11tex,.block12tex&#123;left:50%;transform: translateX(-50%);position: absolute;top: 6rem;text-align: center;width: max-content;&#125;.block2:hover,.block3:hover,.block4:hover,.block5:hover,.block6:hover,.block7:hover,.block8:hover,.block9:hover,.block10:hover,.block11:hover,.block12:hover&#123;box-shadow: 0px 1px 2px rgba(0,0,0,0.7);transform: translateY(2px);filter: brightness(0.75);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,transform,box-shadow;&#125;.block1 img,.block2 img,.block3 img,.block4 img,.block5 img,.block6 img,.block7 img,.block8 img,.block9 img,.block10 img,.block11 img,.block12 img,.block1app,.block1pc&#123;visibility: hidden;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//iframe css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimIframeCSS&quot;&gt;div#SimPageOutline&#123;display: block;width: 68rem;height: 51.1rem;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);background-color: var(--primary-theme-color);border-top: 0;border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);&#125;iframe#SimPage&#123;display: block;width: 68rem;height: 48.8rem;position: relative;left: 50%;transform: translateX(-50%);border-radius: 0 0 1rem 1rem;background-color: #fff;&#125;.Nsb_pw&#123;#fcenter&#123;margin-top:1rem;display: block;height: 52.5rem!important;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);&#125;.Nsb_layout_r #fcenter&#123;margin-top:1rem;display: block;height: 52.5rem!important;position: relative;left: 50%;transform: translateX(-50%);border: 0.5rem solid var(--primary-theme-color);border-radius: 1rem;box-shadow: 0px 3px 5px 2px rgba(0, 0, 0, 0.3);width: 68rem!important;&#125;&#125;.toolbar&#123;background: var(--primary-theme-color)!important;border-radius: 0 0 1rem 1rem;box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.3);height: 2.5rem;&#125;a.closeButton&#123;float: right;display: block;left: 0.5rem;position: relative;cursor: pointer;&#125;div.closeButton&#123;font-size: 2.2rem;height: 2rem;line-height: 1.95rem;padding: 0rem 1.4rem 0 1.3rem;background: #FF513A;width: inherit;color: #fff;border-radius: 0 1rem 0 0;font-weight: bold;box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);-webkit-user-select: none;user-select: none;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;:hover&#123;transform: translateY(0.75px);box-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);filter: brightness(0.7);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;&#125;.toolstitle &#123;height: 2rem;line-height: 2rem;color: #FFF;font-size: 1.15rem;background: var(--secondary-theme-color);font-weight: normal;text-align: center;box-shadow: 0 4px 7px 0px rgba(0, 0, 0, 0.3);&#125;table.textform&#123;width: 100%;padding-left: 0!important;&#125;font.tips&#123;float: right;position: relative;font-size: 1.5rem;margin: 0.5rem 2.25rem 0 0;font-family: &quot;HarmonyOS_Medium&quot;;&#125;textarea#xmms &#123;width: 93.5%!important;position: relative;margin: 0 2rem;border: 0.2rem solid var(--secondary-theme-color);border-radius: 1rem;box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&amp;:focus-visible &#123;outline: 0.2rem solid var(--primary-theme-color);box-shadow: 0px 7px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&#125;&#125;textarea[style],textarea[type=text]&#123;position: relative;border: 0.2rem solid var(--secondary-theme-color);border-radius: 1rem;box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 4px;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&amp;:hover&#123;outline: 0.2rem solid var(--primary-theme-color);box-shadow: 0px 7px 4px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: box-shadow,outline;&#125;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//left sidebar css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimLeftSidebarCSS&quot;&gt;.Nsb_r_list_tdfy &#123;border: none;&#125;.Nsb_layout_l &#123;float: left;width: 11.25rem;height: max-content;margin-top: 2rem;border-radius: 1rem;box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.3);border:none;padding-bottom: 0.5rem;margin-bottom: 3rem;&#125;.Nsb_l_list &#123;&amp; ul &#123;padding-bottom: 0.5em;width: inherit;border-bottom: none;&#125;&amp; h4 &#123;margin: 0;padding: 6px 0;font-size: 17px;font-weight: bold;background-color: var(--primary-theme-color);border-radius: 1rem 1rem 0 0;box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.3);color: #fff;background-image: none;width: inherit;text-align: center;&#125;&amp; li &#123;margin: 0;width: inherit;&#125;&amp; a &#123;color: #000;padding: 4px 0px;text-align: center;position: relative;width: inherit;transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,color,transform,box-shadow;&amp;:hover &#123;border-radius: 1em;background: var(--tertiary-theme-color);box-shadow: inset 0px 2px 6px 1px rgb(0 0 0 / 30%);color: #fff;transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,color,transform,box-shadow;&#125;&#125;&amp; .Nsb_l_list_now &#123;background: var(--secondary-theme-color);color: #fff;padding: 4px 0;box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,box-shadow,transform;&amp;:hover &#123;border-radius: 15px;background: var(--tertiary-theme-color);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,background,box-shadow,transform;&#125;&#125;&#125;.Nsb_l_list_top &#123;height: 0;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//right page css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimRightPageCSS&quot;&gt;.Nsb_layout_r &#123;padding: 2rem 0 0rem 0rem;margin: 0 0 3rem -11.25rem!important;left: 57%;transform: translateX(-50%);float: left;position: relative;.Nsb_table&#123;border-collapse: separate;position: relative;transform-origin: top!important;&#125;.Nsb_r_list&#123;.Nsb_r_list_thb&#123;box-shadow: 0px 4px 5px rgba(0, 0, 0, 0.3);border: none;background: var(--secondary-theme-color);font-size: 1.125rem;color: #fff;height: 2rem;text-align: center;font-weight: normal;&#125;&amp; th&#123;background: var(--secondary-theme-color);border: none;color: #fff;width: min-content;line-height: initial;font-size: 1rem;padding: 0 0.5rem;&#125;&amp; td&#123;border: solid 0.05rem var(--secondary-theme-color);color: #000;text-align: center;box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.3);font-size: 1rem;word-break: keep-all;&#125;&amp;.Nsb_table&#123;width: 68rem!important;&#125;&#125;&#125;.Nsb_r_list_fy2 input &#123;width: 2em;height: 1em;text-align: center;border: 2px solid var(--secondary-theme-color);border-radius: 1.5em;background-color: var(--tertiary-theme-color);text-shadow: 0px 0px 4px rgba(0,0,0,0.7);color: #fff;font-size: 1rem;border-radius: 1.5em;background-image: none;transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border;&amp;:hover,&amp;:focus-visible&#123;outline: none;border: 2px solid var(--primary-theme-color);background-color:var(--secondary-theme-color);transform: scale(1.02);transition: 0.3s cubic-bezier(0.39, 0.58, 0.57, 1);transition-property: transform,background-color,border;&#125;&#125;.Nsb_r_list_fy&#123;div,span,a&#123;height: 1.5em;line-height: 1.5em;&#125;&#125;#Form1[action] div&#123;text-align: center!important;&#125;td[width][align=right]&#123;width:7rem;&#125;td b font[face]&#123;font-family: &quot;HarmonyOS_Medium&quot;;&#125;td[style=&quot;background-color:#E5F3FE&quot;]&#123;background-color: #A6D3FE!important;color: #fff!important;text-shadow: 0 0 3px black;&#125;font[color=blue]&#123;color: var(--secondary-theme-color);&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//top bar css</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style id=&quot;SimTopBarCSS&quot;&gt;.Nsb_menu_pw,.Nsb_menu &#123;height: 41px;line-height: 41px;background-color: var(--primary-theme-color);background-image:none;left: 50%;position: relative;transform: translateX(-50%);&#125;.Nsb_menu a &#123;color: #fff;font-weight: normal;border-radius: 2px;transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: border-radius,transform,filter,background-color,box-shadow;&amp;:hover&#123;background-position: none;background-color: var(--primary-theme-color);background-image:none;height: 40px;filter: brightness(0.7);transform: translateY(0.75px);border-radius: 20px;box-shadow: inset 0px 3px 5px 0px rgba(0, 0, 0, 0.3);transition: 0.3s cubic-bezier(0.4, 0, 0.2, 1);transition-property: box-shadow,border-radius,transform,filter,background-color,;&#125;&#125;.Nsb_menu_pw &#123;box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.3);&#125;.Nsb_top&#123;display: flex;justify-content: flex-end;flex-direction: row;align-items: center;&#125;.Nsb_top_menu &#123;position: relative;background-color: var(--secondary-theme-color);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.3);&amp; ul&#123;border:none;background: var(--primary-theme-color);border-radius: 20px;padding: 3px;box-shadow: -1px 0px 3px rgba(0, 0, 0, 0.3);&#125;&#125;.Nsb_top_menu_nc &#123;height: inherit;font-size: 1em;line-height: 2em;padding: 0 0.75em 0 1em;color: #fff;-webkit-user-select: none;user-select: none;cursor: pointer;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: transform,filter;&amp;:hover&#123;filter: brightness(0.8);transform: translateY(1px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: transform,filter;&#125;&#125;.menu_cn&#123;&amp; a &#123;padding: 0 2em;font-size: 1.0625em;&#125;&amp; ul&#123;left: 50%;position: relative;transform: translateX(-50%);width: max-content;&#125;&#125;.Nsb_top_logo &#123;left: 0px;&#125;.Nsb_menu_li_now&#123;background: none;&#125;.Nsb_menu_li_h span &#123;background: url(../framework/images/Nsb_menu_h.gif) 0 -15px&#125;.Nsb_top_menu span, .Nsb_top_menu_id img&#123;visibility: hidden;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//iframe code</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;script&gt;function JsMod(htmlurl,tmpWidth,tmpHeight)&#123;let inPage = document.createElement(&quot;iframe&quot;);;inPage.id = &quot;SimPage&quot;;let SimPage = document.createElement(&quot;div&quot;);SimPage.id = &quot;SimPageOutline&quot;;let toolbar = document.createElement(&quot;div&quot;);toolbar.innerHTML=\&#x27;&lt;a href=&quot;javascript:closeIframe();&quot; class=&quot;closeButton&quot;&gt;&lt;div class=&quot;closeButton&quot;&gt;×&lt;/div&gt;&lt;/a&gt;\&#x27;;SimPage.appendChild(toolbar);SimPage.appendChild(inPage);if(!document.getElementById(&quot;SimPage&quot;))&#123;if(document.getElementById(&quot;dataList&quot;))&#123;let dataList = document.getElementById(&quot;dataList&quot;);dataList.after(SimPage);dataList.style = &quot;display:none;&quot;;&#125;if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;let table = document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0];table.after(SimPage);table.style = &quot;display:none;&quot;;&#125;htmlurl=getRandomUrl(htmlurl);inPage.src = htmlurl;&#125;&#125;&lt;/script&gt;&#x27;</span>));</span><br><span class="line">    <span class="comment">//closeIframe code</span></span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;script&gt;function closeIframe()&#123;if(!document.getElementById(&quot;SimPage&quot;)&amp;&amp;window.parent.document.getElementById(&quot;SimPage&quot;))&#123;let parent = window.parent;if(parent.document.getElementById(&quot;dataList&quot;))&#123;parent.document.getElementById(&quot;dataList&quot;).style = &quot;&quot;;&#125;if(parent.document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;parent.document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].style = &quot;&quot;;&#125;parent.document.getElementById(&quot;SimPageOutline&quot;).remove();&#125;else if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0]&amp;&amp;document.getElementById(&quot;SimPage&quot;))&#123;if(document.getElementById(&quot;dataList&quot;))&#123;document.getElementById(&quot;dataList&quot;).style = &quot;&quot;;&#125;if(document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].id!=&quot;dataList&quot;)&#123;document.getElementsByClassName(&quot;Nsb_r_list Nsb_table&quot;)[0].style = &quot;&quot;;&#125;document.getElementById(&quot;SimPageOutline&quot;).remove();&#125;&#125;&lt;/script&gt;&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;kc&quot;</span>))&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;kc&quot;</span>).<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修复评教页面宽度不为100%</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">    <span class="comment">//去除前后方括号</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;td a[href]&quot;</span>))&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;td a[href]&quot;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(e.<span class="property">previousSibling</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.<span class="property">previousSibling</span>.<span class="property">nodeValue</span>)&#123;</span><br><span class="line">                    <span class="keyword">let</span> value = e.<span class="property">previousSibling</span>.<span class="property">nodeValue</span>.<span class="title function_">replaceAll</span>(<span class="string">&quot;\t&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    value = value.<span class="title function_">replaceAll</span>(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    value = value.<span class="title function_">replaceAll</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span>(value==<span class="string">&quot;[&quot;</span>)&#123;</span><br><span class="line">                        e.<span class="property">previousSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(e.<span class="property">nextSibling</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.<span class="property">nextSibling</span>.<span class="property">nodeValue</span>)&#123;</span><br><span class="line">                    <span class="keyword">let</span> value = e.<span class="property">nextSibling</span>.<span class="property">nodeValue</span>.<span class="title function_">replaceAll</span>(<span class="string">&quot;\t&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    value = value.<span class="title function_">replaceAll</span>(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    value = value.<span class="title function_">replaceAll</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span>(value==<span class="string">&quot;][&quot;</span>)&#123;</span><br><span class="line">                        e.<span class="property">nextSibling</span>.<span class="title function_">after</span>(<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;br&quot;</span>));</span><br><span class="line">                        e.<span class="property">nextSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(value==<span class="string">&quot;]&quot;</span>||e.<span class="property">nextSibling</span>.<span class="property">nodeValue</span>==<span class="string">&quot;]\n\t\t\t\t\n\t\t\t\t&quot;</span>)&#123;</span><br><span class="line">                        e.<span class="property">nextSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//reset preset width</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;#dataList&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> thb = $(<span class="string">&quot;#dataList&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_list_thb&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = thb.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(thb[i-<span class="number">1</span>].<span class="property">style</span>.<span class="property">width</span>!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                thb[i-<span class="number">1</span>].<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//class schedule random color</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getRandomIntInclusive</span>(<span class="params">min, max</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min + <span class="number">1</span>) + min).<span class="title function_">toFixed</span>(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">randomColorPick</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> json = &#123;&#125;;</span><br><span class="line">        <span class="keyword">let</span> hue = <span class="title function_">getRandomIntInclusive</span>(<span class="number">0</span>,<span class="number">360</span>);</span><br><span class="line">        <span class="keyword">let</span> sat = <span class="title function_">getRandomIntInclusive</span>(<span class="number">90</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">let</span> light = <span class="title function_">getRandomIntInclusive</span>(<span class="number">40</span>,<span class="number">43</span>);</span><br><span class="line">        <span class="keyword">let</span> hsl = <span class="string">&quot;hsl(&quot;</span> + hue + <span class="string">&quot;, &quot;</span> + sat + <span class="string">&quot;%, &quot;</span> + light + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">        json.<span class="property">hsl</span>=hsl;</span><br><span class="line">        json.<span class="property">hue</span>=hue;</span><br><span class="line">        json.<span class="property">sat</span>=sat;</span><br><span class="line">        json.<span class="property">light</span>=light;</span><br><span class="line">        <span class="keyword">return</span> json;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fixKBBottom</span>(<span class="params">type</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> td = $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = td.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            <span class="keyword">let</span> kbcontent = td[i-<span class="number">1</span>].<span class="title function_">getElementsByClassName</span>(type);</span><br><span class="line">            <span class="keyword">if</span>(kbcontent.<span class="property">length</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                kbcontent[kbcontent.<span class="property">length</span>-<span class="number">1</span>].<span class="property">style</span>.<span class="property">margin</span> = <span class="string">&quot;0px&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">SimStacked</span>(<span class="params">input</span>)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(input.<span class="title function_">getAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>))&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;true&#x27;</span>:&#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    input.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;hidden&#x27;</span>);</span><br><span class="line">                &#125;, <span class="number">200</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;false&#x27;</span>:&#123;</span><br><span class="line">                input.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;hidden&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">SimStackActions</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="title class_">SimStack</span> = <span class="variable language_">this</span>.<span class="property">parentElement</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;SimStack&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = <span class="title class_">SimStack</span>.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">let</span> tempJson;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>)&#123;</span><br><span class="line">            tempJson = kbsort[kbsort[<span class="variable language_">this</span>.<span class="property">firstChild</span>.<span class="property">innerHTML</span>]];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            tempJson = kbsort[<span class="variable language_">this</span>.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> hslDarker = <span class="string">&quot;hsl(&quot;</span> + tempJson.<span class="property">hue</span> + <span class="string">&quot;, &quot;</span> + tempJson.<span class="property">sat</span> + <span class="string">&quot;%, &quot;</span> + (tempJson.<span class="property">light</span> - <span class="number">8</span>) + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> hslDarker2 = <span class="string">&quot;hsl(&quot;</span> + tempJson.<span class="property">hue</span> + <span class="string">&quot;, &quot;</span> + tempJson.<span class="property">sat</span> + <span class="string">&quot;%, &quot;</span> + (tempJson.<span class="property">light</span> - <span class="number">16</span>) + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>)==<span class="string">&#x27;true&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">style</span>.<span class="title function_">removeProperty</span>(<span class="string">&#x27;box-shadow&#x27;</span>);</span><br><span class="line">                <span class="title class_">SimStack</span>[i-<span class="number">1</span>].<span class="title function_">setAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>,<span class="string">&#x27;false&#x27;</span>);</span><br><span class="line">                <span class="title class_">SimStacked</span>(<span class="title class_">SimStack</span>[i-<span class="number">1</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>)==<span class="string">&#x27;false&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">cssText</span> += <span class="string">&quot;box-shadow: 3px 3px 0px 1px &quot;</span>+hslDarker+<span class="string">&quot;, 7px 7px 0px 1px &quot;</span>+hslDarker2;</span><br><span class="line">                <span class="title class_">SimStack</span>[i-<span class="number">1</span>].<span class="title function_">setAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>,<span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">                <span class="title class_">SimStacked</span>(<span class="title class_">SimStack</span>[i-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i==length)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title class_">SimStack</span>[length-<span class="number">1</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>)==<span class="string">&#x27;true&#x27;</span>)&#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>,<span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="title class_">SimStack</span>[length-<span class="number">1</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>)==<span class="string">&#x27;false&#x27;</span>)&#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">setAttribute</span>(<span class="string">&#x27;stacked&#x27;</span>,<span class="string">&#x27;false&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">setupScalingPanel</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> panel = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        panel.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;SimScalePanel&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> text = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        text.<span class="property">innerText</span> = <span class="string">&quot;缩放倍率&quot;</span>;</span><br><span class="line">        text.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;SimScaleText&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> zoomIn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> <span class="title class_">SimScaleInput</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        <span class="title class_">SimScaleInput</span>.<span class="property">type</span>=<span class="string">&#x27;text&#x27;</span>;</span><br><span class="line">        <span class="title class_">SimScaleInput</span>.<span class="property">id</span>=<span class="string">&#x27;SimScaleInput&#x27;</span>;</span><br><span class="line">        <span class="title class_">SimScaleInput</span>.<span class="property">className</span> = <span class="string">&#x27;SimScaleInput SimInput&#x27;</span>;</span><br><span class="line">        <span class="title class_">SimScaleInput</span>.<span class="property">value</span>=<span class="string">&#x27;0.8&#x27;</span>;</span><br><span class="line">        <span class="title class_">SimScaleInput</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;change&quot;</span>, valueSync);</span><br><span class="line">        $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;transform&#x27;</span>,<span class="string">&#x27;scale(0.8)&#x27;</span>);</span><br><span class="line">        $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;transition&#x27;</span>,<span class="string">&#x27;transform 0.4s cubic-bezier(0, 0, 0.22, 0.9)&#x27;</span>);</span><br><span class="line">        zoomIn.<span class="property">type</span>=<span class="string">&#x27;button&#x27;</span>;</span><br><span class="line">        zoomIn.<span class="property">className</span> = <span class="string">&#x27;button SimScale&#x27;</span>;</span><br><span class="line">        <span class="keyword">let</span> zoomOut = zoomIn.<span class="title function_">cloneNode</span>(<span class="literal">false</span>);</span><br><span class="line">        zoomIn.<span class="property">value</span>=<span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">        zoomIn.<span class="property">id</span>=<span class="string">&#x27;zoomIn&#x27;</span>;</span><br><span class="line">        zoomOut.<span class="property">value</span>=<span class="string">&#x27;–&#x27;</span>;</span><br><span class="line">        zoomOut.<span class="property">id</span>=<span class="string">&#x27;zoomOut&#x27;</span>;</span><br><span class="line">        zoomIn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">        zoomOut.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">        panel.<span class="title function_">appendChild</span>(text);</span><br><span class="line">        panel.<span class="title function_">appendChild</span>(zoomOut);</span><br><span class="line">        panel.<span class="title function_">appendChild</span>(<span class="title class_">SimScaleInput</span>);</span><br><span class="line">        panel.<span class="title function_">appendChild</span>(zoomIn);</span><br><span class="line">        <span class="keyword">if</span>(!$(<span class="string">&quot;.Nsb_layout_r&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="property">parentElement</span>.<span class="title function_">appendChild</span>(panel);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            panel.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;rightPage&quot;</span>);</span><br><span class="line">            $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="title function_">before</span>(panel);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">universalScaleCtrl</span>(<span class="params">zoomData</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(zoomData&lt;<span class="number">0.6</span>)&#123;</span><br><span class="line">            zoomData = <span class="number">0.5</span>;</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="title function_">removeEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(zoomData&gt;<span class="number">0.9</span>)&#123;</span><br><span class="line">            zoomData = <span class="number">1.0</span>;</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="title function_">removeEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomIn&quot;</span>)[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">            $(<span class="string">&quot;#zoomOut&quot;</span>)[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimScale</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        zoomData = zoomData.<span class="title function_">toFixed</span>(<span class="number">1</span>);</span><br><span class="line">        $(<span class="string">&quot;#SimScaleInput&quot;</span>)[<span class="number">0</span>].<span class="property">value</span> = zoomData;</span><br><span class="line">        $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;transform&#x27;</span>,<span class="string">&#x27;scale(&#x27;</span>+zoomData+<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!$(<span class="string">&quot;.Nsb_layout_r&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">let</span> bodyStyle = $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="property">parentElement</span>.<span class="property">style</span>;</span><br><span class="line">            <span class="keyword">if</span>(bodyStyle.<span class="property">length</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                bodyStyle.<span class="title function_">removeProperty</span>(<span class="string">&#x27;width&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                bodyStyle.<span class="title function_">setProperty</span>(<span class="string">&quot;width&quot;</span>,<span class="string">&quot;100%&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">valueSync</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> zoomData = <span class="variable language_">this</span>.<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> zoomValue = <span class="built_in">parseFloat</span>(zoomData);</span><br><span class="line">        <span class="title function_">universalScaleCtrl</span>(zoomValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">SimScale</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> zoomData = $(<span class="string">&quot;#SimScaleInput&quot;</span>)[<span class="number">0</span>].<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">let</span> zoomValue = <span class="built_in">parseFloat</span>(zoomData);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">value</span>==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">            zoomData = zoomValue+<span class="number">0.1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">value</span>==<span class="string">&#x27;–&#x27;</span>)&#123;</span><br><span class="line">            zoomData = zoomValue-<span class="number">0.1</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">value</span>=<span class="string">&#x27;–&#x27;</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">id</span>=<span class="string">&#x27;zoomOut&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">universalScaleCtrl</span>(zoomData);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>($(<span class="string">&quot;.kbcontent1&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> kbcontent,kbcontent1;</span><br><span class="line">        <span class="keyword">var</span> kbsort = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">        <span class="keyword">if</span>(!$(<span class="string">&quot;.Nsb_layout_r&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">let</span> classLists_eg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            classLists_eg.<span class="property">className</span> = <span class="string">&quot;classLists&quot;</span>;</span><br><span class="line">            <span class="keyword">let</span> classLists,tempJson,hslDarker;</span><br><span class="line">            <span class="keyword">let</span> tr = $(<span class="string">&quot;#kbtable&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">            <span class="keyword">let</span> th = tr[<span class="number">0</span>].<span class="property">children</span>;</span><br><span class="line">            <span class="keyword">let</span> length = th.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">let</span> tr_length = tr.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(th[i-<span class="number">1</span>].<span class="property">colSpan</span>==<span class="number">7</span>)&#123;</span><br><span class="line">                    th[i-<span class="number">1</span>].<span class="property">colSpan</span> = <span class="number">6</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> td = tr[<span class="number">1</span>].<span class="property">children</span>;</span><br><span class="line">            length = td.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(td[i-<span class="number">1</span>].<span class="property">innerHTML</span>==<span class="string">&#x27;13&#x27;</span>)&#123;</span><br><span class="line">                    length--;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> o=<span class="number">2</span>;o&lt;=tr_length;o++)&#123;</span><br><span class="line">                        tr[o-<span class="number">1</span>].<span class="property">children</span>[i-<span class="number">1</span>].<span class="title function_">remove</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            length = $(<span class="string">&quot;.kbcontent1&quot;</span>).<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                classLists = classLists_eg.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">                kbcontent1 = $(<span class="string">&quot;.kbcontent1&quot;</span>)[i-<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span>(!kbsort[kbcontent1.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>])&#123;</span><br><span class="line">                    kbsort[kbcontent1.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>] = <span class="title function_">randomColorPick</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">let</span> kbc1Children = kbcontent1.<span class="property">parentElement</span>.<span class="property">children</span>;</span><br><span class="line">                <span class="keyword">if</span>(kbcontent1 == kbc1Children[<span class="number">0</span>])&#123;</span><br><span class="line">                    <span class="keyword">let</span> similarity = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">let</span> similarClass,initalIndex;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> o=<span class="number">1</span>;o&lt;kbc1Children.<span class="property">length</span>;o++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(kbc1Children[o-<span class="number">1</span>].<span class="property">firstChild</span>.<span class="property">data</span>==kbc1Children[o].<span class="property">firstChild</span>.<span class="property">data</span>&amp;&amp;kbc1Children[o-<span class="number">1</span>].<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>.<span class="title function_">slice</span>(kbc1Children[o-<span class="number">1</span>].<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;(&quot;</span>))==kbc1Children[o].<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>.<span class="title function_">slice</span>(<span class="params">kbc1Children[o].childNodes[<span class="number">2</span>].data.lastIndexOf(<span class="string">&quot;(&quot;</span>)</span>))&#123;</span><br><span class="line">                            <span class="keyword">if</span>(similarity==<span class="number">0</span>)&#123;</span><br><span class="line">                                similarClass = kbc1Children[o-<span class="number">1</span>].<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>;</span><br><span class="line">                                initalIndex = o-<span class="number">1</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            similarity++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(similarity&gt;<span class="number">4</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(!kbsort[kbc1Children[initalIndex].<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>])&#123;</span><br><span class="line">                            kbsort[kbc1Children[initalIndex].<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>] = <span class="title function_">randomColorPick</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                        tempJson = kbsort[kbc1Children[initalIndex].<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>];</span><br><span class="line">                        kbc1Children[initalIndex].<span class="property">id</span> = <span class="string">&quot;SimStackTop&quot;</span>;</span><br><span class="line">                        hslDarker = <span class="string">&quot;hsl(&quot;</span> + tempJson.<span class="property">hue</span> + <span class="string">&quot;, &quot;</span> + tempJson.<span class="property">sat</span> + <span class="string">&quot;%, &quot;</span> + (tempJson.<span class="property">light</span> - <span class="number">8</span>) + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">                        <span class="keyword">let</span> hslDarker2 = <span class="string">&quot;hsl(&quot;</span> + tempJson.<span class="property">hue</span> + <span class="string">&quot;, &quot;</span> + tempJson.<span class="property">sat</span> + <span class="string">&quot;%, &quot;</span> + (tempJson.<span class="property">light</span> - <span class="number">16</span>) + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">let</span> o=initalIndex+<span class="number">2</span>;o&lt;=kbc1Children.<span class="property">length</span>;o++)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(similarClass==kbc1Children[o-<span class="number">1</span>].<span class="property">firstChild</span>.<span class="property">data</span>)&#123;</span><br><span class="line">                                kbc1Children[o-<span class="number">1</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;SimStack&#x27;</span>);</span><br><span class="line">                                kbc1Children[o-<span class="number">1</span>].<span class="title function_">setAttribute</span>(<span class="string">&quot;stacked&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">                                <span class="title class_">SimStacked</span>(kbc1Children[o-<span class="number">1</span>]);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        kbc1Children[initalIndex].<span class="title function_">setAttribute</span>(<span class="string">&quot;stacked&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">                        kbc1Children[initalIndex].<span class="property">style</span>.<span class="property">cssText</span> += <span class="string">&quot;box-shadow: 3px 3px 0px 1px &quot;</span>+hslDarker+<span class="string">&quot;, 7px 7px 0px 1px &quot;</span>+hslDarker2;</span><br><span class="line">                        kbc1Children[initalIndex].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title class_">SimStackActions</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                tempJson = kbsort[kbcontent1.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>];</span><br><span class="line">                <span class="keyword">let</span> tempData = kbcontent1.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>;</span><br><span class="line">                <span class="keyword">if</span>(kbcontent1.<span class="property">lastChild</span>.<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    classLists.<span class="property">innerHTML</span> = kbcontent1.<span class="property">lastChild</span>.<span class="property">data</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(kbcontent1.<span class="property">firstChild</span>.<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    classLists.<span class="property">innerHTML</span> = kbcontent1.<span class="property">firstChild</span>.<span class="property">data</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(kbcontent1.<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    classLists.<span class="property">innerHTML</span> = kbcontent1.<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;,&quot;</span>)&gt;classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;(&quot;</span>)&amp;&amp;classLists.<span class="property">innerHTML</span>.<span class="title function_">slice</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;,&quot;</span>),classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;,&quot;</span>)+<span class="number">1</span>).<span class="title function_">indexOf</span>(<span class="string">&quot;)&quot;</span>)==-<span class="number">1</span>)&#123;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">slice</span>(<span class="params"><span class="number">0</span>,classLists.innerHTML.lastIndexOf(<span class="string">&quot;(&quot;</span>)</span>).<span class="title function_">search</span>(<span class="regexp">/[0-9]/</span>)==-<span class="number">1</span>)&#123;</span><br><span class="line">                            classLists.<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">if</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;,&quot;</span>)&gt;classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="params"><span class="string">&quot;(&quot;</span></span>))&#123;</span><br><span class="line">                                <span class="keyword">let</span> replaced = classLists.<span class="property">innerHTML</span>.<span class="title function_">slice</span>(<span class="number">0</span>,classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;(&quot;</span>)).<span class="title function_">replaceAll</span>(<span class="string">&quot;,&quot;</span>,<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">                                replaced += classLists.<span class="property">innerHTML</span>.<span class="title function_">slice</span>(classLists.<span class="property">innerHTML</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;(&quot;</span>));</span><br><span class="line">                                classLists.<span class="property">innerHTML</span> = replaced;</span><br><span class="line">                            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                                classLists.<span class="property">innerHTML</span> = classLists.<span class="property">innerHTML</span>.<span class="title function_">replaceAll</span>(<span class="string">&quot;,&quot;</span>,<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            hslDarker = <span class="string">&quot;hsl(&quot;</span> + tempJson.<span class="property">hue</span> + <span class="string">&quot;, &quot;</span> + tempJson.<span class="property">sat</span> + <span class="string">&quot;%, &quot;</span> + (tempJson.<span class="property">light</span> - <span class="number">10</span>) + <span class="string">&quot;%)&quot;</span>;</span><br><span class="line">                            classLists.<span class="property">style</span> = <span class="string">&quot; background-color:&quot;</span>+hslDarker;</span><br><span class="line">                        &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">                <span class="keyword">if</span>(kbcontent1.<span class="property">lastChild</span>.<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    kbcontent1.<span class="property">lastChild</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    kbcontent1.<span class="property">lastChild</span>.<span class="title function_">after</span>(classLists);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(kbcontent1.<span class="property">firstChild</span>.<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    kbcontent1.<span class="property">firstChild</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    kbcontent1.<span class="property">firstChild</span>.<span class="title function_">before</span>(classLists);</span><br><span class="line">                    classLists.<span class="property">nextSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    kbsort[kbcontent1.<span class="property">firstChild</span>.<span class="property">innerHTML</span>]=tempData;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(kbcontent1.<span class="property">childNodes</span>[<span class="number">2</span>].<span class="property">data</span>.<span class="title function_">search</span>(<span class="string">&quot;,&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    kbcontent1.<span class="property">childNodes</span>[<span class="number">2</span>].<span class="title function_">remove</span>();</span><br><span class="line">                    kbcontent1.<span class="property">childNodes</span>[<span class="number">2</span>].<span class="title function_">before</span>(classLists);</span><br><span class="line">                    classLists.<span class="property">nextSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                kbcontent1.<span class="property">style</span>.<span class="property">cssText</span> += <span class="string">&quot;background-color:&quot;</span>+tempJson.<span class="property">hsl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">fixKBBottom</span>(<span class="string">&quot;kbcontent1&quot;</span>);</span><br><span class="line">            <span class="title function_">setupScalingPanel</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//remove zoom button and text</span></span><br><span class="line">            $(<span class="string">&quot;#sfFD&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">            $(<span class="string">&quot;#xnxq01id&quot;</span>)[<span class="number">0</span>].<span class="property">parentElement</span>.<span class="property">lastChild</span>.<span class="title function_">remove</span>();</span><br><span class="line">            <span class="keyword">let</span> kblength = $(<span class="string">&quot;.kbcontent&quot;</span>).<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">let</span> length = $(<span class="string">&quot;.kbcontent1&quot;</span>).<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                kbcontent1 = $(<span class="string">&quot;.kbcontent1&quot;</span>)[i-<span class="number">1</span>];</span><br><span class="line">                kbcontent1.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=kblength;i++)&#123;</span><br><span class="line">                <span class="keyword">let</span> childNodes;</span><br><span class="line">                kbcontent = $(<span class="string">&quot;.kbcontent&quot;</span>)[i-<span class="number">1</span>];</span><br><span class="line">                childNodes = kbcontent.<span class="property">childNodes</span>;</span><br><span class="line">                length = childNodes.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">let</span> kbdiv_eg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">                kbdiv_eg.<span class="property">className</span> = <span class="string">&quot;kbcontent&quot;</span>;</span><br><span class="line">                kbdiv_eg.<span class="property">id</span> = <span class="string">&quot;SimKB&quot;</span>;</span><br><span class="line">                <span class="keyword">let</span> kbdiv;</span><br><span class="line">                <span class="keyword">function</span> <span class="title function_">cut_judge</span>(<span class="params">node</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(node.<span class="property">nodeName</span> != <span class="string">&#x27;BR&#x27;</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(node.<span class="property">data</span>==<span class="string">&#x27;---------------------&#x27;</span>)&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">function</span> <span class="title function_">append_kbdiv</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    kbdiv.<span class="property">firstChild</span>.<span class="title function_">remove</span>();</span><br><span class="line">                    kbcontent.<span class="property">parentElement</span>.<span class="title function_">appendChild</span>(kbdiv);</span><br><span class="line">                    kblength++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(kbcontent.<span class="property">innerHTML</span>==<span class="string">&#x27;&amp;nbsp;&#x27;</span>)&#123;</span><br><span class="line">                    kbcontent.<span class="property">style</span>.<span class="property">visibility</span> = <span class="string">&quot;hidden&quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!kbsort[kbcontent.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>])&#123;</span><br><span class="line">                    kbsort[kbcontent.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>] = <span class="title function_">randomColorPick</span>().<span class="property">hsl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                kbcontent.<span class="property">style</span>.<span class="property">background</span> = kbsort[kbcontent.<span class="property">childNodes</span>[<span class="number">0</span>].<span class="property">data</span>];</span><br><span class="line">                <span class="keyword">if</span>(kbcontent.<span class="property">id</span> != <span class="string">&#x27;SimKB&#x27;</span>&amp;&amp;kbcontent.<span class="property">innerHTML</span>!=<span class="string">&#x27;&amp;nbsp;&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">let</span> cut_times = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">let</span> o=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">while</span>(o&lt;length-<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="title function_">cut_judge</span>(childNodes[o])==<span class="literal">true</span>)&#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        o++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">while</span>(o&lt;length-<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="title function_">cut_judge</span>(childNodes[o])==<span class="literal">true</span>)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(cut_times!=<span class="number">0</span>)&#123;</span><br><span class="line">                                <span class="title function_">append_kbdiv</span>();</span><br><span class="line">                            &#125;</span><br><span class="line">                            kbdiv = kbdiv_eg.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">                            childNodes[o].<span class="title function_">remove</span>();</span><br><span class="line">                            length--;</span><br><span class="line">                            cut_times++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        kbdiv.<span class="title function_">appendChild</span>(childNodes[o]);</span><br><span class="line">                        length--;</span><br><span class="line">                        <span class="keyword">if</span>(o==length-<span class="number">1</span>)&#123;</span><br><span class="line">                            <span class="title function_">append_kbdiv</span>();</span><br><span class="line">                            kbcontent.<span class="property">lastChild</span>.<span class="title function_">remove</span>();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> th,second,fourth,noon,evening;</span><br><span class="line">            length = $(<span class="string">&quot;th&quot;</span>).<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                th = $(<span class="string">&quot;th&quot;</span>)[i-<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span>(th.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;&amp;nbsp;&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    th.<span class="property">innerHTML</span> = th.<span class="property">innerHTML</span>.<span class="title function_">replace</span>(<span class="string">&quot;&amp;nbsp;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(th.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;第二大节&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    second = th.<span class="property">parentElement</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(th.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;中午&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    th.<span class="property">innerHTML</span> = th.<span class="property">innerHTML</span>.<span class="title function_">replace</span>(<span class="string">&quot;中午&quot;</span>,<span class="string">&quot;晚间&quot;</span>);</span><br><span class="line">                    th.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;0px&#x27;</span>;</span><br><span class="line">                    noon = th.<span class="property">parentElement</span>;</span><br><span class="line">                    noon.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;#599FFE&quot;</span>;</span><br><span class="line">                    evening = noon.<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">                    th.<span class="property">innerHTML</span> = th.<span class="property">innerHTML</span>.<span class="title function_">replace</span>(<span class="string">&quot;晚间&quot;</span>,<span class="string">&quot;午间&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(th.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;第四大节&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    fourth = th.<span class="property">parentElement</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(th.<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;备注:&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    th.<span class="property">innerHTML</span> = th.<span class="property">innerHTML</span>.<span class="title function_">replace</span>(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    th.<span class="property">style</span>.<span class="property">padding</span> = <span class="string">&#x27;0px&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i==length)&#123;</span><br><span class="line">                    fourth.<span class="title function_">after</span>(evening);</span><br><span class="line">                    second.<span class="title function_">after</span>(noon);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">fixKBBottom</span>(<span class="string">&quot;kbcontent&quot;</span>);</span><br><span class="line">            <span class="title function_">setupScalingPanel</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//change sub page title</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> title = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(title.<span class="property">innerText</span>.<span class="title function_">search</span>(<span class="string">&quot;&gt;&gt;&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">            title.<span class="property">innerHTML</span> = title.<span class="property">innerText</span>.<span class="title function_">slice</span>(title.<span class="property">innerText</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;&gt;&gt;&quot;</span>)+<span class="number">2</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            title.<span class="property">innerHTML</span> = title.<span class="property">innerText</span>.<span class="title function_">slice</span>(title.<span class="property">innerText</span>.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;» &quot;</span>)+<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>].<span class="property">previousElementSibling</span>)&#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>].<span class="property">previousElementSibling</span>.<span class="title function_">remove</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;.Nsb_layout_r&quot;</span>)[<span class="number">0</span>]&amp;&amp;!$(<span class="string">&quot;.Nsb_l_list_now&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> length = $(<span class="string">&quot;a[href]&quot;</span>).<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>($(<span class="string">&quot;a[href]&quot;</span>)[i-<span class="number">1</span>].<span class="property">innerText</span> == $(<span class="string">&quot;.Nsb_r_title&quot;</span>)[<span class="number">0</span>].<span class="property">innerText</span>)&#123;</span><br><span class="line">                $(<span class="string">&quot;a[href]&quot;</span>)[i-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; Nsb_l_list_now&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;.Nsb_layout_l&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span>($(<span class="string">&quot;.Nsb_layout_l&quot;</span>)[<span class="number">0</span>].<span class="property">childElementCount</span> &lt;=<span class="number">1</span>)&#123;</span><br><span class="line">            $(<span class="string">&quot;.Nsb_layout_l&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">            <span class="comment">//main page info fix</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_pw&quot;</span>)[<span class="number">2</span>]&amp;&amp;<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn_back&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> childNodes = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_pw&quot;</span>)[<span class="number">2</span>].<span class="property">childNodes</span>;</span><br><span class="line">        <span class="keyword">let</span> length = childNodes.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        div.<span class="property">id</span> = <span class="string">&quot;SimInfo&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">5</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(childNodes[i-<span class="number">2</span>].<span class="property">nodeName</span> == <span class="string">&#x27;BR&#x27;</span>&amp;&amp;childNodes[i].<span class="property">nodeName</span> == <span class="string">&#x27;BR&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">let</span> line1 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">                line1.<span class="property">innerHTML</span> = childNodes[i-<span class="number">1</span>].<span class="property">data</span>;</span><br><span class="line">                div.<span class="title function_">appendChild</span>(line1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((childNodes[i-<span class="number">2</span>].<span class="property">nodeName</span> == <span class="string">&#x27;BR&#x27;</span>&amp;&amp;childNodes[i].<span class="property">nodeName</span> == <span class="string">&#x27;SPAN&#x27;</span>)||(childNodes[i-<span class="number">2</span>].<span class="property">nodeName</span> == <span class="string">&#x27;SPAN&#x27;</span>&amp;&amp;childNodes[i].<span class="property">nodeName</span> == <span class="string">&#x27;SPAN&#x27;</span>))&#123;</span><br><span class="line">                div.<span class="property">innerHTML</span> += childNodes[i-<span class="number">1</span>].<span class="property">data</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(childNodes[i-<span class="number">1</span>].<span class="property">nodeName</span> == <span class="string">&#x27;SPAN&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">let</span> span = childNodes[i-<span class="number">1</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">                div.<span class="title function_">appendChild</span>(span);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;btn_back&quot;</span>).<span class="title function_">after</span>(div);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((childNodes[i-<span class="number">1</span>].<span class="property">nodeName</span> == <span class="string">&#x27;BR&#x27;</span>||childNodes[i-<span class="number">1</span>].<span class="property">nodeName</span> == <span class="string">&#x27;#text&#x27;</span>||childNodes[i-<span class="number">1</span>].<span class="property">nodeName</span> == <span class="string">&#x27;SPAN&#x27;</span>)&amp;&amp;(childNodes[i-<span class="number">1</span>].<span class="property">parentElement</span>.<span class="property">id</span>!=<span class="string">&quot;SimInfo&quot;</span>))&#123;</span><br><span class="line">                childNodes[i-<span class="number">1</span>].<span class="title function_">remove</span>();</span><br><span class="line">                i-=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            length = childNodes.<span class="property">length</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fix pattern</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">namedItem</span>(<span class="string">&quot;selectJg0101JS&quot;</span>))&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;button&quot;</span>).<span class="title function_">namedItem</span>(<span class="string">&quot;selectJg0101JS&quot;</span>).<span class="property">parentElement</span>.<span class="property">style</span> = <span class="string">&quot;display: inline-flex;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;button2&quot;</span>)&amp;&amp;!<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;button1&quot;</span>))&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;button2&quot;</span>).<span class="property">style</span> = <span class="string">&quot;left:0;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//button input difference &amp; disabled things marker</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>).<span class="property">length</span>&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = input.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>((input[i-<span class="number">1</span>].<span class="property">type</span> == <span class="string">&quot;text&quot;</span>||input[i-<span class="number">1</span>].<span class="property">type</span> == <span class="string">&quot;password&quot;</span>)&amp;&amp;input[i-<span class="number">1</span>].<span class="property">parentElement</span>.<span class="property">tagName</span>==<span class="string">&quot;TD&quot;</span>)&#123;</span><br><span class="line">                input[i-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; SimInput&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//marker for disabled input</span></span><br><span class="line">            <span class="keyword">if</span>(input[i-<span class="number">1</span>].<span class="property">disabled</span> == <span class="literal">true</span>)&#123;</span><br><span class="line">                input[i-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; disabled&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//select</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;select&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> select = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;select&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = select.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">            select[i-<span class="number">1</span>].<span class="property">className</span> = <span class="string">&quot;SimSelect&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;button&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> button = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(button[<span class="number">0</span>].<span class="property">attributes</span>.<span class="property">onclick</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((button[<span class="number">0</span>].<span class="property">attributes</span>.<span class="property">onclick</span>.<span class="property">value</span>.<span class="title function_">includes</span>(<span class="string">&quot;JsMod&quot;</span>))&amp;&amp;(button.<span class="property">length</span>==<span class="number">1</span>))&#123;</span><br><span class="line">                button[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;centerButton&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//Slim select</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;form&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span>($(<span class="string">&quot;form&quot;</span>)[<span class="number">0</span>].<span class="property">action</span>==<span class="string">&quot;http://jw.wbu.edu.cn/jsxsd/kbxx/jsjy_query2&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> select = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;select&quot;</span>);</span><br><span class="line">            <span class="keyword">let</span> length = select.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                select[i-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; Slim&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">            length = input.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(input[i-<span class="number">1</span>].<span class="property">type</span> == <span class="string">&quot;text&quot;</span>||input[i-<span class="number">1</span>].<span class="property">type</span> == <span class="string">&quot;password&quot;</span>&amp;&amp;input[i-<span class="number">1</span>].<span class="property">parentElement</span>.<span class="property">tagName</span>==<span class="string">&quot;TD&quot;</span>)&#123;</span><br><span class="line">                    input[i-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; Slim&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SimPage</span></span><br><span class="line">    <span class="comment">//patch an added blank page</span></span><br><span class="line">        <span class="keyword">let</span> script = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> length = script.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(script[i-<span class="number">1</span>].<span class="property">innerHTML</span>.<span class="title function_">search</span>(<span class="string">&quot;window.close()&quot;</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="title function_">closeIframe</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!$(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">parent</span>.$(<span class="string">&quot;#fcenter&quot;</span>)[<span class="number">0</span>].<span class="title function_">remove</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//SimPage iframe</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;.toolbar&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        $(<span class="string">&quot;.toolbar&quot;</span>)[<span class="number">0</span>].<span class="title function_">remove</span>();</span><br><span class="line">        <span class="keyword">if</span>($(<span class="string">&quot;textarea&quot;</span>).<span class="property">length</span>&lt;<span class="number">2</span>&amp;&amp;$(<span class="string">&quot;textarea&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            $(<span class="string">&quot;table&quot;</span>)[<span class="number">0</span>].<span class="property">className</span> = <span class="string">&quot;textform&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.toolstitle&quot;</span>))&#123;</span><br><span class="line">        <span class="title function_">waitForLoading</span>(<span class="string">&quot;.button&quot;</span>).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> button = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.button&quot;</span>);</span><br><span class="line">            button.<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.<span class="property">attributes</span>.<span class="property">onclick</span>.<span class="property">value</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;window.close()&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    e.<span class="property">attributes</span>.<span class="title function_">removeNamedItem</span>(<span class="string">&quot;onclick&quot;</span>);</span><br><span class="line">                    e.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, closeIframe);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">waitForLoading</span>(<span class="params">targetSelector</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(targetSelector)) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//setup homepage icons</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block1&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> icon1 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon3 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon4 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon5 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon6 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon7 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon8 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon9 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon10 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon11 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> icon12 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;span&quot;</span>);</span><br><span class="line">        icon1.<span class="property">className</span> = <span class="string">&quot;iconfont icon-yonghu&quot;</span>;</span><br><span class="line">        icon2.<span class="property">className</span> = <span class="string">&quot;iconfont icon-xuanke&quot;</span>;</span><br><span class="line">        icon3.<span class="property">className</span> = <span class="string">&quot;iconfont icon-pingjiao&quot;</span>;</span><br><span class="line">        icon4.<span class="property">className</span> = <span class="string">&quot;iconfont icon-jiejuefangan&quot;</span>;</span><br><span class="line">        icon5.<span class="property">className</span> = <span class="string">&quot;iconfont icon-icon-test&quot;</span>;</span><br><span class="line">        icon6.<span class="property">className</span> = <span class="string">&quot;iconfont icon-gonggao-xianxing&quot;</span>;</span><br><span class="line">        icon7.<span class="property">className</span> = <span class="string">&quot;iconfont icon-chengji&quot;</span>;</span><br><span class="line">        icon8.<span class="property">className</span> = <span class="string">&quot;iconfont icon-rili&quot;</span>;</span><br><span class="line">        icon9.<span class="property">className</span> = <span class="string">&quot;iconfont icon-jihua&quot;</span>;</span><br><span class="line">        icon10.<span class="property">className</span> = <span class="string">&quot;iconfont icon-chengji&quot;</span>;</span><br><span class="line">        icon11.<span class="property">className</span> = <span class="string">&quot;iconfont icon-xuejiyidongguanli&quot;</span>;</span><br><span class="line">        icon12.<span class="property">className</span> = <span class="string">&quot;iconfont icon-zaixianbaoming&quot;</span>;</span><br><span class="line">    <span class="comment">//fix missing block6</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block6&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">let</span> block6 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            block6.<span class="property">innerHTML</span> = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;wap&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>)[<span class="number">4</span>].<span class="property">innerHTML</span>;</span><br><span class="line">            block6.<span class="property">className</span> = <span class="string">&quot;block6&quot;</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;wap&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>)[<span class="number">4</span>].<span class="property">innerHTML</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;wap&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>)[<span class="number">4</span>].<span class="title function_">appendChild</span>(block6);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">apply_icons</span>(<span class="params">b,i</span>)&#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(b)[<span class="number">0</span>].<span class="title function_">appendChild</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block1&quot;</span>,icon1);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block2&quot;</span>,icon2);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block3&quot;</span>,icon3);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block4&quot;</span>,icon4);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block5&quot;</span>,icon5);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block6&quot;</span>,icon6);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block7&quot;</span>,icon7);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block8&quot;</span>,icon8);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block9&quot;</span>,icon9);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block10&quot;</span>,icon10);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block11&quot;</span>,icon11);</span><br><span class="line">        <span class="title function_">apply_icons</span>(<span class="string">&quot;block12&quot;</span>,icon12);</span><br><span class="line">        <span class="comment">//add title for hide names func</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;icon-yonghu&quot;</span>)[<span class="number">0</span>].<span class="property">title</span>=<span class="string">&quot;点击切换个人信息展示&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//hide personal info</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Top1_divLoginName&quot;</span>))&#123;</span><br><span class="line">        <span class="comment">//name color reset</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Top1_divLoginName&quot;</span>).<span class="property">style</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Top1_divLoginName&quot;</span>).<span class="property">title</span> = <span class="string">&quot;点击切换个人信息展示&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> name_top = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Top1_divLoginName&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> origin_name_top = name_top.<span class="property">innerHTML</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&quot;name_top&quot;</span>)==<span class="string">&quot;hidden&quot;</span>)&#123;</span><br><span class="line">            name_top.<span class="property">innerHTML</span> = <span class="string">&quot;个人信息已隐藏&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> name_inner;</span><br><span class="line">        <span class="keyword">let</span> origin_name_inner;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block1text&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            name_inner = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block1text&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">            origin_name_inner= name_inner.<span class="property">innerHTML</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&quot;name_inner&quot;</span>)==<span class="string">&quot;hidden&quot;</span>)&#123;</span><br><span class="line">                name_inner.<span class="property">innerHTML</span> = <span class="string">&quot;个人信息已隐藏&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;icon-yonghu&quot;</span>)[<span class="number">0</span>].<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, name_hide);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">name_hide_top</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(origin_name_top==name_top.<span class="property">innerHTML</span>)&#123;</span><br><span class="line">                name_top.<span class="property">innerHTML</span> = <span class="string">&quot;个人信息已隐藏&quot;</span>;</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name_top&#x27;</span>, <span class="string">&#x27;hidden&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name_inner&#x27;</span>, <span class="string">&#x27;hidden&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                name_top.<span class="property">innerHTML</span> = origin_name_top;</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name_top&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name_inner&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">name_hide_inner</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(origin_name_inner==name_inner.<span class="property">innerHTML</span>)&#123;</span><br><span class="line">                name_inner.<span class="property">innerHTML</span> = <span class="string">&quot;个人信息已隐藏&quot;</span>;</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name_top&#x27;</span>, <span class="string">&#x27;hidden&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name_inner&#x27;</span>, <span class="string">&#x27;hidden&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                name_inner.<span class="property">innerHTML</span> = origin_name_inner;</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name_top&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">                <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name_inner&#x27;</span>, &#123;<span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">name_hide</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;block1text&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="title function_">name_hide_top</span>();</span><br><span class="line">                <span class="title function_">name_hide_inner</span>();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="title function_">name_hide_top</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        name_top.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, name_hide);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//add title for hide names func</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Footer1_divCopyright&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> footer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Footer1_divCopyright&quot;</span>);</span><br><span class="line">        footer.<span class="property">className</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        footer.<span class="property">style</span> = <span class="string">&quot;text-align: center;&quot;</span></span><br><span class="line">        <span class="keyword">let</span> info = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        info.<span class="property">innerHTML</span> = <span class="string">&quot;Beautified with &lt;span class=&#x27;heart&#x27;&gt;❤&lt;/span&gt;&lt;span class=&#x27;info&#x27;&gt; by Simprole&lt;/span&gt;&quot;</span></span><br><span class="line">        info.<span class="property">className</span> = <span class="string">&quot;info&quot;</span>;</span><br><span class="line">        footer.<span class="title function_">appendChild</span>(info);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//form btn style</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;Form&quot;</span>)[<span class="number">1</span>]&amp;&amp;<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> buttons = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> form=<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;Form&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(form[form.<span class="property">length</span>-<span class="number">1</span>].<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">            form[form.<span class="property">length</span>-<span class="number">1</span>].<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_title&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(buttons);</span><br><span class="line">            <span class="keyword">let</span> btn = form[form.<span class="property">length</span>-<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">            <span class="keyword">let</span> btn_len = btn.<span class="property">length</span>;</span><br><span class="line">            <span class="keyword">let</span> validLength = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>($(<span class="string">&quot;.Nsb_layout_r&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=btn_len;i++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(btn[i-<span class="number">1</span>].<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>))&#123;</span><br><span class="line">                        validLength++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(validLength&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=btn_len;i++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(btn[i-<span class="number">1</span>].<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>))&#123;</span><br><span class="line">                            buttons.<span class="title function_">appendChild</span>(btn[i-<span class="number">1</span>]);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=btn_len;i++)&#123;</span><br><span class="line">                    buttons.<span class="title function_">appendChild</span>(btn[i-<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//setup table round corner</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_table&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        <span class="keyword">let</span> table = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_table&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = table.<span class="property">length</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;kbtable&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(table[i-<span class="number">1</span>].<span class="property">border</span> == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                    table[i-<span class="number">1</span>].<span class="property">border</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">let</span> tr = table[i-<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">                <span class="keyword">let</span> th = tr[<span class="number">0</span>].<span class="property">children</span>;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;Nsb_r_list_thb&quot;</span>)[<span class="number">0</span>]&amp;&amp;th.<span class="property">legnth</span>==<span class="number">1</span>)&#123;</span><br><span class="line">                    th[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;Nsb_r_list_thb&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                th[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;thb_t_l&quot;</span>);</span><br><span class="line">                th[th.<span class="property">length</span>-<span class="number">1</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;thb_t_r&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">let</span> tr_c = tr[tr.<span class="property">length</span>-<span class="number">1</span>].<span class="property">children</span>;</span><br><span class="line">                <span class="keyword">if</span>(tr_c[<span class="number">0</span>].<span class="property">tagName</span> == <span class="string">&quot;TD&quot;</span>)&#123;</span><br><span class="line">                    tr_c[<span class="number">0</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;thb_b_l&quot;</span>);</span><br><span class="line">                    tr_c[tr_c.<span class="property">length</span>-<span class="number">1</span>].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;thb_b_r&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;kbtable&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> table = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;kbtable&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(table.<span class="property">border</span> == <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">            table.<span class="property">border</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> tr = table.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> th = tr[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> length = th.<span class="property">length</span>;</span><br><span class="line">        th[<span class="number">0</span>].<span class="property">className</span> += <span class="string">&quot; thb_t_l&quot;</span>;</span><br><span class="line">        th[th.<span class="property">length</span>-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; thb_t_r&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> tr_c = tr[tr.<span class="property">length</span>-<span class="number">1</span>].<span class="property">children</span>;</span><br><span class="line">        tr_c[<span class="number">0</span>].<span class="property">className</span> += <span class="string">&quot; thb_b_l&quot;</span>;</span><br><span class="line">        tr_c[tr_c.<span class="property">length</span>-<span class="number">1</span>].<span class="property">className</span> += <span class="string">&quot; thb_b_r&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fix a width</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">&quot;*[name=&#x27;zyxzForm&#x27;]&quot;</span>)[<span class="number">0</span>])&#123;</span><br><span class="line">        $(<span class="string">&quot;*[name=&#x27;zyxzForm&#x27;]&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;div&quot;</span>)[<span class="number">0</span>].<span class="property">style</span>=<span class="string">&quot;width:100%&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//setup page flip btn style</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;PagingControl1_btnPrevPage&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">let</span> prevbtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;PagingControl1_btnPrevPage&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> nextbtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;PagingControl1_btnNextPage&quot;</span>);</span><br><span class="line">        prevbtn.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;&quot;</span>;</span><br><span class="line">        nextbtn.<span class="property">innerHTML</span> = <span class="string">&quot;&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(prevbtn.<span class="property">attributes</span>.<span class="property">disabled</span>)&#123;</span><br><span class="line">            prevbtn.<span class="property">className</span> = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">            nextbtn.<span class="property">className</span> = <span class="string">&quot;disabled&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自动评教"><a href="#自动评教" class="headerlink" title="自动评教"></a>自动评教</h2><p>效果如图：<br><img src="pic2.png"></p><p>代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         WBUTeachersEvaluator</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.2</span></span><br><span class="line"><span class="comment">// @description  WBU自动教学评价</span></span><br><span class="line"><span class="comment">// @author       Simprole</span></span><br><span class="line"><span class="comment">// @match        http://jw.wbu.edu.cn/jsxsd/*</span></span><br><span class="line"><span class="comment">// @match        http://jw-wbu-edu-cn.webvpn.wbu.edu.cn:8118/jsxsd/*</span></span><br><span class="line"><span class="comment">// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico</span></span><br><span class="line"><span class="comment">// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js</span></span><br><span class="line"><span class="comment">// @run-at       document-start</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_addStyle</span></span><br><span class="line"><span class="comment">// @grant        GM_getResourceText</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;style&gt;input#SimBtn&#123;width: unset!important;font-size: 1rem;background-image: none;color: #fff!important;;background-color: rgb(35 119 254);border: rgb(35 119 254);border-radius: 20px;box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.4);padding: 5px 10px 5px 13px;position: relative;letter-spacing: 1px;text-align: center;text-decoration:none!important;height: min-content;transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&amp;:hover&#123;text-decoration:none;filter: brightness(0.8);box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.7);transform: translateY(0.5px);transition: 0.3s cubic-bezier(0.22, 0.61, 0.36, 1);transition-property: filter,box-shadow,transform;&#125;&#125;&lt;/style&gt;&#x27;</span>));</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($(<span class="string">&#x27;&lt;script&gt;function saveDataUnlimited(obj, status)&#123;var pj06xhs = document.getElementsByName(&quot;pj06xh&quot;);var flag = true;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;if(jQuery(&quot;input[name=\&#x27;pj0601id_&quot;+ pj06xhs[i].value+&quot;\&#x27;]:checked&quot;).length == 0) &#123;flag = false;break;&#125;&#125;if (!flag) &#123;alert(&quot;评价的每项指标都必须选择!&quot;);return false;&#125;flag = false;var minZb = 0;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;var pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);minZb = pj0601s.length;break;&#125;for(let j = 0; j &lt; minZb; j++) &#123;var _ind = 0;for (let i = 0; i &lt; pj06xhs.length; i++) &#123;pj0601s = document.getElementsByName(&quot;pj0601id_&quot;+ pj06xhs[i].value);if (j &lt; pj0601s.length &amp;&amp; pj0601s[j].checked) &#123;_ind++;&#125;&#125;if (_ind == pj06xhs.length) &#123;flag = true;break;&#125;&#125;if (status == &quot;1&quot;) &#123;document.getElementById(&quot;issubmit&quot;).value = &quot;1&quot;;&#125; else &#123;document.getElementById(&quot;issubmit&quot;).value = &quot;0&quot;;&#125;if(status == &quot;1&quot; &amp;&amp; !confirm(&quot;您是否确认提交当前评价,提交后不能修改！&quot;)) &#123;&#125; else &#123;obj.disabled = true;document.getElementById(&quot;Form1&quot;).submit();&#125;&#125;&lt;/script&gt;&#x27;</span>));</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">autoClick</span>(<span class="params">level</span>)&#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;#table1 tr td&quot;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.<span class="title function_">querySelector</span>(<span class="string">&quot;input[type=radio]&quot;</span>))&#123;</span><br><span class="line">                    <span class="keyword">let</span> option = e.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;input[type=radio]&quot;</span>);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=option.<span class="property">length</span>;i++)&#123;</span><br><span class="line">                        option[<span class="number">0</span>].<span class="property">checked</span> = <span class="literal">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;script[language=javascript]&quot;</span>))&#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;script[language=javascript]&quot;</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(e.<span class="property">innerHTML</span>.<span class="title function_">indexOf</span>(<span class="string">&quot;alert(&#x27;保存成功&#x27;);&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">parent</span>.<span class="property">parent</span>.<span class="property">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#SimPage&quot;</span>))&#123;</span><br><span class="line">                        <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="property">parent</span>.<span class="title function_">refresh</span>();</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">refresh</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;td.toolstitle&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;td.toolstitle&quot;</span>).<span class="property">innerHTML</span>==<span class="string">&#x27;学生评教&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">let</span> calcBtn = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">                calcBtn.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;自动评教&quot;</span>);</span><br><span class="line">                calcBtn.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;button&quot;</span>);</span><br><span class="line">                calcBtn.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;button&quot;</span>);</span><br><span class="line">                calcBtn.<span class="property">id</span> = <span class="string">&quot;SimBtn&quot;</span>;</span><br><span class="line">                calcBtn.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;position: fixed;bottom: 1rem;z-index: 100;right: 1rem;&quot;</span></span><br><span class="line">                calcBtn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,autoClick);</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(calcBtn);</span><br><span class="line">                <span class="title function_">unlimitable</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">unlimitable</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;td[align][style] input[type=button][name]&quot;</span>)) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;td[align][style] input[type=button][name]&quot;</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">f</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(f.<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(f.<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>).<span class="title function_">indexOf</span>(<span class="string">&quot;saveData&quot;</span>)!=-<span class="number">1</span>)&#123;</span><br><span class="line">                        f.<span class="title function_">setAttribute</span>(<span class="string">&quot;onclick&quot;</span>,<span class="string">&quot;saveDataUnlimited&quot;</span>+f.<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>).<span class="title function_">slice</span>(f.<span class="title function_">getAttribute</span>(<span class="string">&quot;onclick&quot;</span>).<span class="title function_">indexOf</span>(<span class="string">&quot;(&quot;</span>)));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">asyncSleep</span>(<span class="params">time</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">setTimeout</span>(resolve, time));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">saveDataUnlimited</span>(<span class="params">obj, status</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> pj06xhs = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;pj06xh&quot;</span>);</span><br><span class="line">                <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pj06xhs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_">jQuery</span>(<span class="string">&quot;input[name=&#x27;pj0601id_&quot;</span>+ pj06xhs[i].<span class="property">value</span>+<span class="string">&quot;&#x27;]:checked&quot;</span>).<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&quot;评价的每项指标都必须选择!&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">var</span> minZb = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pj06xhs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> pj0601s = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;pj0601id_&quot;</span>+ pj06xhs[i].<span class="property">value</span>);</span><br><span class="line">                    minZb = pj0601s.<span class="property">length</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; minZb; j++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> _ind = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pj06xhs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                        pj0601s = <span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;pj0601id_&quot;</span>+ pj06xhs[i].<span class="property">value</span>);</span><br><span class="line">                        <span class="keyword">if</span> (j &lt; pj0601s.<span class="property">length</span> &amp;&amp; pj0601s[j].<span class="property">checked</span>) &#123;</span><br><span class="line">                            _ind++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span> (_ind == pj06xhs.<span class="property">length</span>) &#123;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (status == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;issubmit&quot;</span>).<span class="property">value</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;issubmit&quot;</span>).<span class="property">value</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(status == <span class="string">&quot;1&quot;</span> &amp;&amp; !<span class="title function_">confirm</span>(<span class="string">&quot;您是否确认提交当前评价,提交后不能修改！&quot;</span>)) &#123;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                obj.<span class="property">disabled</span> = <span class="literal">true</span>;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;Form1&quot;</span>).<span class="title function_">submit</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="雨课堂刷视频"><a href="#雨课堂刷视频" class="headerlink" title="雨课堂刷视频"></a>雨课堂刷视频</h2><p>代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         雨课堂刷视频</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      0.2</span></span><br><span class="line"><span class="comment">// @description  雨课堂刷视频</span></span><br><span class="line"><span class="comment">// @author       Simprole</span></span><br><span class="line"><span class="comment">// @match        https://xxxxx.yuketang.cn/v2/web/xcloud/video-student/*</span></span><br><span class="line"><span class="comment">// @icon         https://www.wbu.edu.cn/_upload/tpl/00/a9/169/template169/images/favicon.ico</span></span><br><span class="line"><span class="comment">// @require      https://libs.baidu.com/jquery/2.0.0/jquery.min.js</span></span><br><span class="line"><span class="comment">// @run-at       document-start</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_addStyle</span></span><br><span class="line"><span class="comment">// @grant        GM_getResourceText</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">ultraPlay</span>();</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">ultraPlay</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="title function_">asyncSleep</span>(<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">let</span> video = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;video&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span>(video.<span class="property">currentTime</span>&lt;video.<span class="property">duration</span>&amp;&amp;<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.title-fr .text&quot;</span>).<span class="property">innerText</span>!=<span class="string">&quot;已完成&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">let</span> prevCurTime = video.<span class="property">currentTime</span>;</span><br><span class="line">                video.<span class="property">currentTime</span> += <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">await</span> <span class="title function_">asyncSleep</span>(<span class="number">200</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(prevCurTime-video.<span class="property">currentTime</span>)&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                        <span class="keyword">await</span> <span class="title function_">asyncSleep</span>(<span class="number">50</span>);</span><br><span class="line">                        video.<span class="property">currentTime</span> = video.<span class="property">duration</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    location.<span class="title function_">reload</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.title-fr .text&quot;</span>).<span class="property">innerText</span>!=<span class="string">&quot;已完成&quot;</span>)&#123;</span><br><span class="line">                location.<span class="title function_">reload</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">asyncSleep</span>(<span class="params">time</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> <span class="built_in">setTimeout</span>(resolve, time));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言及声明&quot;&gt;&lt;a href=&quot;#前言及声明&quot; class=&quot;headerlink&quot; title=&quot;前言及声明&quot;&gt;&lt;/a&gt;前言及声明&lt;/h2&gt;&lt;p&gt;鉴于wbu教务系统的垃圾以及评教每次还要打开兼容模式，本文利用油猴实现了一些脚本便于同学们的学习体验。&lt;br&gt;脚本作</summary>
      
    
    
    
    <category term="脚本" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
    <category term="脚本" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>数据结构_15：排序算法</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-15%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-15%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2023-08-04T15:39:27.000Z</published>
    <updated>2023-08-04T15:39:27.878Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_14：图应用</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-14%EF%BC%9A%E5%9B%BE%E5%BA%94%E7%94%A8/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-14%EF%BC%9A%E5%9B%BE%E5%BA%94%E7%94%A8/</id>
    <published>2023-08-04T15:39:11.000Z</published>
    <updated>2023-08-04T15:39:11.923Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_13：图</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E5%9B%BE/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E5%9B%BE/</id>
    <published>2023-08-04T15:38:54.000Z</published>
    <updated>2023-08-04T15:38:54.252Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_12：散列表</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-12%EF%BC%9A%E6%95%A3%E5%88%97%E8%A1%A8/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-12%EF%BC%9A%E6%95%A3%E5%88%97%E8%A1%A8/</id>
    <published>2023-08-04T15:38:42.000Z</published>
    <updated>2023-08-04T15:38:42.051Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_11：树实战</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-11%EF%BC%9A%E6%A0%91%E5%AE%9E%E6%88%98/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-11%EF%BC%9A%E6%A0%91%E5%AE%9E%E6%88%98/</id>
    <published>2023-08-04T15:38:28.000Z</published>
    <updated>2023-08-04T15:38:28.808Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_13：排序算法</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-13%EF%BC%9A%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2023-08-04T15:37:28.000Z</published>
    <updated>2023-08-04T15:37:28.748Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_10：其他树</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-10%EF%BC%9A%E5%85%B6%E4%BB%96%E6%A0%91/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-10%EF%BC%9A%E5%85%B6%E4%BB%96%E6%A0%91/</id>
    <published>2023-08-04T15:36:21.000Z</published>
    <updated>2023-08-04T15:36:21.295Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_09：高级树</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-09%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%A0%91/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-09%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%A0%91/</id>
    <published>2023-08-04T15:35:43.000Z</published>
    <updated>2023-08-04T15:35:43.530Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_08：二叉树</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-08%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-08%EF%BC%9A%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2023-08-04T15:35:16.000Z</published>
    <updated>2023-08-04T15:35:16.625Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_07：线性表实战</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-07%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%AE%9E%E6%88%98/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-07%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%AE%9E%E6%88%98/</id>
    <published>2023-08-04T15:34:40.000Z</published>
    <updated>2023-08-04T15:34:40.811Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据结构_06：队列</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-06%EF%BC%9A%E9%98%9F%E5%88%97/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/08/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-06%EF%BC%9A%E9%98%9F%E5%88%97/</id>
    <published>2023-08-04T15:34:09.000Z</published>
    <updated>2023-08-04T15:34:09.601Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数论杂记</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/04/02/%E6%95%B0%E8%AE%BA%E6%9D%82%E8%AE%B0/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/04/02/%E6%95%B0%E8%AE%BA%E6%9D%82%E8%AE%B0/</id>
    <published>2023-04-01T16:36:17.000Z</published>
    <updated>2023-04-05T03:35:16.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>原本打算将这篇博客取名数论基础，然而想想实在狂妄，本文仅仅记录了一些在做编程题时可能会用到的数学方法，离正统的数论还相差甚远，就数论杂记一名仍有蹭热度之嫌，不甚惶恐，留下这篇杂记。</p><h2 id="最大公约数-——-Greatest-Common-Divisor-GCD"><a href="#最大公约数-——-Greatest-Common-Divisor-GCD" class="headerlink" title="最大公约数 —— Greatest Common Divisor(GCD)"></a>最大公约数 —— Greatest Common Divisor(GCD)</h2><p>朴素的暴力法求最大公约数和辗转相除法的思想这里都不做赘述，我们仅仅介绍两种超快的求最大公约数算法：</p><ol><li><p>位运算法（a*b!&#x3D;0）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(b^=a^=b^=a%=b);</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>if+while+位运算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(b) <span class="keyword">while</span>((a%=b)&amp;&amp;(b%=a));</span><br><span class="line">  <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="质数判断"><a href="#质数判断" class="headerlink" title="质数判断"></a>质数判断</h2><p>朴素的暴力法这里不再赘述，我们仅仅介绍一种超快的判断质数方法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">prime</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(num==<span class="number">1</span>)  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span>(num==<span class="number">2</span>||num==<span class="number">3</span>)  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">if</span>(num%<span class="number">6</span>!=<span class="number">1</span>&amp;&amp;num%<span class="number">6</span>!=<span class="number">5</span>)  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="type">int</span> tmp=<span class="built_in">sqrt</span>(num);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">5</span>;i&lt;=tmp;i+=<span class="number">6</span>)</span><br><span class="line">    <span class="keyword">if</span>(num%i==<span class="number">0</span>||num%(i+<span class="number">2</span>)==<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="分解质数"><a href="#分解质数" class="headerlink" title="分解质数"></a>分解质数</h2><p>已知一个数可以分解成1和其本身相乘形式、或一种确定的若干个的质数相乘的形式，我们可以设计一种算法统计这些形式的长度（其中不包括1）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> n=<span class="number">0</span>,m=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(i!=<span class="number">1</span>&amp;&amp;m&lt;=<span class="built_in">sqrt</span>(i))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span>(i%m==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      n++;</span><br><span class="line">      i/=m;</span><br><span class="line">    &#125;</span><br><span class="line">    m++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i!=<span class="number">1</span>)  n++;</span><br><span class="line">  <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们也可以设计一个朴素的算法来输出这个序列：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">prim</span><span class="params">(<span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(m&gt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(m%n) n++;</span><br><span class="line">        cout&lt;&lt;n&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        m/=n;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="约数个数"><a href="#约数个数" class="headerlink" title="约数个数"></a>约数个数</h2><p>在上文中我们提到了任何一个数都可以分解为质数相乘的形式，我们很容易联想到一个数的约数个数会和其质数数量存在某种联系，实际上也确实如此：</p><blockquote><p>一个数约数的个数等于其分解成的各个质数的幂次数加一之和的积。</p></blockquote><h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a>最小公倍数</h2><p>对于最小公倍数的计算，我们首先可以基于gcd的基础得到一个简单的算法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">ans</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a*b/<span class="built_in">gcd</span>(a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们还可以根据上文的约数分解逆推出求其最小公倍数的公式，我们知道如果某个数a含有约数b，那么数a的倍数也含有这个约数b，因此有结论：</p><blockquote><p>最小公倍数等于各个数字分解而成的各个质数在所有数字中最大幂次的积。</p></blockquote><h2 id="大数运算"><a href="#大数运算" class="headerlink" title="大数运算"></a>大数运算</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;原本打算将这篇博客取名数论基础，然而想想实在狂妄，本文仅仅记录了一些在做编程题时可能会用到的数学方法，离正统的数论还相差甚远，就数论杂记一名</summary>
      
    
    
    
    <category term="杂项" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="C++" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C/"/>
    
    <category term="数论" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>数据结构_05：栈</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-05%EF%BC%9A%E6%A0%88/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-05%EF%BC%9A%E6%A0%88/</id>
    <published>2023-02-07T07:56:39.000Z</published>
    <updated>2023-02-07T14:43:05.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="栈的概念"><a href="#栈的概念" class="headerlink" title="栈的概念"></a>栈的概念</h2><p>汉语中对栈字的解释是存储货物或供旅客住宿的房屋，对应的，在计算机中栈指的是数据暂时存储的地方。<br>栈的特点，就像我们玩的俄罗斯方块一样，我们只能在最顶部进行操作。对此，我们总结为先进后出、后进先出。<br>对此，我们可以有流程图便于理解：<br><img src="1.jpg"></p><h2 id="顺序表实现栈"><a href="#顺序表实现栈" class="headerlink" title="顺序表实现栈"></a>顺序表实现栈</h2><p>栈的实现可以基于顺序表或是链表，这里我们先用顺序表实现，这里我们需要实现两个新的功能：</p><ol><li>入栈（push）：入栈操作，向栈中压入一个新的元素；</li><li>出栈（pop）：出栈操作，从栈顶取出一个元素。</li></ol><h3 id="定义结构体"><a href="#定义结构体" class="headerlink" title="定义结构体"></a>定义结构体</h3><p>这里我们基于顺序表设计，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span>* <span class="built_in">array</span>;</span><br><span class="line">  <span class="type">int</span> capacity;</span><br><span class="line">  <span class="type">int</span> top;<span class="comment">//当前的栈顶</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>这里我们基于顺序表设计，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span>* <span class="title">arraystack</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">setupstack</span><span class="params">(arraystack stack_)</span></span><br><span class="line">&#123;</span><br><span class="line">  stack_-&gt;<span class="built_in">array</span>=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*<span class="number">10</span>);<span class="comment">//初始容量为10</span></span><br><span class="line">  <span class="keyword">if</span>(stack_-&gt;<span class="built_in">array</span>==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    stack_-&gt;capacity=<span class="number">10</span>;</span><br><span class="line">    stack_-&gt;top=<span class="number">-1</span>;<span class="comment">//由于没有元素，栈顶默认为-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h3><p>在正式开始设计入栈功能之前，我们可以预料到在入栈时可能会产生容量不够的情况，故我们可以先设计扩容功能，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">extendstack</span><span class="params">(arraystack stack_)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> newcapacity=stack_-&gt;capacity*<span class="number">2</span>;<span class="comment">//内存扩展两倍</span></span><br><span class="line">  <span class="type">int</span>* newarray=<span class="built_in">realloc</span>(stack_-&gt;<span class="built_in">array</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>)*newcapacity);</span><br><span class="line">  <span class="keyword">if</span>(newarray==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  stack_-&gt;<span class="built_in">array</span>=newarray;</span><br><span class="line">  stack_-&gt;capacity=newcapacity;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="入栈"><a href="#入栈" class="headerlink" title="入栈"></a>入栈</h3><p>由于栈只能从尾部插入，所以入栈操作实现起来非常简单，同时我们需要用上刚刚设计好的扩容，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">pushstack</span><span class="params">(arraystack satck_, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(stack_-&gt;top+<span class="number">1</span>==<span class="built_in">stack</span>-&gt;capacity)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(!extendstack(stack_))</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  stack_-&gt;<span class="built_in">array</span>[<span class="built_in">stack</span>-&gt;top+<span class="number">1</span>]=element;</span><br><span class="line">  stack_-&gt;top++;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判空"><a href="#判空" class="headerlink" title="判空"></a>判空</h3><p>在出栈之前，我们需要判断一下栈是否为空，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isempty</span><span class="params">(arraystack stack_)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(!stack_-&gt;+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//为空时返回0，不为空时返回1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="出栈"><a href="#出栈" class="headerlink" title="出栈"></a>出栈</h3><p>出栈操作便更加简单了，只需要将栈顶元素取出即可，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">popstack</span><span class="params">(arraystack stack_)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> stack_-&gt;<span class="built_in">array</span>[stack_-&gt;top--]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="共享栈"><a href="#共享栈" class="headerlink" title="共享栈"></a>共享栈</h2><p>为了提高栈的利用率，我们可以将一个固定长度的数组共享给两个栈来使用，将数组的两头作为两个栈的栈底，当两个栈的栈顶想要时表示栈已满。</p><h2 id="链表实现栈"><a href="#链表实现栈" class="headerlink" title="链表实现栈"></a>链表实现栈</h2><p>在上文中我们介绍了用顺序表实现栈，然而在实际中，使用链表来实现栈会显得更加方便。<br>我们规定链表表头指向栈顶，而栈顶指向后续的元素直至栈底。<br>每当有新的元素入栈，我们只需要在链表头部插入新的结点即可。</p><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><p>有链表作为基础，我们可以很容易初始化，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">listnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span> element;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">Node</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setuplist</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="入栈-1"><a href="#入栈-1" class="headerlink" title="入栈"></a>入栈</h3><p>有链表作为基础，我们可以很容易的入栈，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">pushstack</span><span class="params">(Node head, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  Node node=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));</span><br><span class="line">  <span class="keyword">if</span>(node==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  node-&gt;next=head-&gt;next;</span><br><span class="line">  node-&gt;element=element;</span><br><span class="line">  head-&gt;next=node;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判空-1"><a href="#判空-1" class="headerlink" title="判空"></a>判空</h3><p>在出栈之前我们需要判断栈是否为空，和链表类似的，我们只需要看头结点即可，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isempty</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="出栈-1"><a href="#出栈-1" class="headerlink" title="出栈"></a>出栈</h3><p>有上文和链表作为基础，我们可以很容易实现出栈，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">popstack</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  Node top=head-&gt;next;</span><br><span class="line">  head-&gt;next=head-&gt;next-&gt;next;</span><br><span class="line">  <span class="type">int</span> tmp=top-&gt;element;</span><br><span class="line">  <span class="built_in">free</span>(top);</span><br><span class="line">  top=NUll;</span><br><span class="line">  <span class="keyword">return</span> tmp;<span class="comment">//返回栈顶元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>栈本质上是基于前面所说的两种线性表的一种特殊线性表，有前面的学习作为基础，在学习时并不会产生多大困难。<br>相似的，下一节所讲的队列也是一种特殊的线性表。</p><h2 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a>返回目录</h2><p>你可以<a href="/2022/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01%EF%BC%9A%E6%A6%82%E8%AE%BA/" title="点击此处">点击此处</a>返回或查看目录。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;栈的概念&quot;&gt;&lt;a href=&quot;#栈的概念&quot; class=&quot;headerlink&quot; title=&quot;栈的概念&quot;&gt;&lt;/a&gt;栈的概念&lt;/h2&gt;&lt;p&gt;汉语中对栈字的解释是存储货物或供旅客住宿的房屋，对应的，在计算机中栈指的是数据暂时存储的地方。&lt;br&gt;栈的特点，就像我们玩的</summary>
      
    
    
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构_04：特殊链表</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-04%EF%BC%9A%E7%89%B9%E6%AE%8A%E9%93%BE%E8%A1%A8/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/02/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-04%EF%BC%9A%E7%89%B9%E6%AE%8A%E9%93%BE%E8%A1%A8/</id>
    <published>2023-02-06T16:56:15.000Z</published>
    <updated>2023-02-07T08:29:39.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h2><p>在单链表，也就是上一节提到的普通链表中，当我们需要完成插入或者删除操作时，我们通常需要找到需要操作的链结的上一个链结，为了解决这个问题，双向链表应运而生。双向链表的结构如下图所示：<br><img src="1.jpg"><br>基于双向链表的不同结构，我们需要对定义结构体，初始化，插入和删除功能进行更新，而其他功能的实现则与单链表相同。</p><h3 id="定义结构体"><a href="#定义结构体" class="headerlink" title="定义结构体"></a>定义结构体</h3><p>对于双向链表需要指向前一个链结的功能，我们需要在结构体中添加一个结构体指针变量来指向前一个结点，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">listnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span> element;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">next</span>;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">prev</span>;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于已经有了单链表基础，对于定义结构体此处不再过多赘述。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>双向链表在初始化时只需要将前链也设置为NULL即可，其余的和本教程中单链表一样，在初始化时仅对头链结进行进行初始化，同时对结构体指针重命名以便于后续操作，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">Node</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setuphead</span><span class="params">(Node headnode)</span></span><br><span class="line">&#123;</span><br><span class="line">  headnode=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));</span><br><span class="line">  headnode-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">  headnode-&gt;prev=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>和单链表不同的是，双向链表在插入时需要操作的链更多，这里我们依然用一个流程图来解释全过程：<br><img src="2.jpg"><br>基于此流程图，我们可以设计出一下代码，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertlist</span><span class="params">(Node head, <span class="type">int</span> element, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;<span class="comment">//向后寻找到插入结点的前结点</span></span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)<span class="comment">//插入位置非法</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Node node=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));<span class="comment">//新建一个链结并为其申请内存</span></span><br><span class="line">  <span class="keyword">if</span>(node==<span class="literal">NULL</span>)<span class="comment">//判断申请内存是否失败，失败返回0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  node-&gt;element=element;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next)<span class="comment">//先处理后结点，若存在</span></span><br><span class="line">  &#123;</span><br><span class="line">    node-&gt;next=head-&gt;next;</span><br><span class="line">    head-&gt;next-&gt;prev=node;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span><span class="comment">//若后结点不存在</span></span><br><span class="line">  &#123;</span><br><span class="line">    node-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  head-&gt;next=node;<span class="comment">//操作前结点</span></span><br><span class="line">  node-&gt;prev=head;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再完成这一系列操作后，我们可以将其正向反向分别遍历一遍以测试效果。</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>删除操作相较于插入较为简单，先看流程图：<br><img src="3.jpg"><br>据此，我们很容易设计出代码，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deletelist</span><span class="params">(Node head, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index &lt; <span class="number">1</span>)<span class="comment">//先找到位置</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  Node tmp=head-&gt;next;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next-&gt;next)<span class="comment">//删除非尾结点</span></span><br><span class="line">  &#123;</span><br><span class="line">    head-&gt;next-&gt;next-&gt;prev=head;</span><br><span class="line">    head-&gt;next=head-&gt;next-&gt;next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    head-&gt;next=<span class="literal">NULL</span>;<span class="comment">//删除尾结点</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">free</span>(tmp);</span><br><span class="line">  tmp=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双向链表的其他操作与单链表大致相同，这里就不做介绍了。</p><h2 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h2><p>相对于普通链表，循环链表多了一个尾结点指向头结点的链，这样的链表从任意结点出发都可以达到任意结点，结构如下图所示：<br><img src="4.jpg"><br>循环链表的代码较为简单，仅仅需要在普通链表的基础上将尾结点指向头结点即可，这里不做赘述。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>双向链表和循环链表本质上还是链表，它们只是链表为了适应不同环境的产物，这也就启发我们在实际运用数据结构时也要根据实际情况进行变化。</p><h2 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a>返回目录</h2><p>你可以<a href="/2022/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01%EF%BC%9A%E6%A6%82%E8%AE%BA/" title="点击此处">点击此处</a>返回或查看目录。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;双向链表&quot;&gt;&lt;a href=&quot;#双向链表&quot; class=&quot;headerlink&quot; title=&quot;双向链表&quot;&gt;&lt;/a&gt;双向链表&lt;/h2&gt;&lt;p&gt;在单链表，也就是上一节提到的普通链表中，当我们需要完成插入或者删除操作时，我们通常需要找到需要操作的链结的上一个链结，为了解</summary>
      
    
    
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构_03：链表</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-03%EF%BC%9A%E9%93%BE%E8%A1%A8/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/01/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-03%EF%BC%9A%E9%93%BE%E8%A1%A8/</id>
    <published>2023-01-13T09:22:34.000Z</published>
    <updated>2023-09-26T07:53:05.628Z</updated>
    
    <content type="html"><![CDATA[<h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><p>链，是一种什么样的东西呢？现实生活中我们都见过铁链金链和银链，它们都有一个特点，是一个环节一个环节环环相扣连接在一起的。而链表，则是一种具有相似结构的数据结构。<br>在链表中，每一个环节，即链结，都需要负责实现两个功能：</p><ol><li>记录某些数值；</li><li>指向下一链结。</li></ol><p>一般而言，链表可以分为两种，一种头链结为空仅指向第二个链结，另一种头链结不为空。这里我们只介绍前面一种。</p><h3 id="定义结构体"><a href="#定义结构体" class="headerlink" title="定义结构体"></a>定义结构体</h3><p>在此之前我们已经达成了对于链结功能的共识，为了方便我们将每一个小的链结都定义成一个结构体，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">listnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span> element;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在这个结构体中，我们定义了两个成员整型变量element和结构体指针变量next。其中，element负责执行第一个功能，记录某些数值，而next负责指向下一个链结。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>网上很多教程在初始化时会提前预想可能的链结个数，本教程奉行即插即建即用原则，在初始化时仅对头链结进行进行初始化。和顺序表一样，我们可以用typedef函数将结构体指针重命名以便于后续操作，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">Node</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setuphead</span><span class="params">(Node headnode)</span></span><br><span class="line">&#123;</span><br><span class="line">  headnode=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));</span><br><span class="line">  headnode-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个代码中，我们用malloc()函数为头链结申请了一块空间，接着保证不指向其他链结。</p><h3 id="判空"><a href="#判空" class="headerlink" title="判空"></a>判空</h3><p>有时我们需要判断一个链表是否为空，根据链表的性质，我们只需要判断头链结是否指向其他链结即可，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">emptylist</span><span class="params">(Node headnode)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(headnode-&gt;next)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//0为空，1为非空</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>和链子一样，链表的插入只需要将插入项与理论上的下一链结连接，再将原来连接这一链结的前一链结链接插入项即可。<br>这个过程描述起来有些抽象，其实很多人对链表这个概念到现在都很模糊，无妨，且看下面的流程图：<br><img src="pic.jpg"><br>在上述流程图中，我们我们表明了链结的序号，其中，序号0即为头链结。<br>至此我们已经知道了链表插入的操作流程，接下来我们就可以写程序来实现这个功能了，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertlist</span><span class="params">(Node head, <span class="type">int</span> element, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;<span class="comment">//向后寻找到插入结点的前结点</span></span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)<span class="comment">//插入位置非法</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Node node=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));<span class="comment">//新建一个链结并为其申请内存</span></span><br><span class="line">  <span class="keyword">if</span>(node==<span class="literal">NULL</span>)<span class="comment">//判断申请内存是否失败，失败返回0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  node-&gt;element=element;</span><br><span class="line">  node-&gt;next=head-&gt;next;</span><br><span class="line">  head-&gt;next=node;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>与插入相似的，从链表中删除一个元素只需要断开该元素与指向这个元素的链结之间的联系，并且将指向该元素的链结指向该元素指向的链结。<br>乍一听可能有些抽象，这里我们同样用一个流程图来表述：<br><img src="pic1.jpg"><br>通过该流程图，我们可以很好地理解删除的全过程，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deletelist</span><span class="params">(Node head, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  Node tmp=head-&gt;next;</span><br><span class="line">  head-&gt;next=head-&gt;next-&gt;next;</span><br><span class="line">  <span class="built_in">free</span>(tmp);</span><br><span class="line">  tmp=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找长度"><a href="#查找长度" class="headerlink" title="查找长度"></a>查找长度</h3><p>和顺序表不一样的是，我们在构建链表结构体时并没有引入一个变量来表示链表的长度，但是根据链表的定义，我们可以很容易地知道，一个链表的最后一个链结并不指向其他链结，所以我们只需要从头开始遍历整个链表，找到那个特殊的链结即可，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sizelist</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(head)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><p>在查找元素这个操作中，我们可以很容易采取遍历查找的方式来实现，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">findlist</span><span class="params">(Node head, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  head=head-&gt;next;</span><br><span class="line">  <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(head)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(head-&gt;element==element)</span><br><span class="line">      <span class="keyword">return</span> i;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找索引"><a href="#查找索引" class="headerlink" title="查找索引"></a>查找索引</h3><p>和顺序表不一样的是，我们在定义链表结构体时并没有引入索引这一变量，这也就导致了我们在查找索引时必须要从表头开始查找，因而在执行查找索引这一操作上链表的效率低于顺序表。<br>我们可以很容易地用遍历的方法来实现查找索引的功能，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">getlist</span><span class="params">(Node head, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(--index);</span><br><span class="line">  <span class="keyword">return</span> &amp;head-&gt;element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h3><p>当我们想要实现打印链表功能时，我们只需要从头开始边遍历整个链表边打印元素直至链结不再指向下一链结为止，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">printlist</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(head-&gt;next)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,head-&gt;element);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="顺序表与链表的区别"><a href="#顺序表与链表的区别" class="headerlink" title="顺序表与链表的区别"></a>顺序表与链表的区别</h2><p>如果我们深入思考了上一节中讲的顺序表，我们会发现它在一定程度上和数组十分相似，并且它在存储时也是一段连续的内存，而本节所讲的链表是不连续存储的。<br>在我们日常生活中，有时会遇到顺序表和链表如何抉择的问题。一个数据结构往往要实现增删查改四个功能。其实，当我们仔细比较其优缺点后，我们很容易发现顺序表在查改方面存在优势，而链表在增删方面存在优势。这也就意味着，当我们实际使用时，可以根据所用的次数来决定如何选择。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>链表作为一个经典的数据结构，在学习上会存在着一定的难度。但是，有了前面顺序表的基础，再加上认真钻研，实际理解起来还是很简单的。<br>值得注意的是，数据结构并不是一门基于某某语言的课程，实际上，我们可以用任何语言来写数据结构。同时，即便是同种语言下的数据结构，在实现起来也会存在代码的不同，本教程仅仅提供一种解决方案。<br>我们在学习时，一定不要局限于形式上的不同，关键要领略其核心思想，勤于思考才能事半功倍。</p><h3 id="附代码"><a href="#附代码" class="headerlink" title="附代码"></a>附代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">listnode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span> element;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">listnode</span>* <span class="title">Node</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setuphead</span><span class="params">(Node headnode)</span></span><br><span class="line">&#123;</span><br><span class="line">  headnode=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));</span><br><span class="line">  headnode-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">emptylist</span><span class="params">(Node headnode)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(headnode-&gt;next)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//0为空，1为非空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">insertlist</span><span class="params">(Node head, <span class="type">int</span> element, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Node node=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> listnode));</span><br><span class="line">  <span class="keyword">if</span>(node==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  node-&gt;element=element;</span><br><span class="line">  node-&gt;next=head-&gt;next;</span><br><span class="line">  head-&gt;next=node;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">deletelist</span><span class="params">(Node head, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(--index)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  Node tmp=head-&gt;next;</span><br><span class="line">  head-&gt;next=head-&gt;next-&gt;next;</span><br><span class="line">  <span class="built_in">free</span>(tmp);</span><br><span class="line">  tmp=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sizelist</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(head)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findlist</span><span class="params">(Node head, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  head=head-&gt;next;</span><br><span class="line">  <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(head)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(head-&gt;element==element)</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">getlist</span><span class="params">(Node head, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(head==<span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(--index);</span><br><span class="line">  <span class="keyword">return</span> &amp;head-&gt;element;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printlist</span><span class="params">(Node head)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>(head-&gt;next)</span><br><span class="line">  &#123;</span><br><span class="line">    head=head-&gt;next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,head-&gt;element);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>本教程参考资料如下：</p><ul><li>B站视频：<br><a class="link" href="https://www.bilibili.com/video/BV13W4y127Ey/?p=8&share_source=copy_web&vd_source=53065aea9ac10aafe4148aca8749443c">《数据结构与算法 已完结（CLion 2022 最新版）4K蓝光画质+杜比音效 全程高能》<i class="fas fa-external-link-alt"></i></a><br><a class="link" href="https://www.bilibili.com/video/BV1Fv4y1f7T1/?p=5&share_source=copy_web&vd_source=53065aea9ac10aafe4148aca8749443c">《【强烈推荐】深入浅出数据结构 - 顶尖程序员图文讲解 - UP主翻译校对 (已完结)》<i class="fas fa-external-link-alt"></i></a></li><li>CSDN文章：<br><a class="link" href="http://t.csdn.cn/xwPpA">《c语言链表详解（超详细）》<i class="fas fa-external-link-alt"></i></a><br><a class="link" href="http://t.csdn.cn/KuU8c">《关于链表，看这一篇就够了！（新手入门）》<i class="fas fa-external-link-alt"></i></a><br><a class="link" href="http://t.csdn.cn/80UTU">《链表(开辟和不开辟新空间)》<i class="fas fa-external-link-alt"></i></a></li></ul><h2 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a>返回目录</h2><p>你可以<a href="/2022/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01%EF%BC%9A%E6%A6%82%E8%AE%BA/" title="点击此处">点击此处</a>返回或查看目录。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;链表&quot;&gt;&lt;a href=&quot;#链表&quot; class=&quot;headerlink&quot; title=&quot;链表&quot;&gt;&lt;/a&gt;链表&lt;/h2&gt;&lt;p&gt;链，是一种什么样的东西呢？现实生活中我们都见过铁链金链和银链，它们都有一个特点，是一个环节一个环节环环相扣连接在一起的。而链表，则是一种具有</summary>
      
    
    
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构_02：顺序表</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2023/01/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-02%EF%BC%9A%E9%A1%BA%E5%BA%8F%E8%A1%A8/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2023/01/10/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-02%EF%BC%9A%E9%A1%BA%E5%BA%8F%E8%A1%A8/</id>
    <published>2023-01-10T15:21:20.000Z</published>
    <updated>2023-02-07T14:43:11.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组和表的区别"><a href="#数组和表的区别" class="headerlink" title="数组和表的区别"></a>数组和表的区别</h2><p>在开启本教程学习之前，相信大家已经有了一定语言基础，对于数组，大家一定十分熟悉。我们在使用数组时，或多或少会遇到以下几个问题：</p><ol><li>必须在一开始就声明数组的长度；</li><li>无法随时随用地对数组进行扩容，这就导致了一开始声明的数组的长度必须足够大；</li><li>可能会存在未使用的数组，这对内存是一种浪费。</li></ol><p>而表，就是一种可以解决这些问题的数据结构。<br>关于数组和表，更多的区别需要可能会涉及一些更加深层的知识，这里不做赘述，欢迎自己探知。</p><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><p>按照惯例，我们一般需要对顺序表进行一定的介绍：顺序表是用一段物理地址连续的存储单元依次存储数据元素的线性结构，一般情况下采用数组存储。在数组上完成数据的增删查改。<br>为了方便理解，我们可以简单地认为他是一种可以动态变化的连续存储的数组。</p><h3 id="定义结构体"><a href="#定义结构体" class="headerlink" title="定义结构体"></a>定义结构体</h3><p>顺序表的实现有很多方式，其中，我们采取结构体的方式。<br>首先我们需要定义一个结构体：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span>* <span class="built_in">array</span>;</span><br><span class="line">  <span class="type">int</span> capacity;</span><br><span class="line">  <span class="type">int</span> size;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在这段代码中，我们定义了一个叫list的结构体，它包含了三个成员，整型指针变量array，整型变量capacity和整型变量size。<br>和它们的名字一样，array表示顺序表所占的内存空间，capacity表示顺序表的理论最大容量，size表示顺序表中已经填满的容量，即实际长度。</p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>当我们定义完结构体后，我们还没有真正创建一个顺序表，即便我们在main函数中创建了一个结构体变量，它也不能真正算得上一个顺序表。<br>一个顺序表的实现必须要对其进行初始化，为了便于多次使用，我们采取自定义一个初始化函数的方式实现。<br>在此之前，为了便于后续操作，我们可以使用typedef函数将结构体指针<code>struct list*</code>重命名为<code>arraylist</code>，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span>* <span class="title">arraylist</span>;</span></span><br></pre></td></tr></table></figure><p>此后涉及<code>struct list*</code>的内容我们一律用<code>arraylist</code>代替，请根据需求自行代换。<br>根据我们此前定义的结构体的三个成员内存array，容量capacity，长度size，我们可以设想到初始化需要进行的操作。<br>我们都知道计算机在存储数据时需要用到内存空间，所以我们在初始化时，需要使用malloc()函数申请一块内存空间，使用此函数前我们需要引入新的头文件&lt;stdlib.h&gt;，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>接着，我们需要用变量表示顺序表初始的最大容量和实际长度。<br>综上，初始化一个顺序表需要实现以下三个功能：</p><ol><li>向计算机申请一块内存空间；</li><li>表示顺序表初始最大容量；</li><li>表示顺序表初始实际长度，即0；</li></ol><p>实现这三个功能并不难，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">setuplist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">list</span>-&gt;capacity=<span class="number">1</span>;<span class="comment">//此处初始化顺序表容量为1，实际可更改</span></span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*<span class="built_in">list</span>-&gt;capacity);</span><br><span class="line">  <span class="built_in">list</span>-&gt;size=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察上述代码块，有几点值得我们注意：</p><ol><li>在学习函数章节时，我们已经知道了函数传值和传地址的区别，此处由于我们需要对顺序表地址进行操作，故需要用到结构体指针；</li><li>表示结构体指针的成员需要用到-&gt;符号，或者也可以用(*指针名).成员名表示；</li><li>sizeof()函数会根据括号内的数据类型换算成对应的内存大小；</li></ol><p>当我们深入了解malloc()函数后，我们会知道有时malloc()函数也会申请内存失败，此时它会返回NULL，同时申请失败也就意味着初始化失败，我们可以采取一种方式来表示初始化的成功与否。<br>我们可以用布尔型返回true和false来表示初始化的结果，但是我们都知道true&#x3D;1，false&#x3D;0，又因为C语言中可能存在没有布尔型的情况，此处我们仅仅展示一个在部分C语言标准下存在的代码块，后续涉及判断内容我们一律采用int型，代码块即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line">...</span><br><span class="line"><span class="type">_Bool</span> test_1=<span class="literal">true</span>;</span><br><span class="line"><span class="type">bool</span> test_2=<span class="literal">false</span>;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>对于增加判断申请内存失败与否的初始化函数，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">setuplist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">list</span>-&gt;capacity=<span class="number">1</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*<span class="built_in">list</span>-&gt;capacity);</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，我们已经实现了顺序表的初始化功能。</p><h3 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h3><p>当我们初始化一个顺序表后，有时我们会面临最大容量不足的情况，当然我们一开始初始化的可以很容易的保证最大容量足够第一次使用，可是当我们后续使用时，有时要对其进行扩容。<br>在C语言中本身提供了realloc()函数重新申请一块内存，和malloc()一样，它也是包含于&lt;stdlib.h&gt;头文件中的，扩容的操作极其简单，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">extendlist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> newcapacity=<span class="built_in">list</span>-&gt;capacity*<span class="number">2</span>;<span class="comment">//内存扩展两倍</span></span><br><span class="line">  <span class="type">int</span>* newarray=<span class="built_in">realloc</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>)*newcapacity);</span><br><span class="line">  <span class="keyword">if</span>(newarray==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=newarray;</span><br><span class="line">  <span class="built_in">list</span>-&gt;capacity=newcapacity;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>一个顺序表被创建出来后，其中并没有元素，这时我们可以对其进行插入。和插入数组一样，我们顺序表的插入也需要三个要素：</p><ol><li>被插入的顺序表；</li><li>插入的数字；</li><li>插入的位置。</li></ol><p>基于此，我们很容易就可以设计出一个插入顺序表的函数，在我们正式开始进行写代码前，我们可以很容易的预见一些插入过程中可能会发生的问题：</p><ol><li>插入的位置在可插入的位置之外；</li><li>顺序表容积已满，需要扩容；</li><li>如何选择插入的方法。</li></ol><p>关于第一个问题，我们一般认为顺序表从的位置从1开始，那么当我们插入的位置小于1或很大时，这个插入是不可取的；关于第二个问题，我们只需要在插入过程中引入if判断是否需要扩容即可；关于第三个问题，我们可以很容易想到，我们只需要将顺序表的元素从尾部开始依次向后移动一位直到空出需要插入的位置，再将需要插入的元素插入需要插入的位置即可。<br>综上，我们可以很容易写出代码，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> element, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;size==<span class="built_in">list</span>-&gt;capacity)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(!extendlist(arraylist <span class="built_in">list</span>))</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="built_in">list</span>-&gt;size; i&gt;index<span class="number">-1</span>; i--)</span><br><span class="line">    <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]=<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i<span class="number">-1</span>];</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[index<span class="number">-1</span>]=element;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size++;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p>当我们学会了插入后，再学习删除是非常简单的，我们只需要根据位置信息，就可以将顺序表中的某个元素删除，值得注意是，输入的位置信息也需要在合法的范围内，代码即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deletelist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=index<span class="number">-1</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]=<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i+<span class="number">1</span>];</span><br><span class="line">  <span class="built_in">list</span>-&gt;size--;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找长度"><a href="#查找长度" class="headerlink" title="查找长度"></a>查找长度</h3><p>查找长度相当简单，我们只需要向主程序返回size值即可，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sizelist</span><span class="params">(<span class="built_in">array</span> <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">list</span>-&gt;size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h3><p>查找元素也同样简单，我们可以选择多种查找方式，这里我们采用简单的遍历查找，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">findlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]==element)</span><br><span class="line">      <span class="keyword">return</span> i+<span class="number">1</span>;<span class="comment">//数组从0开始，顺序表从1开始，故i+1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找索引"><a href="#查找索引" class="headerlink" title="查找索引"></a>查找索引</h3><p>查找索引即查找某个位置上对应元素的值，有了上述模块的经验，我们很容易设计出一个功能齐全的函数，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">getlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> &amp;<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[index<span class="number">-1</span>];<span class="comment">//注意数组索引和顺序表索引的区别</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h3><p>打印顺序表索引元素的函数也同样简单，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">printlist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="销毁"><a href="#销毁" class="headerlink" title="销毁"></a>销毁</h3><p>当我们使用完顺序表后，有时候需要销毁它释放内存，此时我们可以用free()函数来进行操作，free()函数必须与malloc()函数配套使用，即：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">destorylist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">free</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>);</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="built_in">list</span>-capacity=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>顺序表作为数据结构的第一节，并不算难，我们关键是要从中领会思想，学习一些函数的用法，为接下来链表的学习打好基础。</p><h3 id="附代码"><a href="#附代码" class="headerlink" title="附代码"></a>附代码</h3><p>全代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">int</span>* <span class="built_in">array</span>;</span><br><span class="line">  <span class="type">int</span> capacity;</span><br><span class="line">  <span class="type">int</span> size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span>* <span class="title">arraylist</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">setuplist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">list</span>-&gt;capacity=<span class="number">1</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*<span class="built_in">list</span>-&gt;capacity);</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">extendlist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> newcapacity=<span class="built_in">list</span>-&gt;capacity*<span class="number">2</span>;<span class="comment">//内存扩展两倍</span></span><br><span class="line">  <span class="type">int</span>* newarray=<span class="built_in">realloc</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>)*newcapacity);</span><br><span class="line">  <span class="keyword">if</span>(newarray==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=newarray;</span><br><span class="line">  <span class="built_in">list</span>-&gt;capacity=newcapacity;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">insertlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> element, <span class="type">int</span> index)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;size==<span class="built_in">list</span>-&gt;capacity)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(!extendlist(arraylist <span class="built_in">list</span>))</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="built_in">list</span>-&gt;size;i&gt;index<span class="number">-1</span>;--i)</span><br><span class="line">    <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]=<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i<span class="number">-1</span>];</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[index<span class="number">-1</span>]=element;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size++;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">deletelist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> index)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=index<span class="number">-1</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]=<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i+<span class="number">1</span>];</span><br><span class="line">  <span class="built_in">list</span>-&gt;size--;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sizelist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">list</span>-&gt;size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> element)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]==element)</span><br><span class="line">      <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">getlist</span><span class="params">(arraylist <span class="built_in">list</span>, <span class="type">int</span> index)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(index&lt;<span class="number">1</span>||index&gt;<span class="built_in">list</span>-&gt;size)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> &amp;<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[index<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printlist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>-&gt;size; i++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="built_in">list</span>-&gt;<span class="built_in">array</span>[i]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">destorylist</span><span class="params">(arraylist <span class="built_in">list</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">free</span>(<span class="built_in">list</span>-&gt;<span class="built_in">array</span>);</span><br><span class="line">  <span class="built_in">list</span>-&gt;<span class="built_in">array</span>=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="built_in">list</span>-capacity=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">list</span>-&gt;size=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="返回目录"><a href="#返回目录" class="headerlink" title="返回目录"></a>返回目录</h2><p>你可以<a href="/2022/12/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-01%EF%BC%9A%E6%A6%82%E8%AE%BA/" title="点击此处">点击此处</a>返回或查看目录。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;数组和表的区别&quot;&gt;&lt;a href=&quot;#数组和表的区别&quot; class=&quot;headerlink&quot; title=&quot;数组和表的区别&quot;&gt;&lt;/a&gt;数组和表的区别&lt;/h2&gt;&lt;p&gt;在开启本教程学习之前，相信大家已经有了一定语言基础，对于数组，大家一定十分熟悉。我们在使用数组时，或</summary>
      
    
    
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="数据结构" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
