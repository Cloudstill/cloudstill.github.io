<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title> 云湍小站 </title>
  
  <subtitle> 来自云上的湍流 </subtitle>
  <link href="https://gitee.com/cloudstill/cloudstill.git/atom.xml" rel="self"/>
  
  <link href="https://gitee.com/cloudstill/cloudstill.git/"/>
  <updated>2022-10-07T06:13:20.117Z</updated>
  <id>https://gitee.com/cloudstill/cloudstill.git/</id>
  
  <author>
    <name>云湍/Cloudstill</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯_基础练习_数列排序</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/07/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E6%95%B0%E5%88%97%E6%8E%92%E5%BA%8F/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/07/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E6%95%B0%E5%88%97%E6%8E%92%E5%BA%8F/</id>
    <published>2022-10-06T16:25:54.000Z</published>
    <updated>2022-10-07T06:13:20.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>资源限制<br>内存限制：512.0MB   C&#x2F;C++时间限制：1.0s   Java时间限制：3.0s   Python时间限制：5.0s<br>问题描述<br>　　给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;&#x3D;n&lt;&#x3D;200<br>输入格式<br>　　第一行为一个整数n。<br>　　第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。<br>输出格式<br>　　输出一行，按从小到大的顺序输出排序后的数列。<br>样例输入<br>5<br>8 3 6 4 9<br>样例输出<br>3 4 6 8 9</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>将数列放入数组中，将其依次进行两两比较并移动，保证较小的数永远位于较大的数右边，当遍历整个数组后即可输出合规的结果。为了简化程序，考虑引入函数来执行两两比较并移动的操作，此处需要注意的是局部变量和全局变量的关系，考虑引入指针来解决此问题。</p><h3 id="程序实例"><a href="#程序实例" class="headerlink" title="程序实例"></a>程序实例</h3><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int n,m;    int a, b, c;    int NUM[200];    scanf_s(&quot;%d&quot;, &amp;n);    for (m = 0; m &lt; n; m++)    &#123;        scanf_s(&quot;%d&quot;, &amp;NUM[m]);    &#125;    for (a = 0; a &lt; n; a++)     &#123;        for (b = 0; b &lt; n; b++)        &#123;            if (a &lt; b)            &#123;                swap(&amp;NUM[a], &amp;NUM[b]);            &#125;        &#125;    &#125;    for (c = 0; c &lt; n; c++)     &#123;        printf(&quot;%d &quot;, NUM[c]);    &#125;    return 0;&#125;int swap(int* num1, int* num2)&#123;    int i;    if ( *num1 &gt; *num2 )    &#123;        i = *num2;        *num2 = *num1;        *num1 = i;    &#125;    return 0;&#125;</code></pre><h3 id="实例输出"><a href="#实例输出" class="headerlink" title="实例输出"></a>实例输出</h3><p><img src="1.png"></p><h2 id="进阶方向"><a href="#进阶方向" class="headerlink" title="进阶方向"></a>进阶方向</h2><p>考虑简化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;资源限制&lt;br&gt;内存限制：512.0MB   C&amp;#x2F;C++时间限制：1.0s   Java时间限制：3.0s   Python时间限</summary>
      
    
    
    
    <category term="蓝桥杯" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="练习" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟教程C语言经典100例_02</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B_02/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B_02/</id>
    <published>2022-10-06T16:13:13.000Z</published>
    <updated>2022-10-07T02:36:03.832Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>企业发放的奖金根据利润提成。<br>利润(I)低于或等于10万元时，奖金可提10%；<br>利润高于10万元，低于20万元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；<br>20万到40万之间时，高于20万元的部分，可提成5%；<br>40万到60万之间时高于40万元的部分，可提成3%；<br>60万到100万之间时，高于60万元的部分，可提成1.5%；<br>高于100万元时，超过100万元的部分按1%提成。<br>从键盘输入当月利润I，求应发放奖金总数？</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>通过判定利润i的大小对其进行分段计算。</p><h3 id="程序实例"><a href="#程序实例" class="headerlink" title="程序实例"></a>程序实例</h3><pre><code>#include&lt;stdio.h&gt;int main()&#123;    double i,j;    double i_1, i_2, i_3, i_4, i_5;    printf(&quot;请输入利润\n&quot;);    scanf_s(&quot;%d&quot;, &amp;i);    i_1 = 100000 * 0.10;    i_2 = i_1 + 100000 * 0.075;    i_3 = i_1 + i_2 + 200000 * 0.05;    i_4 = i_1 + i_2 + i_3 + 200000 * 0.03;    i_5 = i_1 + i_2 + i_3 + i_4 + 400000 * 0.01;    if (i &lt;= 100000)     &#123;        j = i * 0.10;    &#125;    else if (i&lt;=200000)    &#123;        j = i_1 + (i - 100000) * 0.075;    &#125;    else if (i &lt;= 400000)    &#123;        j = i_2 + (i - 200000) * 0.05;    &#125;    else if (i &lt;= 600000)    &#123;        j = i_3 + (i - 400000) * 0.03;    &#125;    else if (i &lt;= 1000000)    &#123;        j = i_4 + (i - 600000) * 0.015;    &#125;    else if (i &gt; 1000000)    &#123;        j = i_5 + (i - 1000000) * 0.01;    &#125;    printf(&quot;提成为：%lf&quot;, j);    return 0;&#125;</code></pre><h2 id="进阶方向"><a href="#进阶方向" class="headerlink" title="进阶方向"></a>进阶方向</h2><p>简化程序。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;企业发放的奖金根据利润提成。&lt;br&gt;利润(I)低于或等于10万元时，奖金可提10%；&lt;br&gt;利润高于10万元，低于20万元时，低于10万元的</summary>
      
    
    
    
    <category term="菜鸟教程C语言经典100例练习" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="练习" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>C语言教程_02：一个简单的C程序</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-02%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84C%E7%A8%8B%E5%BA%8F/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-02%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84C%E7%A8%8B%E5%BA%8F/</id>
    <published>2022-10-06T12:20:11.000Z</published>
    <updated>2022-10-06T13:45:04.745Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个简单的C程序"><a href="#一个简单的C程序" class="headerlink" title="一个简单的C程序"></a>一个简单的C程序</h2><p>在接触C语言之前，大家或多或少会对C语言产生敬畏之心，认为它是一门很高深的语言，实则不然，且看代码：</p><pre><code>#include &lt;stdio.h&gt;int main()&#123;    /* 我的第一个 C 程序 */    printf(&quot;Hello, World! \n&quot;);    return 0;&#125;// 注：以//打头的某一行或者用/**/括起来的数行在程序中统称为注释，不会被编译器所编译// 一个好的注释对于程序而言是很重要的，它不仅可以让别人看懂你的代码，也可以便于自我的纠察</code></pre><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="02.jpg"></p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><p>观察这个程序代码，大家会发现它非常的简单，然而，作为一个程序它却相当完整。<br>我们可以简单将其分为三个部分，一是由#include打头的部分，二是int main()，三则是{}内的内容，这三个部分的存在，也就构成了一个完整的C程序<br>接下来将对这三个部分进行逐一分析。</p><p>#include &lt;stdio.h&gt;<br>#号所起的是一个标识的作用，是一个规范，可以看作无实际意义。include在英文中有包含的意思。stdio.h可以分为四个部分解读，std是standard的缩写，standard意为标准；i是input的缩写，input意为输入；o是output的缩写，output意为输出；h是head的缩写，head意为头，而.h顾名思义则是头文件的后缀。将这样一段代码逐字分析后拼接在一起，清晰指向了一个信息“这个程序可能包含一个标准输入输出的头文件”。</p><p>int main()<br>int被称为关键字，其作用是指定义main函数返回值的类型为int型，int型即整型，暂且可以将其等价于整数。在程序中这一部分称为函数头。main函数作为C程序中至关重要的部分，在每一个C程序中都会有一个main函数，作为一个程序的入口部分，也就是说程序都是从main函数头开始执行，然后进入到main函数中，执行其中语句的。()内的内容是我们可以填充的，初学C程序，可以暂且不管。</p><p>{}可以起到一个囊括的作用，其内部作为一个整体，称之为函数体。printf作为其中的一部分，我们将其成为执行语句，其中print的意思为打印或者输出，而f是fotmat的缩写，意为格式化，故printf的意思就是格式化输出。这里我们提到一个词输出，正是我们之前所提到了的“标准输入输出”中的“输出”。<br>return 0并不属于执行语句，我们将其称之为return语句。return的作用是向程序返回一个值，在这里就是0，而0又恰好是一个整数，符合int类型。</p><p>值得一提的是，C程序是严格区分中英文的，一切语句都要用英文进行书写，且在函数体内部的内容，执行语句和return语句末尾，都要加上；表示一条语句的结束，这也就意味着，C程序在编译时会跳过空格以及空行（和注释）直接跳到下一条语句。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对这样一个代码进行逐字分析后，相信大家对于C程序的概念有了一个具体的认知，并且，对于C语言不再过于恐惧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一个简单的C程序&quot;&gt;&lt;a href=&quot;#一个简单的C程序&quot; class=&quot;headerlink&quot; title=&quot;一个简单的C程序&quot;&gt;&lt;/a&gt;一个简单的C程序&lt;/h2&gt;&lt;p&gt;在接触C语言之前，大家或多或少会对C语言产生敬畏之心，认为它是一门很高深的语言，实则不然，且</summary>
      
    
    
    
    <category term="C语言教程" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>C语言教程_01：编译环境</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-01%EF%BC%9A%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/06/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B-01%EF%BC%9A%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/</id>
    <published>2022-10-06T11:59:16.000Z</published>
    <updated>2022-10-06T13:44:59.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习C语言，一个好用的编译器必不可少。<br>目前各大高校大多采用的是VC++6.0作为编译环境，众所周知，这款编译器由微软于1993年推出，其年龄相较于我而言也要大上10岁。<br>计算机学科本身就是一门走在时代前沿需要创新的学科，一款落后于时代的编译器，即使它十分经典，在笔者看来，也是可以被优化的。</p><h2 id="Visual-Studio-2022"><a href="#Visual-Studio-2022" class="headerlink" title="Visual Studio 2022"></a>Visual Studio 2022</h2><p>本教程选用Visual Studio 2022作为编译环境，其原因有以下几点，一是由于它够新，对于新手学习C语言而言其相对比较友好，一旦体验过Visual Studio 2022和其他编译器，如上文所提及的VC++6.0，你就明显感觉到它的好用；二则是你可以在Visual Studio官网免费下载到Visual Studio Community 2022。<br>你可以通过搜索引擎搜索Visual Studio 2022到官网下载，你也可以<a class="link" href="https://visualstudio.microsoft.com/zh-hans/vs/">点击此处<i class="fas fa-external-link-alt"></i></a>进行下载。</p><h3 id="Visual-Studio-2022使用教学"><a href="#Visual-Studio-2022使用教学" class="headerlink" title="Visual Studio 2022使用教学"></a>Visual Studio 2022使用教学</h3><p>关于Visual Studio 2022的使用教学，受限于文字形式，无法具体地和大家展开，这里推荐B站的一位up主，同时也是我C语言的启蒙老师：<a class="link" href="https://space.bilibili.com/19658621">Micro_Frank<i class="fas fa-external-link-alt"></i></a><br>你也可以在B站搜索由他创作的 vs2022(Visual Studio 2022)权威指南&amp;&amp;C语言&amp;&amp;软件工程开发的方向&amp;&amp;技巧要领<br>你可以<a class="link" href="https://www.bilibili.com/video/BV1Xt411g7jT/">点击此处<i class="fas fa-external-link-alt"></i></a>直接观看教程</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习C语言，一个好用的编译器必不可少。&lt;br&gt;目前各大高校大多采用的是VC++6.0作为编译环境，众所周知，这款编译器由微软于1993年推出</summary>
      
    
    
    
    <category term="C语言教程" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/C%E8%AF%AD%E8%A8%80%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="教程" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>菜鸟教程C语言经典100例_01</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/06/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B-01/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/06/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B-01/</id>
    <published>2022-10-06T05:11:20.000Z</published>
    <updated>2022-10-06T13:45:11.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>有 1、2、3、4 四个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>可填在百位、十位、个位的数字都是 1、2、3、4，组成所有的排列后再去掉不满足条件的排列。</p><h3 id="程序实例"><a href="#程序实例" class="headerlink" title="程序实例"></a>程序实例</h3><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int i,j,k;    printf(&quot;\n&quot;);    for(i=1;i&lt;5;i++) &#123; // 以下为三重循环        for(j=1;j&lt;5;j++) &#123;            for (k=1;k&lt;5;k++) &#123; // 确保i、j、k三位互不相同                if (i!=k&amp;&amp;i!=j&amp;&amp;j!=k) &#123;                     printf(&quot;%d,%d,%d\n&quot;,i,j,k);                &#125;            &#125;        &#125;    &#125;    return 0;&#125;</code></pre><h3 id="实例输出"><a href="#实例输出" class="headerlink" title="实例输出"></a>实例输出</h3><p>以上实例输出结果为：</p><pre><code>1,2,31,2,41,3,21,3,41,4,21,4,32,1,32,1,42,3,12,3,42,4,12,4,33,1,23,1,43,2,13,2,43,4,13,4,24,1,24,1,34,2,14,2,34,3,14,3,2</code></pre><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>如果取五个不连续的数进行以上排列，如何完成？</p><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>考虑使用数组使其变为连续的数。</p><h3 id="程序实例-1"><a href="#程序实例-1" class="headerlink" title="程序实例"></a>程序实例</h3><pre><code>#include&lt;stdio.h&gt;int main()&#123;    int NUM[5];    int a, b, c, d, e;    printf(&quot;输入要操作的五个数字\n&quot;);    scanf_s(&quot;%d%d%d%d%d&quot;, &amp;NUM[0], &amp;NUM[1], &amp;NUM[2], &amp;NUM[3], &amp;NUM[4]);    for (a = 0; a &lt; 5; a++)            &#123;                for (b = 0; b &lt; 5; b++)                &#123;                    for (c = 0; c &lt; 5; c++)                    &#123;                        for (d = 0; d &lt; 5; d++)                         &#123;                            for (e = 0; e &lt; 5; e++)                            &#123;                                if (a != b &amp;&amp; b != c &amp;&amp; c != d &amp;&amp; d != e &amp;&amp; a != c &amp;&amp; a != d &amp;&amp; a != e &amp;&amp; b != d &amp;&amp; b != e &amp;&amp; c != d &amp;&amp; c != e &amp;&amp; d != e )                                &#123;                                    printf(&quot;%d %d %d %d %d\n&quot;, NUM[a], NUM[b], NUM[c], NUM[d], NUM[e]);                                &#125;                            &#125;                        &#125;                    &#125;                &#125;            &#125;            return 0;&#125;</code></pre><h2 id="进阶方向"><a href="#进阶方向" class="headerlink" title="进阶方向"></a>进阶方向</h2><p>考虑采用一种方式简化if语句中去重的步骤以简化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;有 1、2、3、4 四个数字，能组成多少个互不相同且无重复数字的三位数？都是多少？&lt;/p&gt;
&lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路</summary>
      
    
    
    
    <category term="菜鸟教程C语言经典100例练习" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8BC%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8100%E4%BE%8B%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="练习" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>关于猜数字游戏</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/10/05/%E5%85%B3%E4%BA%8E%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/10/05/%E5%85%B3%E4%BA%8E%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F/</id>
    <published>2022-10-05T14:27:23.000Z</published>
    <updated>2022-10-06T13:44:46.406Z</updated>
    
    <content type="html"><![CDATA[<p>初学c语言，做了一个基于C语言的比较经典的猜数字游戏。<br>以下为源代码以及部分运行图片。</p><pre><code>#include&lt;stdio.h&gt;#include&lt;time.h&gt;#include&lt;stdlib.h&gt;int main()&#123;    int min = 1;    int x, y, z, max;    int a = 0;        printf(&quot;欢迎来到猜数字游戏，本游戏由云湍编写，版本号v1.5.5\n    本游戏会随机生成一个数字，你需要用尽量少的次数猜出这个数字\n&quot;);    printf(&quot;请选择模式：\n    1.简单模式 数字范围1~100\n    2.普通模式 数字范围1~1000\n    3.困难模式 数字范围1~10000\n    4.自定义模式\n输入对应的序号数字即可选择模式\n&quot;);    scanf_s(&quot;%d&quot;, &amp;z);    switch (z)    &#123;    case 1:        max = 100;        break;    case 2:        max = 1000;        break;    case 3:        max = 10000;        break;    case 4:        printf(&quot;请输入数字范围的上限\n&quot;);        scanf_s(&quot;%d&quot;, &amp;max);        break;    &#125;        srand(time(0));    x = rand() % (max - min) + min;  // “%”为模运算        while (1)     &#123;        printf(&quot;请输入一个数字\n&quot;);        scanf_s(&quot;%d&quot;, &amp;y);        if (y &lt; x)            printf(&quot;小了\n&quot;);        else if (y == x)        &#123;            printf(&quot;恭喜，答对了\n&quot;);            a = a + 1;            break;        &#125;        else if (y &gt; x)            printf(&quot;大了\n&quot;);        a++;    &#125;        printf(&quot;您已累计尝试%d次\n&quot;, a);    switch (z)    &#123;    case 1:        if (a == 1)        &#123;            printf(&quot;一发入魂！您的运气也太好了吧\n&quot;);        &#125;        if (a &gt; 1 &amp;&amp; a &lt; 6)         &#123;            printf(&quot;出神入化！您真是实力与运气并存\n&quot;);        &#125;        if (a &gt; 5 &amp;&amp; a &lt; 9)        &#123;        printf(&quot;非常不错！您的水平已经很高了\n&quot;);        &#125;        if (a &gt; 8)        &#123;        printf(&quot;勉勉强强！您的水平还需要提高\n&quot;);        &#125;        break;        case 2:        if (a == 1)        &#123;            printf(&quot;一发入魂！您的运气也太好了吧\n&quot;);        &#125;        if (a &gt; 1 &amp;&amp; a &lt; 16)        &#123;            printf(&quot;出神入化！您真是实力与运气并存\n&quot;);        &#125;        if (a &gt; 15 &amp;&amp; a &lt; 19)        &#123;            printf(&quot;非常不错！您的水平已经很高了\n&quot;);        &#125;        if (a &gt; 18)        &#123;            printf(&quot;勉勉强强！您的水平还需要提高\n&quot;);        &#125;        break;        case 3:        if (a == 1)        &#123;            printf(&quot;一发入魂！您的运气也太好了吧\n&quot;);        &#125;        if (a &gt; 1 &amp;&amp; a &lt; 26)        &#123;            printf(&quot;出神入化！您真是实力与运气并存\n&quot;);        &#125;        if (a &gt; 25 &amp;&amp; a &lt; 29)        &#123;            printf(&quot;非常不错！您的水平已经很高了\n&quot;);        &#125;        if (a &gt; 28)        &#123;            printf(&quot;勉勉强强！您的水平还需要提高\n&quot;);        &#125;        break;        case 4:        printf(&quot;感谢您的参与，该模式下无评分系统\n&quot;);        break;    &#125;    system(&quot;pause&quot;);    return 0;&#125;</code></pre><p><img src="pic_01.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;初学c语言，做了一个基于C语言的比较经典的猜数字游戏。&lt;br&gt;以下为源代码以及部分运行图片。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;time.h&amp;gt;
#include&amp;lt;stdlib.h&amp;gt;

in</summary>
      
    
    
    
    <category term="杂项" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="C语言" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="游戏" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>来自云上的湍流</title>
    <link href="https://gitee.com/cloudstill/cloudstill.git/2022/09/07/%E6%9D%A5%E8%87%AA%E4%BA%91%E4%B8%8A%E7%9A%84%E6%B9%8D%E6%B5%81/"/>
    <id>https://gitee.com/cloudstill/cloudstill.git/2022/09/07/%E6%9D%A5%E8%87%AA%E4%BA%91%E4%B8%8A%E7%9A%84%E6%B9%8D%E6%B5%81/</id>
    <published>2022-09-07T02:13:09.000Z</published>
    <updated>2022-10-06T13:45:18.833Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到本blog，很高兴在此与大家相识！<br><img src="test_01.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;欢迎来到本blog，很高兴在此与大家相识！&lt;br&gt;&lt;img src=&quot;test_01.jpg&quot;&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="杂项" scheme="https://gitee.com/cloudstill/cloudstill.git/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="杂项" scheme="https://gitee.com/cloudstill/cloudstill.git/tags/%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
</feed>
